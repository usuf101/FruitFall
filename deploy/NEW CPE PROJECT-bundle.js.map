{
  "version": 3,
  "sources": ["../node_modules/earcut/src/earcut.js", "../node_modules/@wonderlandengine/components/dist/8thwall-camera.js", "../node_modules/@wonderlandengine/components/dist/anchor.js", "../node_modules/@wonderlandengine/components/dist/utils/webxr.js", "../node_modules/@wonderlandengine/components/dist/cursor-target.js", "../node_modules/@wonderlandengine/components/dist/cursor.js", "../node_modules/gl-matrix/esm/common.js", "../node_modules/gl-matrix/esm/mat3.js", "../node_modules/gl-matrix/esm/mat4.js", "../node_modules/gl-matrix/esm/quat.js", "../node_modules/gl-matrix/esm/vec3.js", "../node_modules/gl-matrix/esm/vec4.js", "../node_modules/gl-matrix/esm/quat2.js", "../node_modules/@wonderlandengine/components/dist/hit-test-location.js", "../node_modules/@wonderlandengine/components/dist/debug-object.js", "../node_modules/@wonderlandengine/components/dist/device-orientation-look.js", "../node_modules/@wonderlandengine/components/dist/finger-cursor.js", "../node_modules/@wonderlandengine/components/dist/fixed-foveation.js", "../node_modules/@wonderlandengine/components/dist/hand-tracking.js", "../node_modules/@wonderlandengine/components/dist/howler-audio-listener.js", "../node_modules/@wonderlandengine/spatial-audio/dist/audio-source.js", "../node_modules/@wonderlandengine/spatial-audio/dist/audio-listener.js", "../node_modules/@wonderlandengine/spatial-audio/dist/audio-manager.js", "../node_modules/@wonderlandengine/spatial-audio/dist/audio-players.js", "../node_modules/@wonderlandengine/components/dist/howler-audio-source.js", "../node_modules/@wonderlandengine/components/dist/image-texture.js", "../node_modules/@wonderlandengine/components/dist/utils/utils.js", "../node_modules/@wonderlandengine/components/dist/mouse-look.js", "../node_modules/@wonderlandengine/components/dist/player-height.js", "../node_modules/@wonderlandengine/components/dist/target-framerate.js", "../node_modules/@wonderlandengine/components/dist/teleport.js", "../node_modules/@wonderlandengine/components/dist/trail.js", "../node_modules/@wonderlandengine/components/dist/two-joint-ik-solver.js", "../node_modules/@wonderlandengine/components/dist/video-texture.js", "../node_modules/@wonderlandengine/components/dist/vr-mode-active-switch.js", "../node_modules/@wonderlandengine/components/dist/plane-detection.js", "../node_modules/@wonderlandengine/components/dist/vrm.js", "../node_modules/@wonderlandengine/components/dist/wasd-controls.js", "../node_modules/@wonderlandengine/components/dist/input-profile.js", "../node_modules/@wonderlandengine/components/dist/orbital-camera.js", "../js/fruit-spawner.js", "../js/index.js"],
  "sourcesContent": ["'use strict';\r\n\r\nmodule.exports = earcut;\r\nmodule.exports.default = earcut;\r\n\r\nfunction earcut(data, holeIndices, dim) {\r\n\r\n    dim = dim || 2;\r\n\r\n    var hasHoles = holeIndices && holeIndices.length,\r\n        outerLen = hasHoles ? holeIndices[0] * dim : data.length,\r\n        outerNode = linkedList(data, 0, outerLen, dim, true),\r\n        triangles = [];\r\n\r\n    if (!outerNode || outerNode.next === outerNode.prev) return triangles;\r\n\r\n    var minX, minY, maxX, maxY, x, y, invSize;\r\n\r\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\r\n\r\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\r\n    if (data.length > 80 * dim) {\r\n        minX = maxX = data[0];\r\n        minY = maxY = data[1];\r\n\r\n        for (var i = dim; i < outerLen; i += dim) {\r\n            x = data[i];\r\n            y = data[i + 1];\r\n            if (x < minX) minX = x;\r\n            if (y < minY) minY = y;\r\n            if (x > maxX) maxX = x;\r\n            if (y > maxY) maxY = y;\r\n        }\r\n\r\n        // minX, minY and invSize are later used to transform coords into integers for z-order calculation\r\n        invSize = Math.max(maxX - minX, maxY - minY);\r\n        invSize = invSize !== 0 ? 32767 / invSize : 0;\r\n    }\r\n\r\n    earcutLinked(outerNode, triangles, dim, minX, minY, invSize, 0);\r\n\r\n    return triangles;\r\n}\r\n\r\n// create a circular doubly linked list from polygon points in the specified winding order\r\nfunction linkedList(data, start, end, dim, clockwise) {\r\n    var i, last;\r\n\r\n    if (clockwise === (signedArea(data, start, end, dim) > 0)) {\r\n        for (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\r\n    } else {\r\n        for (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\r\n    }\r\n\r\n    if (last && equals(last, last.next)) {\r\n        removeNode(last);\r\n        last = last.next;\r\n    }\r\n\r\n    return last;\r\n}\r\n\r\n// eliminate colinear or duplicate points\r\nfunction filterPoints(start, end) {\r\n    if (!start) return start;\r\n    if (!end) end = start;\r\n\r\n    var p = start,\r\n        again;\r\n    do {\r\n        again = false;\r\n\r\n        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\r\n            removeNode(p);\r\n            p = end = p.prev;\r\n            if (p === p.next) break;\r\n            again = true;\r\n\r\n        } else {\r\n            p = p.next;\r\n        }\r\n    } while (again || p !== end);\r\n\r\n    return end;\r\n}\r\n\r\n// main ear slicing loop which triangulates a polygon (given as a linked list)\r\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\r\n    if (!ear) return;\r\n\r\n    // interlink polygon nodes in z-order\r\n    if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\r\n\r\n    var stop = ear,\r\n        prev, next;\r\n\r\n    // iterate through ears, slicing them one by one\r\n    while (ear.prev !== ear.next) {\r\n        prev = ear.prev;\r\n        next = ear.next;\r\n\r\n        if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\r\n            // cut off the triangle\r\n            triangles.push(prev.i / dim | 0);\r\n            triangles.push(ear.i / dim | 0);\r\n            triangles.push(next.i / dim | 0);\r\n\r\n            removeNode(ear);\r\n\r\n            // skipping the next vertex leads to less sliver triangles\r\n            ear = next.next;\r\n            stop = next.next;\r\n\r\n            continue;\r\n        }\r\n\r\n        ear = next;\r\n\r\n        // if we looped through the whole remaining polygon and can't find any more ears\r\n        if (ear === stop) {\r\n            // try filtering points and slicing again\r\n            if (!pass) {\r\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);\r\n\r\n            // if this didn't work, try curing all small self-intersections locally\r\n            } else if (pass === 1) {\r\n                ear = cureLocalIntersections(filterPoints(ear), triangles, dim);\r\n                earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\r\n\r\n            // as a last resort, try splitting the remaining polygon into two\r\n            } else if (pass === 2) {\r\n                splitEarcut(ear, triangles, dim, minX, minY, invSize);\r\n            }\r\n\r\n            break;\r\n        }\r\n    }\r\n}\r\n\r\n// check whether a polygon node forms a valid ear with adjacent nodes\r\nfunction isEar(ear) {\r\n    var a = ear.prev,\r\n        b = ear,\r\n        c = ear.next;\r\n\r\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\r\n\r\n    // now make sure we don't have other points inside the potential ear\r\n    var ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\r\n\r\n    // triangle bbox; min & max are calculated like this for speed\r\n    var x0 = ax < bx ? (ax < cx ? ax : cx) : (bx < cx ? bx : cx),\r\n        y0 = ay < by ? (ay < cy ? ay : cy) : (by < cy ? by : cy),\r\n        x1 = ax > bx ? (ax > cx ? ax : cx) : (bx > cx ? bx : cx),\r\n        y1 = ay > by ? (ay > cy ? ay : cy) : (by > cy ? by : cy);\r\n\r\n    var p = c.next;\r\n    while (p !== a) {\r\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 &&\r\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) &&\r\n            area(p.prev, p, p.next) >= 0) return false;\r\n        p = p.next;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nfunction isEarHashed(ear, minX, minY, invSize) {\r\n    var a = ear.prev,\r\n        b = ear,\r\n        c = ear.next;\r\n\r\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\r\n\r\n    var ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\r\n\r\n    // triangle bbox; min & max are calculated like this for speed\r\n    var x0 = ax < bx ? (ax < cx ? ax : cx) : (bx < cx ? bx : cx),\r\n        y0 = ay < by ? (ay < cy ? ay : cy) : (by < cy ? by : cy),\r\n        x1 = ax > bx ? (ax > cx ? ax : cx) : (bx > cx ? bx : cx),\r\n        y1 = ay > by ? (ay > cy ? ay : cy) : (by > cy ? by : cy);\r\n\r\n    // z-order range for the current triangle bbox;\r\n    var minZ = zOrder(x0, y0, minX, minY, invSize),\r\n        maxZ = zOrder(x1, y1, minX, minY, invSize);\r\n\r\n    var p = ear.prevZ,\r\n        n = ear.nextZ;\r\n\r\n    // look for points inside the triangle in both directions\r\n    while (p && p.z >= minZ && n && n.z <= maxZ) {\r\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\r\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\r\n        p = p.prevZ;\r\n\r\n        if (n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\r\n            pointInTriangle(ax, ay, bx, by, cx, cy, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\r\n        n = n.nextZ;\r\n    }\r\n\r\n    // look for remaining points in decreasing z-order\r\n    while (p && p.z >= minZ) {\r\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\r\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\r\n        p = p.prevZ;\r\n    }\r\n\r\n    // look for remaining points in increasing z-order\r\n    while (n && n.z <= maxZ) {\r\n        if (n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\r\n            pointInTriangle(ax, ay, bx, by, cx, cy, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\r\n        n = n.nextZ;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\n// go through all polygon nodes and cure small local self-intersections\r\nfunction cureLocalIntersections(start, triangles, dim) {\r\n    var p = start;\r\n    do {\r\n        var a = p.prev,\r\n            b = p.next.next;\r\n\r\n        if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\r\n\r\n            triangles.push(a.i / dim | 0);\r\n            triangles.push(p.i / dim | 0);\r\n            triangles.push(b.i / dim | 0);\r\n\r\n            // remove two nodes involved\r\n            removeNode(p);\r\n            removeNode(p.next);\r\n\r\n            p = start = b;\r\n        }\r\n        p = p.next;\r\n    } while (p !== start);\r\n\r\n    return filterPoints(p);\r\n}\r\n\r\n// try splitting polygon into two and triangulate them independently\r\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\r\n    // look for a valid diagonal that divides the polygon into two\r\n    var a = start;\r\n    do {\r\n        var b = a.next.next;\r\n        while (b !== a.prev) {\r\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\r\n                // split the polygon in two by the diagonal\r\n                var c = splitPolygon(a, b);\r\n\r\n                // filter colinear points around the cuts\r\n                a = filterPoints(a, a.next);\r\n                c = filterPoints(c, c.next);\r\n\r\n                // run earcut on each half\r\n                earcutLinked(a, triangles, dim, minX, minY, invSize, 0);\r\n                earcutLinked(c, triangles, dim, minX, minY, invSize, 0);\r\n                return;\r\n            }\r\n            b = b.next;\r\n        }\r\n        a = a.next;\r\n    } while (a !== start);\r\n}\r\n\r\n// link every hole into the outer loop, producing a single-ring polygon without holes\r\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\r\n    var queue = [],\r\n        i, len, start, end, list;\r\n\r\n    for (i = 0, len = holeIndices.length; i < len; i++) {\r\n        start = holeIndices[i] * dim;\r\n        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\r\n        list = linkedList(data, start, end, dim, false);\r\n        if (list === list.next) list.steiner = true;\r\n        queue.push(getLeftmost(list));\r\n    }\r\n\r\n    queue.sort(compareX);\r\n\r\n    // process holes from left to right\r\n    for (i = 0; i < queue.length; i++) {\r\n        outerNode = eliminateHole(queue[i], outerNode);\r\n    }\r\n\r\n    return outerNode;\r\n}\r\n\r\nfunction compareX(a, b) {\r\n    return a.x - b.x;\r\n}\r\n\r\n// find a bridge between vertices that connects hole with an outer ring and and link it\r\nfunction eliminateHole(hole, outerNode) {\r\n    var bridge = findHoleBridge(hole, outerNode);\r\n    if (!bridge) {\r\n        return outerNode;\r\n    }\r\n\r\n    var bridgeReverse = splitPolygon(bridge, hole);\r\n\r\n    // filter collinear points around the cuts\r\n    filterPoints(bridgeReverse, bridgeReverse.next);\r\n    return filterPoints(bridge, bridge.next);\r\n}\r\n\r\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\r\nfunction findHoleBridge(hole, outerNode) {\r\n    var p = outerNode,\r\n        hx = hole.x,\r\n        hy = hole.y,\r\n        qx = -Infinity,\r\n        m;\r\n\r\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\r\n    // segment's endpoint with lesser x will be potential connection point\r\n    do {\r\n        if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\r\n            var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\r\n            if (x <= hx && x > qx) {\r\n                qx = x;\r\n                m = p.x < p.next.x ? p : p.next;\r\n                if (x === hx) return m; // hole touches outer segment; pick leftmost endpoint\r\n            }\r\n        }\r\n        p = p.next;\r\n    } while (p !== outerNode);\r\n\r\n    if (!m) return null;\r\n\r\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\r\n    // if there are no points found, we have a valid connection;\r\n    // otherwise choose the point of the minimum angle with the ray as connection point\r\n\r\n    var stop = m,\r\n        mx = m.x,\r\n        my = m.y,\r\n        tanMin = Infinity,\r\n        tan;\r\n\r\n    p = m;\r\n\r\n    do {\r\n        if (hx >= p.x && p.x >= mx && hx !== p.x &&\r\n                pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\r\n\r\n            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\r\n\r\n            if (locallyInside(p, hole) &&\r\n                (tan < tanMin || (tan === tanMin && (p.x > m.x || (p.x === m.x && sectorContainsSector(m, p)))))) {\r\n                m = p;\r\n                tanMin = tan;\r\n            }\r\n        }\r\n\r\n        p = p.next;\r\n    } while (p !== stop);\r\n\r\n    return m;\r\n}\r\n\r\n// whether sector in vertex m contains sector in vertex p in the same coordinates\r\nfunction sectorContainsSector(m, p) {\r\n    return area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\r\n}\r\n\r\n// interlink polygon nodes in z-order\r\nfunction indexCurve(start, minX, minY, invSize) {\r\n    var p = start;\r\n    do {\r\n        if (p.z === 0) p.z = zOrder(p.x, p.y, minX, minY, invSize);\r\n        p.prevZ = p.prev;\r\n        p.nextZ = p.next;\r\n        p = p.next;\r\n    } while (p !== start);\r\n\r\n    p.prevZ.nextZ = null;\r\n    p.prevZ = null;\r\n\r\n    sortLinked(p);\r\n}\r\n\r\n// Simon Tatham's linked list merge sort algorithm\r\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\r\nfunction sortLinked(list) {\r\n    var i, p, q, e, tail, numMerges, pSize, qSize,\r\n        inSize = 1;\r\n\r\n    do {\r\n        p = list;\r\n        list = null;\r\n        tail = null;\r\n        numMerges = 0;\r\n\r\n        while (p) {\r\n            numMerges++;\r\n            q = p;\r\n            pSize = 0;\r\n            for (i = 0; i < inSize; i++) {\r\n                pSize++;\r\n                q = q.nextZ;\r\n                if (!q) break;\r\n            }\r\n            qSize = inSize;\r\n\r\n            while (pSize > 0 || (qSize > 0 && q)) {\r\n\r\n                if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\r\n                    e = p;\r\n                    p = p.nextZ;\r\n                    pSize--;\r\n                } else {\r\n                    e = q;\r\n                    q = q.nextZ;\r\n                    qSize--;\r\n                }\r\n\r\n                if (tail) tail.nextZ = e;\r\n                else list = e;\r\n\r\n                e.prevZ = tail;\r\n                tail = e;\r\n            }\r\n\r\n            p = q;\r\n        }\r\n\r\n        tail.nextZ = null;\r\n        inSize *= 2;\r\n\r\n    } while (numMerges > 1);\r\n\r\n    return list;\r\n}\r\n\r\n// z-order of a point given coords and inverse of the longer side of data bbox\r\nfunction zOrder(x, y, minX, minY, invSize) {\r\n    // coords are transformed into non-negative 15-bit integer range\r\n    x = (x - minX) * invSize | 0;\r\n    y = (y - minY) * invSize | 0;\r\n\r\n    x = (x | (x << 8)) & 0x00FF00FF;\r\n    x = (x | (x << 4)) & 0x0F0F0F0F;\r\n    x = (x | (x << 2)) & 0x33333333;\r\n    x = (x | (x << 1)) & 0x55555555;\r\n\r\n    y = (y | (y << 8)) & 0x00FF00FF;\r\n    y = (y | (y << 4)) & 0x0F0F0F0F;\r\n    y = (y | (y << 2)) & 0x33333333;\r\n    y = (y | (y << 1)) & 0x55555555;\r\n\r\n    return x | (y << 1);\r\n}\r\n\r\n// find the leftmost node of a polygon ring\r\nfunction getLeftmost(start) {\r\n    var p = start,\r\n        leftmost = start;\r\n    do {\r\n        if (p.x < leftmost.x || (p.x === leftmost.x && p.y < leftmost.y)) leftmost = p;\r\n        p = p.next;\r\n    } while (p !== start);\r\n\r\n    return leftmost;\r\n}\r\n\r\n// check if a point lies within a convex triangle\r\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\r\n    return (cx - px) * (ay - py) >= (ax - px) * (cy - py) &&\r\n           (ax - px) * (by - py) >= (bx - px) * (ay - py) &&\r\n           (bx - px) * (cy - py) >= (cx - px) * (by - py);\r\n}\r\n\r\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\r\nfunction isValidDiagonal(a, b) {\r\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && // dones't intersect other edges\r\n           (locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b) && // locally visible\r\n            (area(a.prev, a, b.prev) || area(a, b.prev, b)) || // does not create opposite-facing sectors\r\n            equals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0); // special zero-length case\r\n}\r\n\r\n// signed area of a triangle\r\nfunction area(p, q, r) {\r\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\r\n}\r\n\r\n// check if two points are equal\r\nfunction equals(p1, p2) {\r\n    return p1.x === p2.x && p1.y === p2.y;\r\n}\r\n\r\n// check if two segments intersect\r\nfunction intersects(p1, q1, p2, q2) {\r\n    var o1 = sign(area(p1, q1, p2));\r\n    var o2 = sign(area(p1, q1, q2));\r\n    var o3 = sign(area(p2, q2, p1));\r\n    var o4 = sign(area(p2, q2, q1));\r\n\r\n    if (o1 !== o2 && o3 !== o4) return true; // general case\r\n\r\n    if (o1 === 0 && onSegment(p1, p2, q1)) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\r\n    if (o2 === 0 && onSegment(p1, q2, q1)) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\r\n    if (o3 === 0 && onSegment(p2, p1, q2)) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\r\n    if (o4 === 0 && onSegment(p2, q1, q2)) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\r\n\r\n    return false;\r\n}\r\n\r\n// for collinear points p, q, r, check if point q lies on segment pr\r\nfunction onSegment(p, q, r) {\r\n    return q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) && q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y);\r\n}\r\n\r\nfunction sign(num) {\r\n    return num > 0 ? 1 : num < 0 ? -1 : 0;\r\n}\r\n\r\n// check if a polygon diagonal intersects any polygon segments\r\nfunction intersectsPolygon(a, b) {\r\n    var p = a;\r\n    do {\r\n        if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\r\n                intersects(p, p.next, a, b)) return true;\r\n        p = p.next;\r\n    } while (p !== a);\r\n\r\n    return false;\r\n}\r\n\r\n// check if a polygon diagonal is locally inside the polygon\r\nfunction locallyInside(a, b) {\r\n    return area(a.prev, a, a.next) < 0 ?\r\n        area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 :\r\n        area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\r\n}\r\n\r\n// check if the middle point of a polygon diagonal is inside the polygon\r\nfunction middleInside(a, b) {\r\n    var p = a,\r\n        inside = false,\r\n        px = (a.x + b.x) / 2,\r\n        py = (a.y + b.y) / 2;\r\n    do {\r\n        if (((p.y > py) !== (p.next.y > py)) && p.next.y !== p.y &&\r\n                (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\r\n            inside = !inside;\r\n        p = p.next;\r\n    } while (p !== a);\r\n\r\n    return inside;\r\n}\r\n\r\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\r\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\r\nfunction splitPolygon(a, b) {\r\n    var a2 = new Node(a.i, a.x, a.y),\r\n        b2 = new Node(b.i, b.x, b.y),\r\n        an = a.next,\r\n        bp = b.prev;\r\n\r\n    a.next = b;\r\n    b.prev = a;\r\n\r\n    a2.next = an;\r\n    an.prev = a2;\r\n\r\n    b2.next = a2;\r\n    a2.prev = b2;\r\n\r\n    bp.next = b2;\r\n    b2.prev = bp;\r\n\r\n    return b2;\r\n}\r\n\r\n// create a node and optionally link it with previous one (in a circular doubly linked list)\r\nfunction insertNode(i, x, y, last) {\r\n    var p = new Node(i, x, y);\r\n\r\n    if (!last) {\r\n        p.prev = p;\r\n        p.next = p;\r\n\r\n    } else {\r\n        p.next = last.next;\r\n        p.prev = last;\r\n        last.next.prev = p;\r\n        last.next = p;\r\n    }\r\n    return p;\r\n}\r\n\r\nfunction removeNode(p) {\r\n    p.next.prev = p.prev;\r\n    p.prev.next = p.next;\r\n\r\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\r\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\r\n}\r\n\r\nfunction Node(i, x, y) {\r\n    // vertex index in coordinates array\r\n    this.i = i;\r\n\r\n    // vertex coordinates\r\n    this.x = x;\r\n    this.y = y;\r\n\r\n    // previous and next vertex nodes in a polygon ring\r\n    this.prev = null;\r\n    this.next = null;\r\n\r\n    // z-order curve value\r\n    this.z = 0;\r\n\r\n    // previous and next nodes in z-order\r\n    this.prevZ = null;\r\n    this.nextZ = null;\r\n\r\n    // indicates whether this is a steiner point\r\n    this.steiner = false;\r\n}\r\n\r\n// return a percentage difference between the polygon area and its triangulation area;\r\n// used to verify correctness of triangulation\r\nearcut.deviation = function (data, holeIndices, dim, triangles) {\r\n    var hasHoles = holeIndices && holeIndices.length;\r\n    var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\r\n\r\n    var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\r\n    if (hasHoles) {\r\n        for (var i = 0, len = holeIndices.length; i < len; i++) {\r\n            var start = holeIndices[i] * dim;\r\n            var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\r\n            polygonArea -= Math.abs(signedArea(data, start, end, dim));\r\n        }\r\n    }\r\n\r\n    var trianglesArea = 0;\r\n    for (i = 0; i < triangles.length; i += 3) {\r\n        var a = triangles[i] * dim;\r\n        var b = triangles[i + 1] * dim;\r\n        var c = triangles[i + 2] * dim;\r\n        trianglesArea += Math.abs(\r\n            (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\r\n            (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\r\n    }\r\n\r\n    return polygonArea === 0 && trianglesArea === 0 ? 0 :\r\n        Math.abs((trianglesArea - polygonArea) / polygonArea);\r\n};\r\n\r\nfunction signedArea(data, start, end, dim) {\r\n    var sum = 0;\r\n    for (var i = start, j = end - dim; i < end; i += dim) {\r\n        sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\r\n        j = i;\r\n    }\r\n    return sum;\r\n}\r\n\r\n// turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\r\nearcut.flatten = function (data) {\r\n    var dim = data[0][0].length,\r\n        result = {vertices: [], holes: [], dimensions: dim},\r\n        holeIndex = 0;\r\n\r\n    for (var i = 0; i < data.length; i++) {\r\n        for (var j = 0; j < data[i].length; j++) {\r\n            for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\r\n        }\r\n        if (i > 0) {\r\n            holeIndex += data[i - 1].length;\r\n            result.holes.push(holeIndex);\r\n        }\r\n    }\r\n    return result;\r\n};\r\n", "var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { Component } from '@wonderlandengine/api';\r\nimport { property } from '@wonderlandengine/api/decorators.js';\r\n/**\r\n * 8thwall camera component.\r\n * @deprecated Use the components in https://github.com/WonderlandEngine/wonderland-ar-tracking instead.\r\n */\r\nclass ARCamera8thwall extends Component {\r\n    static TypeName = '8thwall-camera';\r\n    deprecated;\r\n}\r\n__decorate([\r\n    property.bool(true)\r\n], ARCamera8thwall.prototype, \"deprecated\", void 0);\r\nexport { ARCamera8thwall };\r\n//# sourceMappingURL=8thwall-camera.js.map", "var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { Component, Emitter } from '@wonderlandengine/api';\r\nimport { property } from '@wonderlandengine/api/decorators.js';\r\nimport { setXRRigidTransformLocal } from './utils/webxr.js';\r\nvar tempVec3 = new Float32Array(3);\r\nvar tempQuat = new Float32Array(4);\r\n/**\r\n * Sets the location of the object to the location of an XRAnchor\r\n *\r\n * Create anchors using the `Anchor.create()` static function.\r\n *\r\n * Example for use with cursor:\r\n * ```js\r\n * cursorTarget.onClick.add((object, cursor, originalEvent) => {\r\n *     /* Only events in XR will have a frame attached *\\/\r\n *     if(!originalEvent.frame) return;\r\n *     Anchor.create(anchorObject, {uuid: id, persist: true}, originalEvent.frame);\r\n * });\r\n * ```\r\n */\r\nclass Anchor extends Component {\r\n    static TypeName = 'anchor';\r\n    /* Static management of all anchors */\r\n    static #anchors = [];\r\n    persist = false;\r\n    /** Unique identifier to load a persistent anchor from, or empty/null if unknown */\r\n    uuid = null;\r\n    /** The xrAnchor, if created */\r\n    xrAnchor = null;\r\n    /** Emits events when the anchor is created either by being restored or newly created */\r\n    onCreate = new Emitter();\r\n    /** Whether the anchor is currently being tracked */\r\n    visible = false;\r\n    /** Emits an event when this anchor starts tracking */\r\n    onTrackingFound = new Emitter();\r\n    /** Emits an event when this anchor stops tracking */\r\n    onTrackingLost = new Emitter();\r\n    /** XRFrame to use for creating the anchor */\r\n    xrFrame = null;\r\n    /** XRHitTestResult to use for creating the anchor */\r\n    xrHitResult = null;\r\n    /** Retrieve all anchors of the current scene */\r\n    static getAllAnchors() {\r\n        return Anchor.#anchors;\r\n    }\r\n    static #addAnchor(anchor) {\r\n        Anchor.#anchors.push(anchor);\r\n    }\r\n    static #removeAnchor(anchor) {\r\n        const index = Anchor.#anchors.indexOf(anchor);\r\n        if (index < 0)\r\n            return;\r\n        Anchor.#anchors.splice(index, 1);\r\n    }\r\n    /**\r\n     * Create a new anchor\r\n     *\r\n     * @param o Object to attach the component to\r\n     * @param params Parameters for the anchor component\r\n     * @param frame XRFrame to use for anchor cration, if null, will use the current frame if available\r\n     * @param hitResult Optional hit-test result to create the anchor with\r\n     * @returns Promise for the newly created anchor component\r\n     */\r\n    static create(o, params, frame, hitResult) {\r\n        const a = o.addComponent(Anchor, { ...params, active: false });\r\n        if (a === null)\r\n            return null;\r\n        a.xrHitResult = hitResult ?? null;\r\n        a.xrFrame = frame ?? null;\r\n        a.onCreate.once(() => ((a.xrFrame = null), (a.xrHitResult = null)));\r\n        a.active = true;\r\n        return a.onCreate.promise();\r\n    }\r\n    #getFrame() {\r\n        return this.xrFrame || this.engine.xr.frame;\r\n    }\r\n    async #createAnchor() {\r\n        if (!this.#getFrame().createAnchor) {\r\n            throw new Error(\"Cannot create anchor - anchors not supported, did you enable the 'anchors' WebXR feature?\");\r\n        }\r\n        if (this.xrHitResult) {\r\n            if (this.xrHitResult.createAnchor === undefined) {\r\n                throw new Error('Requested anchor on XRHitTestResult, but WebXR hit-test feature is not available.');\r\n            }\r\n            return this.xrHitResult.createAnchor();\r\n        }\r\n        else {\r\n            this.object.getTranslationWorld(tempVec3);\r\n            tempQuat.set(this.object.rotationWorld);\r\n            const rotation = tempQuat;\r\n            const anchorPose = new XRRigidTransform({ x: tempVec3[0], y: tempVec3[1], z: tempVec3[2] }, { x: rotation[0], y: rotation[1], z: rotation[2], w: rotation[3] });\r\n            return this.#getFrame()?.createAnchor(anchorPose, this.engine.xr.currentReferenceSpace);\r\n        }\r\n    }\r\n    #onAddAnchor(anchor) {\r\n        if (!anchor)\r\n            return;\r\n        if (this.persist) {\r\n            if (anchor.requestPersistentHandle !== undefined) {\r\n                anchor.requestPersistentHandle().then((uuid) => {\r\n                    this.uuid = uuid;\r\n                    this.#onCreate(anchor);\r\n                    Anchor.#addAnchor(this);\r\n                });\r\n                return;\r\n            }\r\n            else {\r\n                console.warn('anchor: Persistent anchors are not supported by your client. Ignoring persist property.');\r\n            }\r\n        }\r\n        this.#onCreate(anchor);\r\n    }\r\n    #onRestoreAnchor(anchor) {\r\n        this.#onCreate(anchor);\r\n    }\r\n    #onCreate(anchor) {\r\n        this.xrAnchor = anchor;\r\n        this.onCreate.notify(this);\r\n    }\r\n    start() {\r\n        if (this.uuid && this.engine.xr) {\r\n            this.persist = true;\r\n            if (this.engine.xr.session.restorePersistentAnchor === undefined) {\r\n                console.warn('anchor: Persistent anchors are not supported by your client. Ignoring persist property.');\r\n            }\r\n            this.engine.xr.session.restorePersistentAnchor(this.uuid).then(this.#onRestoreAnchor.bind(this));\r\n        }\r\n        else if (this.#getFrame()) {\r\n            this.#createAnchor().then(this.#onAddAnchor.bind(this));\r\n        }\r\n        else {\r\n            throw new Error('Anchors can only be created during the XR frame in an active XR session');\r\n        }\r\n    }\r\n    update() {\r\n        if (!this.xrAnchor || !this.engine.xr)\r\n            return;\r\n        /* We need to use the actual frame from the draw callback here */\r\n        const pose = this.engine.xr.frame.getPose(this.xrAnchor.anchorSpace, this.engine.xr.currentReferenceSpace);\r\n        const visible = !!pose;\r\n        if (visible != this.visible) {\r\n            this.visible = visible;\r\n            (visible ? this.onTrackingFound : this.onTrackingLost).notify(this);\r\n        }\r\n        if (pose) {\r\n            setXRRigidTransformLocal(this.object, pose.transform);\r\n        }\r\n    }\r\n    onDestroy() {\r\n        Anchor.#removeAnchor(this);\r\n    }\r\n}\r\n__decorate([\r\n    property.bool(false)\r\n], Anchor.prototype, \"persist\", void 0);\r\n__decorate([\r\n    property.string()\r\n], Anchor.prototype, \"uuid\", void 0);\r\nexport { Anchor };\r\n//# sourceMappingURL=anchor.js.map", "const tempVec = new Float32Array(3);\r\nconst tempQuat = new Float32Array(4);\r\nexport function setXRRigidTransformLocal(o, transform) {\r\n    const r = transform.orientation;\r\n    tempQuat[0] = r.x;\r\n    tempQuat[1] = r.y;\r\n    tempQuat[2] = r.z;\r\n    tempQuat[3] = r.w;\r\n    const t = transform.position;\r\n    tempVec[0] = t.x;\r\n    tempVec[1] = t.y;\r\n    tempVec[2] = t.z;\r\n    o.resetPositionRotation();\r\n    o.setRotationLocal(tempQuat);\r\n    o.translateLocal(tempVec);\r\n}\r\n//# sourceMappingURL=webxr.js.map", "import { Component, Emitter } from '@wonderlandengine/api';\r\n/**\r\n * Click/hover/move/button target for [cursor](#cursor).\r\n *\r\n * To trigger code when clicking, hovering, unhovering, moving cursor, pressing\r\n * cursor button or releasing cursor button, use `.addClickFunction(f)`,\r\n * `.addHoverFunction(f)`, `.addUnHoverFunction(f)`,\r\n * `.addMoveFunction(f)`, `.addDownFunction(f)` and\r\n * `.addUpFunction(f)` respectively with any `function f() {}`.\r\n *\r\n * To call members on a different component, you can set up a cursor target like\r\n * so:\r\n *\r\n * ```js\r\n * start: function() {\r\n *   let target = this.object.addComponent('cursor-target');\r\n *   target.onClick.add(this.onClick.bind(this));\r\n * },\r\n * onClick: function() {\r\n *   console.log(this.object.name, \"was clicked!\");\r\n * }\r\n * ```\r\n * **Functions:**\r\n *\r\n * ```js\r\n * const target = this.object.getComponent(CursorTarget);\r\n * const callback = function(object, cursorComponent) {};\r\n *\r\n * target.onHover.add(callback);\r\n * target.onHover.remove(callback);\r\n *\r\n * target.onUnHover.add(callback);\r\n * target.onUnHover.remove(callback);\r\n *\r\n * target.onClick.add(callback);\r\n * target.onClick.remove(callback);\r\n *\r\n * target.onMove.add(callback);\r\n * target.onMove.remove(callback);\r\n *\r\n * target.onDown.add(callback);\r\n * target.onDown.remove(callback);\r\n *\r\n * target.onUp.add(callback);\r\n * target.onUp.remove(callback);\r\n * ```\r\n *\r\n * **Requirements:**\r\n * - a `collision` component to be attached to the same object.\r\n *\r\n * See [Animation Example](/showcase/animation).\r\n */\r\nclass CursorTarget extends Component {\r\n    static TypeName = 'cursor-target';\r\n    static Properties = {};\r\n    /** Emitter for events when the target is hovered */\r\n    onHover = new Emitter();\r\n    /** Emitter for events when the target is unhovered */\r\n    onUnhover = new Emitter();\r\n    /** Emitter for events when the target is clicked */\r\n    onClick = new Emitter();\r\n    /** Emitter for events when the cursor moves on the target */\r\n    onMove = new Emitter();\r\n    /** Emitter for events when the user pressed the select button on the target */\r\n    onDown = new Emitter();\r\n    /** Emitter for events when the user unpressed the select button on the target */\r\n    onUp = new Emitter();\r\n    /**\r\n     * @deprecated Use the emitter instead.\r\n     *\r\n     * @example\r\n     *    this.onHover.add(f);\r\n     */\r\n    addHoverFunction(f) {\r\n        this.onHover.add(f);\r\n    }\r\n    /**\r\n     * @deprecated Use the emitter instead.\r\n     *\r\n     * @example\r\n     *    this.onHover.remove(f);\r\n     */\r\n    removeHoverFunction(f) {\r\n        this.onHover.remove(f);\r\n    }\r\n    /**\r\n     * @deprecated Use the emitter instead.\r\n     *\r\n     * @example\r\n     *    this.onUnhover.add(f);\r\n     */\r\n    addUnHoverFunction(f) {\r\n        this.onUnhover.add(f);\r\n    }\r\n    /**\r\n     * @deprecated Use the emitter instead.\r\n     *\r\n     * @example\r\n     *    this.onUnhover.remove(f);\r\n     */\r\n    removeUnHoverFunction(f) {\r\n        this.onUnhover.remove(f);\r\n    }\r\n    /**\r\n     * @deprecated Use the emitter instead.\r\n     *\r\n     * @example\r\n     *    this.onClick.add(f);\r\n     */\r\n    addClickFunction(f) {\r\n        this.onClick.add(f);\r\n    }\r\n    /**\r\n     * @deprecated Use the emitter instead.\r\n     *\r\n     * @example\r\n     *    component.onClick.remove(f);\r\n     */\r\n    removeClickFunction(f) {\r\n        this.onClick.remove(f);\r\n    }\r\n    /**\r\n     * @deprecated Use the emitter instead.\r\n     *\r\n     * @example\r\n     *    component.onMove.add(f);\r\n     */\r\n    addMoveFunction(f) {\r\n        this.onMove.add(f);\r\n    }\r\n    /**\r\n     * @deprecated Use the emitter instead.\r\n     *\r\n     * @example\r\n     *    component.onMove.remove(f);\r\n     */\r\n    removeMoveFunction(f) {\r\n        this.onMove.remove(f);\r\n    }\r\n    /**\r\n     * @deprecated Use the emitter instead.\r\n     *\r\n     * @example\r\n     *    component.onDown.add(f);\r\n     */\r\n    addDownFunction(f) {\r\n        this.onDown.add(f);\r\n    }\r\n    /**\r\n     * @deprecated Use the emitter instead.\r\n     *\r\n     * @example\r\n     *    component.onDown.remove(f);\r\n     */\r\n    removeDownFunction(f) {\r\n        this.onDown.remove(f);\r\n    }\r\n    /**\r\n     * @deprecated Use the emitter instead.\r\n     *\r\n     * @example\r\n     *    component.onUp.add(f);\r\n     */\r\n    addUpFunction(f) {\r\n        this.onUp.add(f);\r\n    }\r\n    /**\r\n     * @deprecated Use the emitter instead.\r\n     *\r\n     * @example\r\n     *    component.onUp.remove(f);\r\n     */\r\n    removeUpFunction(f) {\r\n        this.onUp.remove(f);\r\n    }\r\n}\r\nexport { CursorTarget };\r\n//# sourceMappingURL=cursor-target.js.map", "var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { Component, InputComponent, ViewComponent, Emitter, } from '@wonderlandengine/api';\r\nimport { property } from '@wonderlandengine/api/decorators.js';\r\nimport { vec3, mat4 } from 'gl-matrix';\r\nimport { CursorTarget } from './cursor-target.js';\r\nimport { HitTestLocation } from './hit-test-location.js';\r\nconst tempVec = new Float32Array(3);\r\nconst ZERO = [0, 0, 0];\r\n/** Global target for {@link Cursor} */\r\nclass CursorTargetEmitters {\r\n    /** Emitter for events when the target is hovered */\r\n    onHover = new Emitter();\r\n    /** Emitter for events when the target is unhovered */\r\n    onUnhover = new Emitter();\r\n    /** Emitter for events when the target is clicked */\r\n    onClick = new Emitter();\r\n    /** Emitter for events when the cursor moves on the target */\r\n    onMove = new Emitter();\r\n    /** Emitter for events when the user pressed the select button on the target */\r\n    onDown = new Emitter();\r\n    /** Emitter for events when the user unpressed the select button on the target */\r\n    onUp = new Emitter();\r\n}\r\n/**\r\n * 3D cursor for desktop/mobile/VR.\r\n *\r\n * Implements a ray-casting cursor into the scene. To react to\r\n * clicking/hover/unhover/cursor down/cursor up/move use a\r\n * [cursor-target](#cursor-target).\r\n *\r\n * For VR, the ray is cast in direction of\r\n * [this.object.getForward()](/jsapi/object/#getforward). For desktop and mobile, the\r\n * forward vector is inverse-projected to account for where on screen the user clicked.\r\n *\r\n * `.globalTarget` can be used to call callbacks for all objects, even those that\r\n * do not have a cursor target attached, but match the collision group.\r\n *\r\n * `.hitTestTarget` can be used to call callbacks WebXR hit test results,\r\n *\r\n * See [Animation Example](/showcase/animation).\r\n */\r\nclass Cursor extends Component {\r\n    static TypeName = 'cursor';\r\n    /* Dependencies is deprecated, but we keep it here for compatibility\r\n     * with 1.0.0-rc2 until 1.0.0 is released */\r\n    static Dependencies = [HitTestLocation];\r\n    static onRegister(engine) {\r\n        engine.registerComponent(HitTestLocation);\r\n    }\r\n    _collisionMask = 0;\r\n    _onDeactivateCallbacks = [];\r\n    _input = null;\r\n    _origin = new Float32Array(3);\r\n    _cursorObjScale = new Float32Array(3);\r\n    _direction = new Float32Array(3);\r\n    _projectionMatrix = new Float32Array(16);\r\n    _viewComponent = null;\r\n    _isDown = false;\r\n    _lastIsDown = false;\r\n    _arTouchDown = false;\r\n    _lastPointerPos = new Float32Array(2);\r\n    _lastCursorPosOnTarget = new Float32Array(3);\r\n    _hitTestLocation = null;\r\n    _hitTestObject = null;\r\n    _onSessionStartCallback = null;\r\n    /**\r\n     * Whether the cursor (and cursorObject) is visible, i.e. pointing at an object\r\n     * that matches the collision group\r\n     */\r\n    visible = true;\r\n    /** Currently hovered object */\r\n    hoveringObject = null;\r\n    /** CursorTarget component of the currently hovered object */\r\n    hoveringObjectTarget = null;\r\n    /** Whether the cursor is hovering reality via hit-test */\r\n    hoveringReality = false;\r\n    /**\r\n     * Global target lets you receive global cursor events on any object.\r\n     */\r\n    globalTarget = new CursorTargetEmitters();\r\n    /**\r\n     * Hit test target lets you receive cursor events for \"reality\", if\r\n     * `useWebXRHitTest` is set to `true`.\r\n     *\r\n     * @example\r\n     * ```js\r\n     * cursor.hitTestTarget.onClick.add((hit, cursor) => {\r\n     *     // User clicked on reality\r\n     * });\r\n     * ```\r\n     */\r\n    hitTestTarget = new CursorTargetEmitters();\r\n    /** World position of the cursor */\r\n    cursorPos = new Float32Array(3);\r\n    /** Collision group for the ray cast. Only objects in this group will be affected by this cursor. */\r\n    collisionGroup = 1;\r\n    /** (optional) Object that visualizes the cursor's ray. */\r\n    cursorRayObject = null;\r\n    /** Axis along which to scale the `cursorRayObject`. */\r\n    cursorRayScalingAxis = 2;\r\n    /** (optional) Object that visualizes the cursor's hit location. */\r\n    cursorObject = null;\r\n    /** Handedness for VR cursors to accept trigger events only from respective controller. */\r\n    handedness = 0;\r\n    /** Object that has an input component. */\r\n    inputObject = null;\r\n    /** Object that has a view component. */\r\n    viewObject = null;\r\n    /** Mode for raycasting, whether to use PhysX or simple collision components */\r\n    rayCastMode = 0;\r\n    /** Maximum distance for the cursor's ray cast. */\r\n    maxDistance = 100;\r\n    /** Whether to set the CSS style of the mouse cursor on desktop */\r\n    styleCursor = true;\r\n    /**\r\n     * Use WebXR hit-test if available.\r\n     *\r\n     * Attaches a hit-test-location component to the cursorObject, which will be used\r\n     * by the cursor to send events to the hitTestTarget with HitTestResult.\r\n     */\r\n    useWebXRHitTest = false;\r\n    _onViewportResize = () => {\r\n        if (!this._viewComponent)\r\n            return;\r\n        /* Projection matrix will change if the viewport is resized, which will affect the\r\n         * projection matrix because of the aspect ratio. */\r\n        mat4.invert(this._projectionMatrix, this._viewComponent.projectionMatrix);\r\n    };\r\n    start() {\r\n        this._collisionMask = 1 << this.collisionGroup;\r\n        if (this.handedness == 0) {\r\n            const inputCompObj = this.inputObject || this.object;\r\n            const inputComp = inputCompObj.getComponent(InputComponent);\r\n            if (!inputComp) {\r\n                console.warn('cursor component on object', this.object.name, 'was configured with handedness \"input component\", ' +\r\n                    'but object has no input component.');\r\n            }\r\n            else {\r\n                this.handedness = inputComp.handedness || 'none';\r\n                this._input = inputComp;\r\n            }\r\n        }\r\n        else {\r\n            this.handedness = ['left', 'right', 'none'][this.handedness - 1];\r\n        }\r\n        const viewObject = this.viewObject || this.object;\r\n        this._viewComponent = viewObject.getComponent(ViewComponent);\r\n        if (this.useWebXRHitTest) {\r\n            this._hitTestObject = this.engine.scene.addObject(this.object);\r\n            this._hitTestLocation =\r\n                this._hitTestObject.addComponent(HitTestLocation, {\r\n                    scaleObject: false,\r\n                }) ?? null;\r\n        }\r\n        this._onSessionStartCallback = this.setupVREvents.bind(this);\r\n    }\r\n    onActivate() {\r\n        this.engine.onXRSessionStart.add(this._onSessionStartCallback);\r\n        this.engine.onResize.add(this._onViewportResize);\r\n        this._setCursorVisibility(true);\r\n        /* If this object also has a view component, we will enable inverse-projected mouse clicks,\r\n         * otherwise just use the objects transformation */\r\n        if (this._viewComponent != null) {\r\n            const canvas = this.engine.canvas;\r\n            const onClick = this.onClick.bind(this);\r\n            const onPointerMove = this.onPointerMove.bind(this);\r\n            const onPointerDown = this.onPointerDown.bind(this);\r\n            const onPointerUp = this.onPointerUp.bind(this);\r\n            canvas.addEventListener('click', onClick);\r\n            canvas.addEventListener('pointermove', onPointerMove);\r\n            canvas.addEventListener('pointerdown', onPointerDown);\r\n            canvas.addEventListener('pointerup', onPointerUp);\r\n            this._onDeactivateCallbacks.push(() => {\r\n                canvas.removeEventListener('click', onClick);\r\n                canvas.removeEventListener('pointermove', onPointerMove);\r\n                canvas.removeEventListener('pointerdown', onPointerDown);\r\n                canvas.removeEventListener('pointerup', onPointerUp);\r\n            });\r\n        }\r\n        this._onViewportResize();\r\n    }\r\n    _setCursorRayTransform(hitPosition) {\r\n        if (!this.cursorRayObject)\r\n            return;\r\n        const dist = vec3.dist(this._origin, hitPosition);\r\n        this.cursorRayObject.setPositionLocal([0.0, 0.0, -dist / 2]);\r\n        if (this.cursorRayScalingAxis != 4) {\r\n            /* Scale only the requested axis, relative to the original scaling */\r\n            tempVec.fill(1);\r\n            tempVec[this.cursorRayScalingAxis] = dist / 2;\r\n            this.cursorRayObject.setScalingLocal(tempVec);\r\n        }\r\n    }\r\n    _setCursorVisibility(visible) {\r\n        if (this.visible == visible)\r\n            return;\r\n        this.visible = visible;\r\n        if (!this.cursorObject)\r\n            return;\r\n        if (visible) {\r\n            this.cursorObject.setScalingWorld(this._cursorObjScale);\r\n        }\r\n        else {\r\n            this.cursorObject.getScalingWorld(this._cursorObjScale);\r\n            this.cursorObject.scaleLocal([0, 0, 0]);\r\n        }\r\n    }\r\n    update() {\r\n        /* If in VR, set the cursor ray based on object transform */\r\n        /* Since Google Cardboard tap is registered as arTouchDown without a gamepad, we need to check for gamepad presence */\r\n        if (this.engine.xr &&\r\n            this._arTouchDown &&\r\n            this._input &&\r\n            this.engine.xr.session.inputSources[0].handedness === 'none' &&\r\n            this.engine.xr.session.inputSources[0].gamepad) {\r\n            /* WebXR AR input */\r\n            const p = this.engine.xr.session.inputSources[0].gamepad.axes;\r\n            /* Screenspace Y is inverted */\r\n            this._direction[0] = p[0];\r\n            this._direction[1] = -p[1];\r\n            this._direction[2] = -1.0;\r\n            this.applyTransformAndProjectDirection();\r\n        }\r\n        else if (this.engine.xr && this._input && this._input.xrInputSource) {\r\n            /* WebXR VR input */\r\n            this._direction[0] = 0;\r\n            this._direction[1] = 0;\r\n            this._direction[2] = -1.0;\r\n            this.applyTransformToDirection();\r\n        }\r\n        else if (this._viewComponent) {\r\n            /* Apply potentially changed transform to last stored pointer\r\n             * position */\r\n            this.updateDirection();\r\n        }\r\n        this.rayCast(null, this.engine.xr?.frame);\r\n        if (this.cursorObject) {\r\n            if (this.hoveringObject &&\r\n                (this.cursorPos[0] != 0 || this.cursorPos[1] != 0 || this.cursorPos[2] != 0)) {\r\n                this._setCursorVisibility(true);\r\n                this.cursorObject.setPositionWorld(this.cursorPos);\r\n                this._setCursorRayTransform(this.cursorPos);\r\n            }\r\n            else {\r\n                this._setCursorVisibility(false);\r\n            }\r\n        }\r\n    }\r\n    /* Returns the hovered cursor target, if available */\r\n    notify(event, originalEvent) {\r\n        const target = this.hoveringObject;\r\n        if (target) {\r\n            const cursorTarget = this.hoveringObjectTarget;\r\n            if (cursorTarget)\r\n                cursorTarget[event].notify(target, this, originalEvent ?? undefined);\r\n            this.globalTarget[event].notify(target, this, originalEvent ?? undefined);\r\n        }\r\n    }\r\n    hoverBehaviour(rayHit, hitTestResult, doClick, originalEvent) {\r\n        /* Old API version does not return null for objects[0] if no hit */\r\n        const hit = !this.hoveringReality && rayHit.hitCount > 0 ? rayHit.objects[0] : null;\r\n        if (hit) {\r\n            if (!this.hoveringObject || !this.hoveringObject.equals(hit)) {\r\n                /* Unhover previous, if exists */\r\n                if (this.hoveringObject) {\r\n                    this.notify('onUnhover', originalEvent);\r\n                }\r\n                /* Hover new object */\r\n                this.hoveringObject = hit;\r\n                this.hoveringObjectTarget = this.hoveringObject.getComponent(CursorTarget);\r\n                if (this.styleCursor)\r\n                    this.engine.canvas.style.cursor = 'pointer';\r\n                this.notify('onHover', originalEvent);\r\n            }\r\n        }\r\n        else if (this.hoveringObject) {\r\n            /* Previously hovering object, now hovering nothing */\r\n            this.notify('onUnhover', originalEvent);\r\n            this.hoveringObject = null;\r\n            this.hoveringObjectTarget = null;\r\n            if (this.styleCursor)\r\n                this.engine.canvas.style.cursor = 'default';\r\n        }\r\n        if (this.hoveringObject) {\r\n            /* onDown/onUp for object */\r\n            if (this._isDown !== this._lastIsDown) {\r\n                this.notify(this._isDown ? 'onDown' : 'onUp', originalEvent);\r\n            }\r\n            /* onClick for object */\r\n            if (doClick)\r\n                this.notify('onClick', originalEvent);\r\n        }\r\n        else if (this.hoveringReality) {\r\n            /* onDown/onUp for hit test */\r\n            if (this._isDown !== this._lastIsDown) {\r\n                (this._isDown ? this.hitTestTarget.onDown : this.hitTestTarget.onUp).notify(hitTestResult, this, originalEvent ?? undefined);\r\n            }\r\n            /* onClick for hit test */\r\n            if (doClick)\r\n                this.hitTestTarget.onClick.notify(hitTestResult, this, originalEvent ?? undefined);\r\n        }\r\n        /* onMove */\r\n        if (hit) {\r\n            if (this.hoveringObject) {\r\n                this.hoveringObject.transformPointInverseWorld(tempVec, this.cursorPos);\r\n            }\r\n            else {\r\n                tempVec.set(this.cursorPos);\r\n            }\r\n            if (!vec3.equals(this._lastCursorPosOnTarget, tempVec)) {\r\n                this.notify('onMove', originalEvent);\r\n                this._lastCursorPosOnTarget.set(tempVec);\r\n            }\r\n        }\r\n        else if (this.hoveringReality) {\r\n            if (!vec3.equals(this._lastCursorPosOnTarget, this.cursorPos)) {\r\n                this.hitTestTarget.onMove.notify(hitTestResult, this, originalEvent ?? undefined);\r\n                this._lastCursorPosOnTarget.set(this.cursorPos);\r\n            }\r\n        }\r\n        else {\r\n            this._lastCursorPosOnTarget.set(this.cursorPos);\r\n        }\r\n        this._lastIsDown = this._isDown;\r\n    }\r\n    /**\r\n     * Setup event listeners on session object\r\n     * @param s WebXR session\r\n     *\r\n     * Sets up 'select' and 'end' events.\r\n     */\r\n    setupVREvents(s) {\r\n        if (!s)\r\n            console.error('setupVREvents called without a valid session');\r\n        /* Because we remove the callback in .active and another component might\r\n         * deactivate the cursor during onXRSessionStart, we make sure the cursor\r\n         * really is active when we run this */\r\n        if (!this.active)\r\n            return;\r\n        /* If in VR, one-time bind the listener */\r\n        const onSelect = this.onSelect.bind(this);\r\n        s.addEventListener('select', onSelect);\r\n        const onSelectStart = this.onSelectStart.bind(this);\r\n        s.addEventListener('selectstart', onSelectStart);\r\n        const onSelectEnd = this.onSelectEnd.bind(this);\r\n        s.addEventListener('selectend', onSelectEnd);\r\n        this._onDeactivateCallbacks.push(() => {\r\n            if (!this.engine.xr)\r\n                return;\r\n            s.removeEventListener('select', onSelect);\r\n            s.removeEventListener('selectstart', onSelectStart);\r\n            s.removeEventListener('selectend', onSelectEnd);\r\n        });\r\n        /* After AR session was entered, the projection matrix changed */\r\n        this._onViewportResize();\r\n    }\r\n    onDeactivate() {\r\n        this.engine.onXRSessionStart.remove(this._onSessionStartCallback);\r\n        this.engine.onResize.remove(this._onViewportResize);\r\n        this._setCursorVisibility(false);\r\n        if (this.hoveringObject)\r\n            this.notify('onUnhover', null);\r\n        if (this.cursorRayObject)\r\n            this.cursorRayObject.setScalingLocal(ZERO);\r\n        /* Ensure all event listeners are removed */\r\n        for (const f of this._onDeactivateCallbacks)\r\n            f();\r\n        this._onDeactivateCallbacks.length = 0;\r\n    }\r\n    onDestroy() {\r\n        this._hitTestObject?.destroy();\r\n    }\r\n    /** 'select' event listener */\r\n    onSelect(e) {\r\n        if (e.inputSource.handedness != this.handedness)\r\n            return;\r\n        this.rayCast(e, e.frame, true);\r\n    }\r\n    /** 'selectstart' event listener */\r\n    onSelectStart(e) {\r\n        this._arTouchDown = true;\r\n        if (e.inputSource.handedness == this.handedness) {\r\n            this._isDown = true;\r\n            this.rayCast(e, e.frame);\r\n        }\r\n    }\r\n    /** 'selectend' event listener */\r\n    onSelectEnd(e) {\r\n        this._arTouchDown = false;\r\n        if (e.inputSource.handedness == this.handedness) {\r\n            this._isDown = false;\r\n            this.rayCast(e, e.frame);\r\n        }\r\n    }\r\n    /** 'pointermove' event listener */\r\n    onPointerMove(e) {\r\n        /* Don't care about secondary pointers */\r\n        if (!e.isPrimary)\r\n            return;\r\n        this.updateMousePos(e);\r\n        this.rayCast(e, null);\r\n    }\r\n    /** 'click' event listener */\r\n    onClick(e) {\r\n        this.updateMousePos(e);\r\n        this.rayCast(e, null, true);\r\n    }\r\n    /** 'pointerdown' event listener */\r\n    onPointerDown(e) {\r\n        /* Don't care about secondary pointers or non-left clicks */\r\n        if (!e.isPrimary || e.button !== 0)\r\n            return;\r\n        this.updateMousePos(e);\r\n        this._isDown = true;\r\n        this.rayCast(e);\r\n    }\r\n    /** 'pointerup' event listener */\r\n    onPointerUp(e) {\r\n        /* Don't care about secondary pointers or non-left clicks */\r\n        if (!e.isPrimary || e.button !== 0)\r\n            return;\r\n        this.updateMousePos(e);\r\n        this._isDown = false;\r\n        this.rayCast(e);\r\n    }\r\n    /**\r\n     * Update mouse position in non-VR mode and raycast for new position\r\n     * @returns @ref RayHit for new position.\r\n     */\r\n    updateMousePos(e) {\r\n        this._lastPointerPos[0] = e.clientX;\r\n        this._lastPointerPos[1] = e.clientY;\r\n        this.updateDirection();\r\n    }\r\n    updateDirection() {\r\n        const bounds = this.engine.canvas.getBoundingClientRect();\r\n        /* Get direction in normalized device coordinate space from mouse position */\r\n        const left = this._lastPointerPos[0] / bounds.width;\r\n        const top = this._lastPointerPos[1] / bounds.height;\r\n        this._direction[0] = left * 2 - 1;\r\n        this._direction[1] = -top * 2 + 1;\r\n        this._direction[2] = -1.0;\r\n        this.applyTransformAndProjectDirection();\r\n    }\r\n    applyTransformAndProjectDirection() {\r\n        /* Reverse-project the direction into view space */\r\n        vec3.transformMat4(this._direction, this._direction, this._projectionMatrix);\r\n        vec3.normalize(this._direction, this._direction);\r\n        this.applyTransformToDirection();\r\n    }\r\n    applyTransformToDirection() {\r\n        this.object.transformVectorWorld(this._direction, this._direction);\r\n        this.object.getPositionWorld(this._origin);\r\n    }\r\n    rayCast(originalEvent, frame = null, doClick = false) {\r\n        const rayHit = this.rayCastMode == 0\r\n            ? this.engine.scene.rayCast(this._origin, this._direction, this._collisionMask)\r\n            : this.engine.physics.rayCast(this._origin, this._direction, this._collisionMask, this.maxDistance);\r\n        let hitResultDistance = Infinity;\r\n        let hitTestResult = null;\r\n        if (this._hitTestLocation?.visible) {\r\n            this._hitTestObject.getPositionWorld(this.cursorPos);\r\n            hitResultDistance = vec3.distance(this.object.getPositionWorld(tempVec), this.cursorPos);\r\n            hitTestResult = this._hitTestLocation?.getHitTestResults(frame)[0];\r\n        }\r\n        let hoveringReality = false;\r\n        if (rayHit.hitCount > 0) {\r\n            const d = rayHit.distances[0];\r\n            if (hitResultDistance >= d) {\r\n                /* Override cursorPos set by hit test location */\r\n                this.cursorPos.set(rayHit.locations[0]);\r\n            }\r\n            else {\r\n                hoveringReality = true;\r\n            }\r\n        }\r\n        else if (hitResultDistance < Infinity) {\r\n            /* cursorPos already set */\r\n        }\r\n        else {\r\n            this.cursorPos.fill(0);\r\n        }\r\n        if (hoveringReality && !this.hoveringReality) {\r\n            this.hitTestTarget.onHover.notify(hitTestResult, this);\r\n        }\r\n        else if (!hoveringReality && this.hoveringReality) {\r\n            this.hitTestTarget.onUnhover.notify(hitTestResult, this);\r\n        }\r\n        this.hoveringReality = hoveringReality;\r\n        this.hoverBehaviour(rayHit, hitTestResult, doClick, originalEvent);\r\n        return rayHit;\r\n    }\r\n}\r\n__decorate([\r\n    property.int(1)\r\n], Cursor.prototype, \"collisionGroup\", void 0);\r\n__decorate([\r\n    property.object()\r\n], Cursor.prototype, \"cursorRayObject\", void 0);\r\n__decorate([\r\n    property.enum(['x', 'y', 'z', 'none'], 'z')\r\n], Cursor.prototype, \"cursorRayScalingAxis\", void 0);\r\n__decorate([\r\n    property.object()\r\n], Cursor.prototype, \"cursorObject\", void 0);\r\n__decorate([\r\n    property.enum(['input component', 'left', 'right', 'none'], 'input component')\r\n], Cursor.prototype, \"handedness\", void 0);\r\n__decorate([\r\n    property.object()\r\n], Cursor.prototype, \"inputObject\", void 0);\r\n__decorate([\r\n    property.object()\r\n], Cursor.prototype, \"viewObject\", void 0);\r\n__decorate([\r\n    property.enum(['collision', 'physx'], 'collision')\r\n], Cursor.prototype, \"rayCastMode\", void 0);\r\n__decorate([\r\n    property.float(100)\r\n], Cursor.prototype, \"maxDistance\", void 0);\r\n__decorate([\r\n    property.bool(true)\r\n], Cursor.prototype, \"styleCursor\", void 0);\r\n__decorate([\r\n    property.bool(false)\r\n], Cursor.prototype, \"useWebXRHitTest\", void 0);\r\nexport { Cursor };\r\n//# sourceMappingURL=cursor.js.map", "/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\r\n\r\n// Configuration Constants\r\nexport var EPSILON = 0.000001;\r\nexport var ARRAY_TYPE = typeof Float32Array !== \"undefined\" ? Float32Array : Array;\r\nexport var RANDOM = Math.random;\r\nexport var ANGLE_ORDER = \"zyx\";\r\n\r\n/**\r\n * Symmetric round\r\n * see https://www.npmjs.com/package/round-half-up-symmetric#user-content-detailed-background\r\n *\r\n * @param {Number} a value to round\r\n */\r\nexport function round(a) {\r\n  if (a >= 0) return Math.round(a);\r\n  return a % 0.5 === 0 ? Math.floor(a) : Math.round(a);\r\n}\r\n\r\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\r\n */\r\nexport function setMatrixArrayType(type) {\r\n  ARRAY_TYPE = type;\r\n}\r\nvar degree = Math.PI / 180;\r\nvar radian = 180 / Math.PI;\r\n\r\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\r\nexport function toRadian(a) {\r\n  return a * degree;\r\n}\r\n\r\n/**\r\n * Convert Radian To Degree\r\n *\r\n * @param {Number} a Angle in Radians\r\n */\r\nexport function toDegree(a) {\r\n  return a * radian;\r\n}\r\n\r\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a          The first number to test.\r\n * @param {Number} b          The second number to test.\r\n * @param {Number} tolerance  Absolute or relative tolerance (default glMatrix.EPSILON)\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var tolerance = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : EPSILON;\r\n  return Math.abs(a - b) <= tolerance * Math.max(1, Math.abs(a), Math.abs(b));\r\n}", "import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 3x3 Matrix\r\n * @module mat3\r\n */\r\n\r\n/**\r\n * Creates a new identity mat3\r\n *\r\n * @returns {mat3} a new 3x3 matrix\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(9);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[3] = 0;\r\n    out[5] = 0;\r\n    out[6] = 0;\r\n    out[7] = 0;\r\n  }\r\n  out[0] = 1;\r\n  out[4] = 1;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copies the upper-left 3x3 values into the given mat3.\r\n *\r\n * @param {mat3} out the receiving 3x3 matrix\r\n * @param {ReadonlyMat4} a   the source 4x4 matrix\r\n * @returns {mat3} out\r\n */\r\nexport function fromMat4(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[4];\r\n  out[4] = a[5];\r\n  out[5] = a[6];\r\n  out[6] = a[8];\r\n  out[7] = a[9];\r\n  out[8] = a[10];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat3 initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat3} a matrix to clone\r\n * @returns {mat3} a new 3x3 matrix\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(9);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one mat3 to another\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Create a new mat3 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} A new mat3\r\n */\r\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\r\n  var out = new glMatrix.ARRAY_TYPE(9);\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m10;\r\n  out[4] = m11;\r\n  out[5] = m12;\r\n  out[6] = m20;\r\n  out[7] = m21;\r\n  out[8] = m22;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a mat3 to the given values\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} out\r\n */\r\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m10;\r\n  out[4] = m11;\r\n  out[5] = m12;\r\n  out[6] = m20;\r\n  out[7] = m21;\r\n  out[8] = m22;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a mat3 to the identity matrix\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @returns {mat3} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 1;\r\n  out[5] = 0;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transpose the values of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\nexport function transpose(out, a) {\r\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\r\n  if (out === a) {\r\n    var a01 = a[1],\r\n      a02 = a[2],\r\n      a12 = a[5];\r\n    out[1] = a[3];\r\n    out[2] = a[6];\r\n    out[3] = a01;\r\n    out[5] = a[7];\r\n    out[6] = a02;\r\n    out[7] = a12;\r\n  } else {\r\n    out[0] = a[0];\r\n    out[1] = a[3];\r\n    out[2] = a[6];\r\n    out[3] = a[1];\r\n    out[4] = a[4];\r\n    out[5] = a[7];\r\n    out[6] = a[2];\r\n    out[7] = a[5];\r\n    out[8] = a[8];\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Inverts a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3 | null} out, or null if source matrix is not invertible\r\n */\r\nexport function invert(out, a) {\r\n  var a00 = a[0],\r\n    a01 = a[1],\r\n    a02 = a[2];\r\n  var a10 = a[3],\r\n    a11 = a[4],\r\n    a12 = a[5];\r\n  var a20 = a[6],\r\n    a21 = a[7],\r\n    a22 = a[8];\r\n  var b01 = a22 * a11 - a12 * a21;\r\n  var b11 = -a22 * a10 + a12 * a20;\r\n  var b21 = a21 * a10 - a11 * a20;\r\n\r\n  // Calculate the determinant\r\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n  out[0] = b01 * det;\r\n  out[1] = (-a22 * a01 + a02 * a21) * det;\r\n  out[2] = (a12 * a01 - a02 * a11) * det;\r\n  out[3] = b11 * det;\r\n  out[4] = (a22 * a00 - a02 * a20) * det;\r\n  out[5] = (-a12 * a00 + a02 * a10) * det;\r\n  out[6] = b21 * det;\r\n  out[7] = (-a21 * a00 + a01 * a20) * det;\r\n  out[8] = (a11 * a00 - a01 * a10) * det;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the adjugate of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\nexport function adjoint(out, a) {\r\n  var a00 = a[0],\r\n    a01 = a[1],\r\n    a02 = a[2];\r\n  var a10 = a[3],\r\n    a11 = a[4],\r\n    a12 = a[5];\r\n  var a20 = a[6],\r\n    a21 = a[7],\r\n    a22 = a[8];\r\n  out[0] = a11 * a22 - a12 * a21;\r\n  out[1] = a02 * a21 - a01 * a22;\r\n  out[2] = a01 * a12 - a02 * a11;\r\n  out[3] = a12 * a20 - a10 * a22;\r\n  out[4] = a00 * a22 - a02 * a20;\r\n  out[5] = a02 * a10 - a00 * a12;\r\n  out[6] = a10 * a21 - a11 * a20;\r\n  out[7] = a01 * a20 - a00 * a21;\r\n  out[8] = a00 * a11 - a01 * a10;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the determinant of a mat3\r\n *\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\r\nexport function determinant(a) {\r\n  var a00 = a[0],\r\n    a01 = a[1],\r\n    a02 = a[2];\r\n  var a10 = a[3],\r\n    a11 = a[4],\r\n    a12 = a[5];\r\n  var a20 = a[6],\r\n    a21 = a[7],\r\n    a22 = a[8];\r\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\r\n}\r\n\r\n/**\r\n * Multiplies two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var a00 = a[0],\r\n    a01 = a[1],\r\n    a02 = a[2];\r\n  var a10 = a[3],\r\n    a11 = a[4],\r\n    a12 = a[5];\r\n  var a20 = a[6],\r\n    a21 = a[7],\r\n    a22 = a[8];\r\n  var b00 = b[0],\r\n    b01 = b[1],\r\n    b02 = b[2];\r\n  var b10 = b[3],\r\n    b11 = b[4],\r\n    b12 = b[5];\r\n  var b20 = b[6],\r\n    b21 = b[7],\r\n    b22 = b[8];\r\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\r\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\r\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\r\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\r\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\r\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\r\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\r\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\r\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Translate a mat3 by the given vector\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to translate\r\n * @param {ReadonlyVec2} v vector to translate by\r\n * @returns {mat3} out\r\n */\r\nexport function translate(out, a, v) {\r\n  var a00 = a[0],\r\n    a01 = a[1],\r\n    a02 = a[2],\r\n    a10 = a[3],\r\n    a11 = a[4],\r\n    a12 = a[5],\r\n    a20 = a[6],\r\n    a21 = a[7],\r\n    a22 = a[8],\r\n    x = v[0],\r\n    y = v[1];\r\n  out[0] = a00;\r\n  out[1] = a01;\r\n  out[2] = a02;\r\n  out[3] = a10;\r\n  out[4] = a11;\r\n  out[5] = a12;\r\n  out[6] = x * a00 + y * a10 + a20;\r\n  out[7] = x * a01 + y * a11 + a21;\r\n  out[8] = x * a02 + y * a12 + a22;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a mat3 by the given angle\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\r\nexport function rotate(out, a, rad) {\r\n  var a00 = a[0],\r\n    a01 = a[1],\r\n    a02 = a[2],\r\n    a10 = a[3],\r\n    a11 = a[4],\r\n    a12 = a[5],\r\n    a20 = a[6],\r\n    a21 = a[7],\r\n    a22 = a[8],\r\n    s = Math.sin(rad),\r\n    c = Math.cos(rad);\r\n  out[0] = c * a00 + s * a10;\r\n  out[1] = c * a01 + s * a11;\r\n  out[2] = c * a02 + s * a12;\r\n  out[3] = c * a10 - s * a00;\r\n  out[4] = c * a11 - s * a01;\r\n  out[5] = c * a12 - s * a02;\r\n  out[6] = a20;\r\n  out[7] = a21;\r\n  out[8] = a22;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales the mat3 by the dimensions in the given vec2\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to scale\r\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\r\n * @returns {mat3} out\r\n **/\r\nexport function scale(out, a, v) {\r\n  var x = v[0],\r\n    y = v[1];\r\n  out[0] = x * a[0];\r\n  out[1] = x * a[1];\r\n  out[2] = x * a[2];\r\n  out[3] = y * a[3];\r\n  out[4] = y * a[4];\r\n  out[5] = y * a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.translate(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyVec2} v Translation vector\r\n * @returns {mat3} out\r\n */\r\nexport function fromTranslation(out, v) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 1;\r\n  out[5] = 0;\r\n  out[6] = v[0];\r\n  out[7] = v[1];\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.rotate(dest, dest, rad);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\r\nexport function fromRotation(out, rad) {\r\n  var s = Math.sin(rad),\r\n    c = Math.cos(rad);\r\n  out[0] = c;\r\n  out[1] = s;\r\n  out[2] = 0;\r\n  out[3] = -s;\r\n  out[4] = c;\r\n  out[5] = 0;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.scale(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyVec2} v Scaling vector\r\n * @returns {mat3} out\r\n */\r\nexport function fromScaling(out, v) {\r\n  out[0] = v[0];\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = v[1];\r\n  out[5] = 0;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copies the values from a mat2d into a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the matrix to copy\r\n * @returns {mat3} out\r\n **/\r\nexport function fromMat2d(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = 0;\r\n  out[3] = a[2];\r\n  out[4] = a[3];\r\n  out[5] = 0;\r\n  out[6] = a[4];\r\n  out[7] = a[5];\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates a 3x3 matrix from the given quaternion\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyQuat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat3} out\r\n */\r\nexport function fromQuat(out, q) {\r\n  var x = q[0],\r\n    y = q[1],\r\n    z = q[2],\r\n    w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n  var xx = x * x2;\r\n  var yx = y * x2;\r\n  var yy = y * y2;\r\n  var zx = z * x2;\r\n  var zy = z * y2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n  out[0] = 1 - yy - zz;\r\n  out[3] = yx - wz;\r\n  out[6] = zx + wy;\r\n  out[1] = yx + wz;\r\n  out[4] = 1 - xx - zz;\r\n  out[7] = zy - wx;\r\n  out[2] = zx - wy;\r\n  out[5] = zy + wx;\r\n  out[8] = 1 - xx - yy;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyMat4} a Mat4 to derive the normal matrix from\r\n *\r\n * @returns {mat3} out\r\n */\r\nexport function normalFromMat4(out, a) {\r\n  var a00 = a[0],\r\n    a01 = a[1],\r\n    a02 = a[2],\r\n    a03 = a[3];\r\n  var a10 = a[4],\r\n    a11 = a[5],\r\n    a12 = a[6],\r\n    a13 = a[7];\r\n  var a20 = a[8],\r\n    a21 = a[9],\r\n    a22 = a[10],\r\n    a23 = a[11];\r\n  var a30 = a[12],\r\n    a31 = a[13],\r\n    a32 = a[14],\r\n    a33 = a[15];\r\n  var b00 = a00 * a11 - a01 * a10;\r\n  var b01 = a00 * a12 - a02 * a10;\r\n  var b02 = a00 * a13 - a03 * a10;\r\n  var b03 = a01 * a12 - a02 * a11;\r\n  var b04 = a01 * a13 - a03 * a11;\r\n  var b05 = a02 * a13 - a03 * a12;\r\n  var b06 = a20 * a31 - a21 * a30;\r\n  var b07 = a20 * a32 - a22 * a30;\r\n  var b08 = a20 * a33 - a23 * a30;\r\n  var b09 = a21 * a32 - a22 * a31;\r\n  var b10 = a21 * a33 - a23 * a31;\r\n  var b11 = a22 * a33 - a23 * a32;\r\n\r\n  // Calculate the determinant\r\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a 2D projection matrix with the given bounds\r\n *\r\n * @param {mat3} out mat3 frustum matrix will be written into\r\n * @param {number} width Width of your gl context\r\n * @param {number} height Height of gl context\r\n * @returns {mat3} out\r\n */\r\nexport function projection(out, width, height) {\r\n  out[0] = 2 / width;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = -2 / height;\r\n  out[5] = 0;\r\n  out[6] = -1;\r\n  out[7] = 1;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a mat3\r\n *\r\n * @param {ReadonlyMat3} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\r\nexport function str(a) {\r\n  return \"mat3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \")\";\r\n}\r\n\r\n/**\r\n * Returns Frobenius norm of a mat3\r\n *\r\n * @param {ReadonlyMat3} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\r\nexport function frob(a) {\r\n  return Math.sqrt(a[0] * a[0] + a[1] * a[1] + a[2] * a[2] + a[3] * a[3] + a[4] * a[4] + a[5] * a[5] + a[6] * a[6] + a[7] * a[7] + a[8] * a[8]);\r\n}\r\n\r\n/**\r\n * Adds two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  out[4] = a[4] + b[4];\r\n  out[5] = a[5] + b[5];\r\n  out[6] = a[6] + b[6];\r\n  out[7] = a[7] + b[7];\r\n  out[8] = a[8] + b[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  out[4] = a[4] - b[4];\r\n  out[5] = a[5] - b[5];\r\n  out[6] = a[6] - b[6];\r\n  out[7] = a[7] - b[7];\r\n  out[8] = a[8] - b[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat3} out\r\n */\r\nexport function multiplyScalar(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  out[4] = a[4] * b;\r\n  out[5] = a[5] * b;\r\n  out[6] = a[6] * b;\r\n  out[7] = a[7] * b;\r\n  out[8] = a[8] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat3} out the receiving vector\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat3} out\r\n */\r\nexport function multiplyScalarAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  out[4] = a[4] + b[4] * scale;\r\n  out[5] = a[5] + b[5] * scale;\r\n  out[6] = a[6] + b[6] * scale;\r\n  out[7] = a[7] + b[7] * scale;\r\n  out[8] = a[8] + b[8] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat3} a The first matrix.\r\n * @param {ReadonlyMat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat3} a The first matrix.\r\n * @param {ReadonlyMat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n    a1 = a[1],\r\n    a2 = a[2],\r\n    a3 = a[3],\r\n    a4 = a[4],\r\n    a5 = a[5],\r\n    a6 = a[6],\r\n    a7 = a[7],\r\n    a8 = a[8];\r\n  var b0 = b[0],\r\n    b1 = b[1],\r\n    b2 = b[2],\r\n    b3 = b[3],\r\n    b4 = b[4],\r\n    b5 = b[5],\r\n    b6 = b[6],\r\n    b7 = b[7],\r\n    b8 = b[8];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\r\n}\r\n\r\n/**\r\n * Alias for {@link mat3.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link mat3.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;", "import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\r\n * @module mat4\r\n */\r\n\r\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(16);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[3] = 0;\r\n    out[4] = 0;\r\n    out[6] = 0;\r\n    out[7] = 0;\r\n    out[8] = 0;\r\n    out[9] = 0;\r\n    out[11] = 0;\r\n    out[12] = 0;\r\n    out[13] = 0;\r\n    out[14] = 0;\r\n  }\r\n  out[0] = 1;\r\n  out[5] = 1;\r\n  out[10] = 1;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(16);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  out[9] = a[9];\r\n  out[10] = a[10];\r\n  out[11] = a[11];\r\n  out[12] = a[12];\r\n  out[13] = a[13];\r\n  out[14] = a[14];\r\n  out[15] = a[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  out[9] = a[9];\r\n  out[10] = a[10];\r\n  out[11] = a[11];\r\n  out[12] = a[12];\r\n  out[13] = a[13];\r\n  out[14] = a[14];\r\n  out[15] = a[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\r\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\r\n  var out = new glMatrix.ARRAY_TYPE(16);\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m03;\r\n  out[4] = m10;\r\n  out[5] = m11;\r\n  out[6] = m12;\r\n  out[7] = m13;\r\n  out[8] = m20;\r\n  out[9] = m21;\r\n  out[10] = m22;\r\n  out[11] = m23;\r\n  out[12] = m30;\r\n  out[13] = m31;\r\n  out[14] = m32;\r\n  out[15] = m33;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\r\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m03;\r\n  out[4] = m10;\r\n  out[5] = m11;\r\n  out[6] = m12;\r\n  out[7] = m13;\r\n  out[8] = m20;\r\n  out[9] = m21;\r\n  out[10] = m22;\r\n  out[11] = m23;\r\n  out[12] = m30;\r\n  out[13] = m31;\r\n  out[14] = m32;\r\n  out[15] = m33;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = 1;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 1;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\nexport function transpose(out, a) {\r\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\r\n  if (out === a) {\r\n    var a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n    var a12 = a[6],\r\n      a13 = a[7];\r\n    var a23 = a[11];\r\n    out[1] = a[4];\r\n    out[2] = a[8];\r\n    out[3] = a[12];\r\n    out[4] = a01;\r\n    out[6] = a[9];\r\n    out[7] = a[13];\r\n    out[8] = a02;\r\n    out[9] = a12;\r\n    out[11] = a[14];\r\n    out[12] = a03;\r\n    out[13] = a13;\r\n    out[14] = a23;\r\n  } else {\r\n    out[0] = a[0];\r\n    out[1] = a[4];\r\n    out[2] = a[8];\r\n    out[3] = a[12];\r\n    out[4] = a[1];\r\n    out[5] = a[5];\r\n    out[6] = a[9];\r\n    out[7] = a[13];\r\n    out[8] = a[2];\r\n    out[9] = a[6];\r\n    out[10] = a[10];\r\n    out[11] = a[14];\r\n    out[12] = a[3];\r\n    out[13] = a[7];\r\n    out[14] = a[11];\r\n    out[15] = a[15];\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4 | null} out, or null if source matrix is not invertible\r\n */\r\nexport function invert(out, a) {\r\n  var a00 = a[0],\r\n    a01 = a[1],\r\n    a02 = a[2],\r\n    a03 = a[3];\r\n  var a10 = a[4],\r\n    a11 = a[5],\r\n    a12 = a[6],\r\n    a13 = a[7];\r\n  var a20 = a[8],\r\n    a21 = a[9],\r\n    a22 = a[10],\r\n    a23 = a[11];\r\n  var a30 = a[12],\r\n    a31 = a[13],\r\n    a32 = a[14],\r\n    a33 = a[15];\r\n  var b00 = a00 * a11 - a01 * a10;\r\n  var b01 = a00 * a12 - a02 * a10;\r\n  var b02 = a00 * a13 - a03 * a10;\r\n  var b03 = a01 * a12 - a02 * a11;\r\n  var b04 = a01 * a13 - a03 * a11;\r\n  var b05 = a02 * a13 - a03 * a12;\r\n  var b06 = a20 * a31 - a21 * a30;\r\n  var b07 = a20 * a32 - a22 * a30;\r\n  var b08 = a20 * a33 - a23 * a30;\r\n  var b09 = a21 * a32 - a22 * a31;\r\n  var b10 = a21 * a33 - a23 * a31;\r\n  var b11 = a22 * a33 - a23 * a32;\r\n\r\n  // Calculate the determinant\r\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\r\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\r\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\r\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\r\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\r\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\r\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\nexport function adjoint(out, a) {\r\n  var a00 = a[0],\r\n    a01 = a[1],\r\n    a02 = a[2],\r\n    a03 = a[3];\r\n  var a10 = a[4],\r\n    a11 = a[5],\r\n    a12 = a[6],\r\n    a13 = a[7];\r\n  var a20 = a[8],\r\n    a21 = a[9],\r\n    a22 = a[10],\r\n    a23 = a[11];\r\n  var a30 = a[12],\r\n    a31 = a[13],\r\n    a32 = a[14],\r\n    a33 = a[15];\r\n  var b00 = a00 * a11 - a01 * a10;\r\n  var b01 = a00 * a12 - a02 * a10;\r\n  var b02 = a00 * a13 - a03 * a10;\r\n  var b03 = a01 * a12 - a02 * a11;\r\n  var b04 = a01 * a13 - a03 * a11;\r\n  var b05 = a02 * a13 - a03 * a12;\r\n  var b06 = a20 * a31 - a21 * a30;\r\n  var b07 = a20 * a32 - a22 * a30;\r\n  var b08 = a20 * a33 - a23 * a30;\r\n  var b09 = a21 * a32 - a22 * a31;\r\n  var b10 = a21 * a33 - a23 * a31;\r\n  var b11 = a22 * a33 - a23 * a32;\r\n  out[0] = a11 * b11 - a12 * b10 + a13 * b09;\r\n  out[1] = a02 * b10 - a01 * b11 - a03 * b09;\r\n  out[2] = a31 * b05 - a32 * b04 + a33 * b03;\r\n  out[3] = a22 * b04 - a21 * b05 - a23 * b03;\r\n  out[4] = a12 * b08 - a10 * b11 - a13 * b07;\r\n  out[5] = a00 * b11 - a02 * b08 + a03 * b07;\r\n  out[6] = a32 * b02 - a30 * b05 - a33 * b01;\r\n  out[7] = a20 * b05 - a22 * b02 + a23 * b01;\r\n  out[8] = a10 * b10 - a11 * b08 + a13 * b06;\r\n  out[9] = a01 * b08 - a00 * b10 - a03 * b06;\r\n  out[10] = a30 * b04 - a31 * b02 + a33 * b00;\r\n  out[11] = a21 * b02 - a20 * b04 - a23 * b00;\r\n  out[12] = a11 * b07 - a10 * b09 - a12 * b06;\r\n  out[13] = a00 * b09 - a01 * b07 + a02 * b06;\r\n  out[14] = a31 * b01 - a30 * b03 - a32 * b00;\r\n  out[15] = a20 * b03 - a21 * b01 + a22 * b00;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\r\nexport function determinant(a) {\r\n  var a00 = a[0],\r\n    a01 = a[1],\r\n    a02 = a[2],\r\n    a03 = a[3];\r\n  var a10 = a[4],\r\n    a11 = a[5],\r\n    a12 = a[6],\r\n    a13 = a[7];\r\n  var a20 = a[8],\r\n    a21 = a[9],\r\n    a22 = a[10],\r\n    a23 = a[11];\r\n  var a30 = a[12],\r\n    a31 = a[13],\r\n    a32 = a[14],\r\n    a33 = a[15];\r\n  var b0 = a00 * a11 - a01 * a10;\r\n  var b1 = a00 * a12 - a02 * a10;\r\n  var b2 = a01 * a12 - a02 * a11;\r\n  var b3 = a20 * a31 - a21 * a30;\r\n  var b4 = a20 * a32 - a22 * a30;\r\n  var b5 = a21 * a32 - a22 * a31;\r\n  var b6 = a00 * b5 - a01 * b4 + a02 * b3;\r\n  var b7 = a10 * b5 - a11 * b4 + a12 * b3;\r\n  var b8 = a20 * b2 - a21 * b1 + a22 * b0;\r\n  var b9 = a30 * b2 - a31 * b1 + a32 * b0;\r\n\r\n  // Calculate the determinant\r\n  return a13 * b6 - a03 * b7 + a33 * b8 - a23 * b9;\r\n}\r\n\r\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var a00 = a[0],\r\n    a01 = a[1],\r\n    a02 = a[2],\r\n    a03 = a[3];\r\n  var a10 = a[4],\r\n    a11 = a[5],\r\n    a12 = a[6],\r\n    a13 = a[7];\r\n  var a20 = a[8],\r\n    a21 = a[9],\r\n    a22 = a[10],\r\n    a23 = a[11];\r\n  var a30 = a[12],\r\n    a31 = a[13],\r\n    a32 = a[14],\r\n    a33 = a[15];\r\n\r\n  // Cache only the current line of the second matrix\r\n  var b0 = b[0],\r\n    b1 = b[1],\r\n    b2 = b[2],\r\n    b3 = b[3];\r\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n  b0 = b[4];\r\n  b1 = b[5];\r\n  b2 = b[6];\r\n  b3 = b[7];\r\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n  b0 = b[8];\r\n  b1 = b[9];\r\n  b2 = b[10];\r\n  b3 = b[11];\r\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n  b0 = b[12];\r\n  b1 = b[13];\r\n  b2 = b[14];\r\n  b3 = b[15];\r\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to translate\r\n * @param {ReadonlyVec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\r\nexport function translate(out, a, v) {\r\n  var x = v[0],\r\n    y = v[1],\r\n    z = v[2];\r\n  var a00, a01, a02, a03;\r\n  var a10, a11, a12, a13;\r\n  var a20, a21, a22, a23;\r\n  if (a === out) {\r\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\r\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\r\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\r\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\r\n  } else {\r\n    a00 = a[0];\r\n    a01 = a[1];\r\n    a02 = a[2];\r\n    a03 = a[3];\r\n    a10 = a[4];\r\n    a11 = a[5];\r\n    a12 = a[6];\r\n    a13 = a[7];\r\n    a20 = a[8];\r\n    a21 = a[9];\r\n    a22 = a[10];\r\n    a23 = a[11];\r\n    out[0] = a00;\r\n    out[1] = a01;\r\n    out[2] = a02;\r\n    out[3] = a03;\r\n    out[4] = a10;\r\n    out[5] = a11;\r\n    out[6] = a12;\r\n    out[7] = a13;\r\n    out[8] = a20;\r\n    out[9] = a21;\r\n    out[10] = a22;\r\n    out[11] = a23;\r\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\r\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\r\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\r\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to scale\r\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\r\nexport function scale(out, a, v) {\r\n  var x = v[0],\r\n    y = v[1],\r\n    z = v[2];\r\n  out[0] = a[0] * x;\r\n  out[1] = a[1] * x;\r\n  out[2] = a[2] * x;\r\n  out[3] = a[3] * x;\r\n  out[4] = a[4] * y;\r\n  out[5] = a[5] * y;\r\n  out[6] = a[6] * y;\r\n  out[7] = a[7] * y;\r\n  out[8] = a[8] * z;\r\n  out[9] = a[9] * z;\r\n  out[10] = a[10] * z;\r\n  out[11] = a[11] * z;\r\n  out[12] = a[12];\r\n  out[13] = a[13];\r\n  out[14] = a[14];\r\n  out[15] = a[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\r\nexport function rotate(out, a, rad, axis) {\r\n  var x = axis[0],\r\n    y = axis[1],\r\n    z = axis[2];\r\n  var len = Math.sqrt(x * x + y * y + z * z);\r\n  var s, c, t;\r\n  var a00, a01, a02, a03;\r\n  var a10, a11, a12, a13;\r\n  var a20, a21, a22, a23;\r\n  var b00, b01, b02;\r\n  var b10, b11, b12;\r\n  var b20, b21, b22;\r\n  if (len < glMatrix.EPSILON) {\r\n    return null;\r\n  }\r\n  len = 1 / len;\r\n  x *= len;\r\n  y *= len;\r\n  z *= len;\r\n  s = Math.sin(rad);\r\n  c = Math.cos(rad);\r\n  t = 1 - c;\r\n  a00 = a[0];\r\n  a01 = a[1];\r\n  a02 = a[2];\r\n  a03 = a[3];\r\n  a10 = a[4];\r\n  a11 = a[5];\r\n  a12 = a[6];\r\n  a13 = a[7];\r\n  a20 = a[8];\r\n  a21 = a[9];\r\n  a22 = a[10];\r\n  a23 = a[11];\r\n\r\n  // Construct the elements of the rotation matrix\r\n  b00 = x * x * t + c;\r\n  b01 = y * x * t + z * s;\r\n  b02 = z * x * t - y * s;\r\n  b10 = x * y * t - z * s;\r\n  b11 = y * y * t + c;\r\n  b12 = z * y * t + x * s;\r\n  b20 = x * z * t + y * s;\r\n  b21 = y * z * t - x * s;\r\n  b22 = z * z * t + c;\r\n\r\n  // Perform rotation-specific matrix multiplication\r\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\r\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\r\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\r\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\r\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\r\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\r\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\r\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\r\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\r\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\r\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\r\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\r\n  if (a !== out) {\r\n    // If the source and destination differ, copy the unchanged last row\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function rotateX(out, a, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  var a10 = a[4];\r\n  var a11 = a[5];\r\n  var a12 = a[6];\r\n  var a13 = a[7];\r\n  var a20 = a[8];\r\n  var a21 = a[9];\r\n  var a22 = a[10];\r\n  var a23 = a[11];\r\n  if (a !== out) {\r\n    // If the source and destination differ, copy the unchanged rows\r\n    out[0] = a[0];\r\n    out[1] = a[1];\r\n    out[2] = a[2];\r\n    out[3] = a[3];\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[4] = a10 * c + a20 * s;\r\n  out[5] = a11 * c + a21 * s;\r\n  out[6] = a12 * c + a22 * s;\r\n  out[7] = a13 * c + a23 * s;\r\n  out[8] = a20 * c - a10 * s;\r\n  out[9] = a21 * c - a11 * s;\r\n  out[10] = a22 * c - a12 * s;\r\n  out[11] = a23 * c - a13 * s;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function rotateY(out, a, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  var a00 = a[0];\r\n  var a01 = a[1];\r\n  var a02 = a[2];\r\n  var a03 = a[3];\r\n  var a20 = a[8];\r\n  var a21 = a[9];\r\n  var a22 = a[10];\r\n  var a23 = a[11];\r\n  if (a !== out) {\r\n    // If the source and destination differ, copy the unchanged rows\r\n    out[4] = a[4];\r\n    out[5] = a[5];\r\n    out[6] = a[6];\r\n    out[7] = a[7];\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = a00 * c - a20 * s;\r\n  out[1] = a01 * c - a21 * s;\r\n  out[2] = a02 * c - a22 * s;\r\n  out[3] = a03 * c - a23 * s;\r\n  out[8] = a00 * s + a20 * c;\r\n  out[9] = a01 * s + a21 * c;\r\n  out[10] = a02 * s + a22 * c;\r\n  out[11] = a03 * s + a23 * c;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function rotateZ(out, a, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  var a00 = a[0];\r\n  var a01 = a[1];\r\n  var a02 = a[2];\r\n  var a03 = a[3];\r\n  var a10 = a[4];\r\n  var a11 = a[5];\r\n  var a12 = a[6];\r\n  var a13 = a[7];\r\n  if (a !== out) {\r\n    // If the source and destination differ, copy the unchanged last row\r\n    out[8] = a[8];\r\n    out[9] = a[9];\r\n    out[10] = a[10];\r\n    out[11] = a[11];\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = a00 * c + a10 * s;\r\n  out[1] = a01 * c + a11 * s;\r\n  out[2] = a02 * c + a12 * s;\r\n  out[3] = a03 * c + a13 * s;\r\n  out[4] = a10 * c - a00 * s;\r\n  out[5] = a11 * c - a01 * s;\r\n  out[6] = a12 * c - a02 * s;\r\n  out[7] = a13 * c - a03 * s;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @returns {mat4} out\r\n */\r\nexport function fromTranslation(out, v) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = 1;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 1;\r\n  out[11] = 0;\r\n  out[12] = v[0];\r\n  out[13] = v[1];\r\n  out[14] = v[2];\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyVec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\r\nexport function fromScaling(out, v) {\r\n  out[0] = v[0];\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = v[1];\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = v[2];\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\r\nexport function fromRotation(out, rad, axis) {\r\n  var x = axis[0],\r\n    y = axis[1],\r\n    z = axis[2];\r\n  var len = Math.sqrt(x * x + y * y + z * z);\r\n  var s, c, t;\r\n  if (len < glMatrix.EPSILON) {\r\n    return null;\r\n  }\r\n  len = 1 / len;\r\n  x *= len;\r\n  y *= len;\r\n  z *= len;\r\n  s = Math.sin(rad);\r\n  c = Math.cos(rad);\r\n  t = 1 - c;\r\n\r\n  // Perform rotation-specific matrix multiplication\r\n  out[0] = x * x * t + c;\r\n  out[1] = y * x * t + z * s;\r\n  out[2] = z * x * t - y * s;\r\n  out[3] = 0;\r\n  out[4] = x * y * t - z * s;\r\n  out[5] = y * y * t + c;\r\n  out[6] = z * y * t + x * s;\r\n  out[7] = 0;\r\n  out[8] = x * z * t + y * s;\r\n  out[9] = y * z * t - x * s;\r\n  out[10] = z * z * t + c;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function fromXRotation(out, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = c;\r\n  out[6] = s;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = -s;\r\n  out[10] = c;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function fromYRotation(out, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = c;\r\n  out[1] = 0;\r\n  out[2] = -s;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = 1;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = s;\r\n  out[9] = 0;\r\n  out[10] = c;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function fromZRotation(out, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = c;\r\n  out[1] = s;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = -s;\r\n  out[5] = c;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 1;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     mat4.fromQuat(quatMat, quat);\r\n *     mat4.multiply(dest, dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @returns {mat4} out\r\n */\r\nexport function fromRotationTranslation(out, q, v) {\r\n  // Quaternion math\r\n  var x = q[0],\r\n    y = q[1],\r\n    z = q[2],\r\n    w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n  var xx = x * x2;\r\n  var xy = x * y2;\r\n  var xz = x * z2;\r\n  var yy = y * y2;\r\n  var yz = y * z2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n  out[0] = 1 - (yy + zz);\r\n  out[1] = xy + wz;\r\n  out[2] = xz - wy;\r\n  out[3] = 0;\r\n  out[4] = xy - wz;\r\n  out[5] = 1 - (xx + zz);\r\n  out[6] = yz + wx;\r\n  out[7] = 0;\r\n  out[8] = xz + wy;\r\n  out[9] = yz - wx;\r\n  out[10] = 1 - (xx + yy);\r\n  out[11] = 0;\r\n  out[12] = v[0];\r\n  out[13] = v[1];\r\n  out[14] = v[2];\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat4 from a dual quat.\r\n *\r\n * @param {mat4} out Matrix\r\n * @param {ReadonlyQuat2} a Dual Quaternion\r\n * @returns {mat4} mat4 receiving operation result\r\n */\r\nexport function fromQuat2(out, a) {\r\n  var translation = new glMatrix.ARRAY_TYPE(3);\r\n  var bx = -a[0],\r\n    by = -a[1],\r\n    bz = -a[2],\r\n    bw = a[3],\r\n    ax = a[4],\r\n    ay = a[5],\r\n    az = a[6],\r\n    aw = a[7];\r\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw;\r\n  //Only scale if it makes sense\r\n  if (magnitude > 0) {\r\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\r\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\r\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\r\n  } else {\r\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\r\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\r\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\r\n  }\r\n  fromRotationTranslation(out, a, translation);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\r\nexport function getTranslation(out, mat) {\r\n  out[0] = mat[12];\r\n  out[1] = mat[13];\r\n  out[2] = mat[14];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion parameter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\r\nexport function getScaling(out, mat) {\r\n  var m11 = mat[0];\r\n  var m12 = mat[1];\r\n  var m13 = mat[2];\r\n  var m21 = mat[4];\r\n  var m22 = mat[5];\r\n  var m23 = mat[6];\r\n  var m31 = mat[8];\r\n  var m32 = mat[9];\r\n  var m33 = mat[10];\r\n  out[0] = Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13);\r\n  out[1] = Math.sqrt(m21 * m21 + m22 * m22 + m23 * m23);\r\n  out[2] = Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\r\nexport function getRotation(out, mat) {\r\n  var scaling = new glMatrix.ARRAY_TYPE(3);\r\n  getScaling(scaling, mat);\r\n  var is1 = 1 / scaling[0];\r\n  var is2 = 1 / scaling[1];\r\n  var is3 = 1 / scaling[2];\r\n  var sm11 = mat[0] * is1;\r\n  var sm12 = mat[1] * is2;\r\n  var sm13 = mat[2] * is3;\r\n  var sm21 = mat[4] * is1;\r\n  var sm22 = mat[5] * is2;\r\n  var sm23 = mat[6] * is3;\r\n  var sm31 = mat[8] * is1;\r\n  var sm32 = mat[9] * is2;\r\n  var sm33 = mat[10] * is3;\r\n  var trace = sm11 + sm22 + sm33;\r\n  var S = 0;\r\n  if (trace > 0) {\r\n    S = Math.sqrt(trace + 1.0) * 2;\r\n    out[3] = 0.25 * S;\r\n    out[0] = (sm23 - sm32) / S;\r\n    out[1] = (sm31 - sm13) / S;\r\n    out[2] = (sm12 - sm21) / S;\r\n  } else if (sm11 > sm22 && sm11 > sm33) {\r\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\r\n    out[3] = (sm23 - sm32) / S;\r\n    out[0] = 0.25 * S;\r\n    out[1] = (sm12 + sm21) / S;\r\n    out[2] = (sm31 + sm13) / S;\r\n  } else if (sm22 > sm33) {\r\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\r\n    out[3] = (sm31 - sm13) / S;\r\n    out[0] = (sm12 + sm21) / S;\r\n    out[1] = 0.25 * S;\r\n    out[2] = (sm23 + sm32) / S;\r\n  } else {\r\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\r\n    out[3] = (sm12 - sm21) / S;\r\n    out[0] = (sm31 + sm13) / S;\r\n    out[1] = (sm23 + sm32) / S;\r\n    out[2] = 0.25 * S;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Decomposes a transformation matrix into its rotation, translation\r\n * and scale components. Returns only the rotation component\r\n * @param  {quat} out_r Quaternion to receive the rotation component\r\n * @param  {vec3} out_t Vector to receive the translation vector\r\n * @param  {vec3} out_s Vector to receive the scaling factor\r\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @returns {quat} out_r\r\n */\r\nexport function decompose(out_r, out_t, out_s, mat) {\r\n  out_t[0] = mat[12];\r\n  out_t[1] = mat[13];\r\n  out_t[2] = mat[14];\r\n  var m11 = mat[0];\r\n  var m12 = mat[1];\r\n  var m13 = mat[2];\r\n  var m21 = mat[4];\r\n  var m22 = mat[5];\r\n  var m23 = mat[6];\r\n  var m31 = mat[8];\r\n  var m32 = mat[9];\r\n  var m33 = mat[10];\r\n  out_s[0] = Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13);\r\n  out_s[1] = Math.sqrt(m21 * m21 + m22 * m22 + m23 * m23);\r\n  out_s[2] = Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33);\r\n  var is1 = 1 / out_s[0];\r\n  var is2 = 1 / out_s[1];\r\n  var is3 = 1 / out_s[2];\r\n  var sm11 = m11 * is1;\r\n  var sm12 = m12 * is2;\r\n  var sm13 = m13 * is3;\r\n  var sm21 = m21 * is1;\r\n  var sm22 = m22 * is2;\r\n  var sm23 = m23 * is3;\r\n  var sm31 = m31 * is1;\r\n  var sm32 = m32 * is2;\r\n  var sm33 = m33 * is3;\r\n  var trace = sm11 + sm22 + sm33;\r\n  var S = 0;\r\n  if (trace > 0) {\r\n    S = Math.sqrt(trace + 1.0) * 2;\r\n    out_r[3] = 0.25 * S;\r\n    out_r[0] = (sm23 - sm32) / S;\r\n    out_r[1] = (sm31 - sm13) / S;\r\n    out_r[2] = (sm12 - sm21) / S;\r\n  } else if (sm11 > sm22 && sm11 > sm33) {\r\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\r\n    out_r[3] = (sm23 - sm32) / S;\r\n    out_r[0] = 0.25 * S;\r\n    out_r[1] = (sm12 + sm21) / S;\r\n    out_r[2] = (sm31 + sm13) / S;\r\n  } else if (sm22 > sm33) {\r\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\r\n    out_r[3] = (sm31 - sm13) / S;\r\n    out_r[0] = (sm12 + sm21) / S;\r\n    out_r[1] = 0.25 * S;\r\n    out_r[2] = (sm23 + sm32) / S;\r\n  } else {\r\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\r\n    out_r[3] = (sm12 - sm21) / S;\r\n    out_r[0] = (sm31 + sm13) / S;\r\n    out_r[1] = (sm23 + sm32) / S;\r\n    out_r[2] = 0.25 * S;\r\n  }\r\n  return out_r;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     mat4.fromQuat(quatMat, quat);\r\n *     mat4.multiply(dest, dest, quatMat);\r\n *     mat4.scale(dest, dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @param {ReadonlyVec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\r\nexport function fromRotationTranslationScale(out, q, v, s) {\r\n  // Quaternion math\r\n  var x = q[0],\r\n    y = q[1],\r\n    z = q[2],\r\n    w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n  var xx = x * x2;\r\n  var xy = x * y2;\r\n  var xz = x * z2;\r\n  var yy = y * y2;\r\n  var yz = y * z2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n  var sx = s[0];\r\n  var sy = s[1];\r\n  var sz = s[2];\r\n  out[0] = (1 - (yy + zz)) * sx;\r\n  out[1] = (xy + wz) * sx;\r\n  out[2] = (xz - wy) * sx;\r\n  out[3] = 0;\r\n  out[4] = (xy - wz) * sy;\r\n  out[5] = (1 - (xx + zz)) * sy;\r\n  out[6] = (yz + wx) * sy;\r\n  out[7] = 0;\r\n  out[8] = (xz + wy) * sz;\r\n  out[9] = (yz - wx) * sz;\r\n  out[10] = (1 - (xx + yy)) * sz;\r\n  out[11] = 0;\r\n  out[12] = v[0];\r\n  out[13] = v[1];\r\n  out[14] = v[2];\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *     mat4.translate(dest, dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     mat4.fromQuat(quatMat, quat);\r\n *     mat4.multiply(dest, dest, quatMat);\r\n *     mat4.scale(dest, dest, scale)\r\n *     mat4.translate(dest, dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @param {ReadonlyVec3} s Scaling vector\r\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\r\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\r\n  // Quaternion math\r\n  var x = q[0],\r\n    y = q[1],\r\n    z = q[2],\r\n    w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n  var xx = x * x2;\r\n  var xy = x * y2;\r\n  var xz = x * z2;\r\n  var yy = y * y2;\r\n  var yz = y * z2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n  var sx = s[0];\r\n  var sy = s[1];\r\n  var sz = s[2];\r\n  var ox = o[0];\r\n  var oy = o[1];\r\n  var oz = o[2];\r\n  var out0 = (1 - (yy + zz)) * sx;\r\n  var out1 = (xy + wz) * sx;\r\n  var out2 = (xz - wy) * sx;\r\n  var out4 = (xy - wz) * sy;\r\n  var out5 = (1 - (xx + zz)) * sy;\r\n  var out6 = (yz + wx) * sy;\r\n  var out8 = (xz + wy) * sz;\r\n  var out9 = (yz - wx) * sz;\r\n  var out10 = (1 - (xx + yy)) * sz;\r\n  out[0] = out0;\r\n  out[1] = out1;\r\n  out[2] = out2;\r\n  out[3] = 0;\r\n  out[4] = out4;\r\n  out[5] = out5;\r\n  out[6] = out6;\r\n  out[7] = 0;\r\n  out[8] = out8;\r\n  out[9] = out9;\r\n  out[10] = out10;\r\n  out[11] = 0;\r\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\r\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\r\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyQuat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\r\nexport function fromQuat(out, q) {\r\n  var x = q[0],\r\n    y = q[1],\r\n    z = q[2],\r\n    w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n  var xx = x * x2;\r\n  var yx = y * x2;\r\n  var yy = y * y2;\r\n  var zx = z * x2;\r\n  var zy = z * y2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n  out[0] = 1 - yy - zz;\r\n  out[1] = yx + wz;\r\n  out[2] = zx - wy;\r\n  out[3] = 0;\r\n  out[4] = yx - wz;\r\n  out[5] = 1 - xx - zz;\r\n  out[6] = zy + wx;\r\n  out[7] = 0;\r\n  out[8] = zx + wy;\r\n  out[9] = zy - wx;\r\n  out[10] = 1 - xx - yy;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\r\nexport function frustum(out, left, right, bottom, top, near, far) {\r\n  var rl = 1 / (right - left);\r\n  var tb = 1 / (top - bottom);\r\n  var nf = 1 / (near - far);\r\n  out[0] = near * 2 * rl;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = near * 2 * tb;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = (right + left) * rl;\r\n  out[9] = (top + bottom) * tb;\r\n  out[10] = (far + near) * nf;\r\n  out[11] = -1;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = far * near * 2 * nf;\r\n  out[15] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a perspective projection matrix with the given bounds.\r\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\r\n * which matches WebGL/OpenGL's clip volume.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\r\nexport function perspectiveNO(out, fovy, aspect, near, far) {\r\n  var f = 1.0 / Math.tan(fovy / 2);\r\n  out[0] = f / aspect;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = f;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[11] = -1;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[15] = 0;\r\n  if (far != null && far !== Infinity) {\r\n    var nf = 1 / (near - far);\r\n    out[10] = (far + near) * nf;\r\n    out[14] = 2 * far * near * nf;\r\n  } else {\r\n    out[10] = -1;\r\n    out[14] = -2 * near;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Alias for {@link mat4.perspectiveNO}\r\n * @function\r\n */\r\nexport var perspective = perspectiveNO;\r\n\r\n/**\r\n * Generates a perspective projection matrix suitable for WebGPU with the given bounds.\r\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\r\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\r\nexport function perspectiveZO(out, fovy, aspect, near, far) {\r\n  var f = 1.0 / Math.tan(fovy / 2);\r\n  out[0] = f / aspect;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = f;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[11] = -1;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[15] = 0;\r\n  if (far != null && far !== Infinity) {\r\n    var nf = 1 / (near - far);\r\n    out[10] = far * nf;\r\n    out[14] = far * near * nf;\r\n  } else {\r\n    out[10] = -1;\r\n    out[14] = -near;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\r\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\r\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\r\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\r\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\r\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\r\n  var xScale = 2.0 / (leftTan + rightTan);\r\n  var yScale = 2.0 / (upTan + downTan);\r\n  out[0] = xScale;\r\n  out[1] = 0.0;\r\n  out[2] = 0.0;\r\n  out[3] = 0.0;\r\n  out[4] = 0.0;\r\n  out[5] = yScale;\r\n  out[6] = 0.0;\r\n  out[7] = 0.0;\r\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\r\n  out[9] = (upTan - downTan) * yScale * 0.5;\r\n  out[10] = far / (near - far);\r\n  out[11] = -1.0;\r\n  out[12] = 0.0;\r\n  out[13] = 0.0;\r\n  out[14] = far * near / (near - far);\r\n  out[15] = 0.0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a orthogonal projection matrix with the given bounds.\r\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\r\n * which matches WebGL/OpenGL's clip volume.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\r\nexport function orthoNO(out, left, right, bottom, top, near, far) {\r\n  var lr = 1 / (left - right);\r\n  var bt = 1 / (bottom - top);\r\n  var nf = 1 / (near - far);\r\n  out[0] = -2 * lr;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = -2 * bt;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 2 * nf;\r\n  out[11] = 0;\r\n  out[12] = (left + right) * lr;\r\n  out[13] = (top + bottom) * bt;\r\n  out[14] = (far + near) * nf;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Alias for {@link mat4.orthoNO}\r\n * @function\r\n */\r\nexport var ortho = orthoNO;\r\n\r\n/**\r\n * Generates a orthogonal projection matrix with the given bounds.\r\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\r\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\r\nexport function orthoZO(out, left, right, bottom, top, near, far) {\r\n  var lr = 1 / (left - right);\r\n  var bt = 1 / (bottom - top);\r\n  var nf = 1 / (near - far);\r\n  out[0] = -2 * lr;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = -2 * bt;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = nf;\r\n  out[11] = 0;\r\n  out[12] = (left + right) * lr;\r\n  out[13] = (top + bottom) * bt;\r\n  out[14] = near * nf;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {ReadonlyVec3} eye Position of the viewer\r\n * @param {ReadonlyVec3} center Point the viewer is looking at\r\n * @param {ReadonlyVec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\r\nexport function lookAt(out, eye, center, up) {\r\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\r\n  var eyex = eye[0];\r\n  var eyey = eye[1];\r\n  var eyez = eye[2];\r\n  var upx = up[0];\r\n  var upy = up[1];\r\n  var upz = up[2];\r\n  var centerx = center[0];\r\n  var centery = center[1];\r\n  var centerz = center[2];\r\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\r\n    return identity(out);\r\n  }\r\n  z0 = eyex - centerx;\r\n  z1 = eyey - centery;\r\n  z2 = eyez - centerz;\r\n  len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\r\n  z0 *= len;\r\n  z1 *= len;\r\n  z2 *= len;\r\n  x0 = upy * z2 - upz * z1;\r\n  x1 = upz * z0 - upx * z2;\r\n  x2 = upx * z1 - upy * z0;\r\n  len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\r\n  if (!len) {\r\n    x0 = 0;\r\n    x1 = 0;\r\n    x2 = 0;\r\n  } else {\r\n    len = 1 / len;\r\n    x0 *= len;\r\n    x1 *= len;\r\n    x2 *= len;\r\n  }\r\n  y0 = z1 * x2 - z2 * x1;\r\n  y1 = z2 * x0 - z0 * x2;\r\n  y2 = z0 * x1 - z1 * x0;\r\n  len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\r\n  if (!len) {\r\n    y0 = 0;\r\n    y1 = 0;\r\n    y2 = 0;\r\n  } else {\r\n    len = 1 / len;\r\n    y0 *= len;\r\n    y1 *= len;\r\n    y2 *= len;\r\n  }\r\n  out[0] = x0;\r\n  out[1] = y0;\r\n  out[2] = z0;\r\n  out[3] = 0;\r\n  out[4] = x1;\r\n  out[5] = y1;\r\n  out[6] = z1;\r\n  out[7] = 0;\r\n  out[8] = x2;\r\n  out[9] = y2;\r\n  out[10] = z2;\r\n  out[11] = 0;\r\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\r\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\r\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {ReadonlyVec3} eye Position of the viewer\r\n * @param {ReadonlyVec3} target Point the viewer is looking at\r\n * @param {ReadonlyVec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\r\nexport function targetTo(out, eye, target, up) {\r\n  var eyex = eye[0],\r\n    eyey = eye[1],\r\n    eyez = eye[2],\r\n    upx = up[0],\r\n    upy = up[1],\r\n    upz = up[2];\r\n  var z0 = eyex - target[0],\r\n    z1 = eyey - target[1],\r\n    z2 = eyez - target[2];\r\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\r\n  if (len > 0) {\r\n    len = 1 / Math.sqrt(len);\r\n    z0 *= len;\r\n    z1 *= len;\r\n    z2 *= len;\r\n  }\r\n  var x0 = upy * z2 - upz * z1,\r\n    x1 = upz * z0 - upx * z2,\r\n    x2 = upx * z1 - upy * z0;\r\n  len = x0 * x0 + x1 * x1 + x2 * x2;\r\n  if (len > 0) {\r\n    len = 1 / Math.sqrt(len);\r\n    x0 *= len;\r\n    x1 *= len;\r\n    x2 *= len;\r\n  }\r\n  out[0] = x0;\r\n  out[1] = x1;\r\n  out[2] = x2;\r\n  out[3] = 0;\r\n  out[4] = z1 * x2 - z2 * x1;\r\n  out[5] = z2 * x0 - z0 * x2;\r\n  out[6] = z0 * x1 - z1 * x0;\r\n  out[7] = 0;\r\n  out[8] = z0;\r\n  out[9] = z1;\r\n  out[10] = z2;\r\n  out[11] = 0;\r\n  out[12] = eyex;\r\n  out[13] = eyey;\r\n  out[14] = eyez;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {ReadonlyMat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\r\nexport function str(a) {\r\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\r\n}\r\n\r\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\r\nexport function frob(a) {\r\n  return Math.sqrt(a[0] * a[0] + a[1] * a[1] + a[2] * a[2] + a[3] * a[3] + a[4] * a[4] + a[5] * a[5] + a[6] * a[6] + a[7] * a[7] + a[8] * a[8] + a[9] * a[9] + a[10] * a[10] + a[11] * a[11] + a[12] * a[12] + a[13] * a[13] + a[14] * a[14] + a[15] * a[15]);\r\n}\r\n\r\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  out[4] = a[4] + b[4];\r\n  out[5] = a[5] + b[5];\r\n  out[6] = a[6] + b[6];\r\n  out[7] = a[7] + b[7];\r\n  out[8] = a[8] + b[8];\r\n  out[9] = a[9] + b[9];\r\n  out[10] = a[10] + b[10];\r\n  out[11] = a[11] + b[11];\r\n  out[12] = a[12] + b[12];\r\n  out[13] = a[13] + b[13];\r\n  out[14] = a[14] + b[14];\r\n  out[15] = a[15] + b[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  out[4] = a[4] - b[4];\r\n  out[5] = a[5] - b[5];\r\n  out[6] = a[6] - b[6];\r\n  out[7] = a[7] - b[7];\r\n  out[8] = a[8] - b[8];\r\n  out[9] = a[9] - b[9];\r\n  out[10] = a[10] - b[10];\r\n  out[11] = a[11] - b[11];\r\n  out[12] = a[12] - b[12];\r\n  out[13] = a[13] - b[13];\r\n  out[14] = a[14] - b[14];\r\n  out[15] = a[15] - b[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\r\nexport function multiplyScalar(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  out[4] = a[4] * b;\r\n  out[5] = a[5] * b;\r\n  out[6] = a[6] * b;\r\n  out[7] = a[7] * b;\r\n  out[8] = a[8] * b;\r\n  out[9] = a[9] * b;\r\n  out[10] = a[10] * b;\r\n  out[11] = a[11] * b;\r\n  out[12] = a[12] * b;\r\n  out[13] = a[13] * b;\r\n  out[14] = a[14] * b;\r\n  out[15] = a[15] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat4} out\r\n */\r\nexport function multiplyScalarAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  out[4] = a[4] + b[4] * scale;\r\n  out[5] = a[5] + b[5] * scale;\r\n  out[6] = a[6] + b[6] * scale;\r\n  out[7] = a[7] + b[7] * scale;\r\n  out[8] = a[8] + b[8] * scale;\r\n  out[9] = a[9] + b[9] * scale;\r\n  out[10] = a[10] + b[10] * scale;\r\n  out[11] = a[11] + b[11] * scale;\r\n  out[12] = a[12] + b[12] * scale;\r\n  out[13] = a[13] + b[13] * scale;\r\n  out[14] = a[14] + b[14] * scale;\r\n  out[15] = a[15] + b[15] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat4} a The first matrix.\r\n * @param {ReadonlyMat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat4} a The first matrix.\r\n * @param {ReadonlyMat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n    a1 = a[1],\r\n    a2 = a[2],\r\n    a3 = a[3];\r\n  var a4 = a[4],\r\n    a5 = a[5],\r\n    a6 = a[6],\r\n    a7 = a[7];\r\n  var a8 = a[8],\r\n    a9 = a[9],\r\n    a10 = a[10],\r\n    a11 = a[11];\r\n  var a12 = a[12],\r\n    a13 = a[13],\r\n    a14 = a[14],\r\n    a15 = a[15];\r\n  var b0 = b[0],\r\n    b1 = b[1],\r\n    b2 = b[2],\r\n    b3 = b[3];\r\n  var b4 = b[4],\r\n    b5 = b[5],\r\n    b6 = b[6],\r\n    b7 = b[7];\r\n  var b8 = b[8],\r\n    b9 = b[9],\r\n    b10 = b[10],\r\n    b11 = b[11];\r\n  var b12 = b[12],\r\n    b13 = b[13],\r\n    b14 = b[14],\r\n    b15 = b[15];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\r\n}\r\n\r\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;", "import * as glMatrix from \"./common.js\";\r\nimport * as mat3 from \"./mat3.js\";\r\nimport * as vec3 from \"./vec3.js\";\r\nimport * as vec4 from \"./vec4.js\";\r\n\r\n/**\r\n * Quaternion in the format XYZW\r\n * @module quat\r\n */\r\n\r\n/**\r\n * Creates a new identity quat\r\n *\r\n * @returns {quat} a new quaternion\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[0] = 0;\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n  }\r\n  out[3] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a quat to the identity quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 0;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Sets a quat from the given angle and rotation axis,\r\n * then returns it.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyVec3} axis the axis around which to rotate\r\n * @param {Number} rad the angle in radians\r\n * @returns {quat} out\r\n **/\r\nexport function setAxisAngle(out, axis, rad) {\r\n  rad = rad * 0.5;\r\n  var s = Math.sin(rad);\r\n  out[0] = s * axis[0];\r\n  out[1] = s * axis[1];\r\n  out[2] = s * axis[2];\r\n  out[3] = Math.cos(rad);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Gets the rotation axis and angle for a given\r\n *  quaternion. If a quaternion is created with\r\n *  setAxisAngle, this method will return the same\r\n *  values as providied in the original parameter list\r\n *  OR functionally equivalent values.\r\n * Example: The quaternion formed by axis [0, 0, 1] and\r\n *  angle -90 is the same as the quaternion formed by\r\n *  [0, 0, 1] and 270. This method favors the latter.\r\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\r\n * @param  {ReadonlyQuat} q     Quaternion to be decomposed\r\n * @return {Number}     Angle, in radians, of the rotation\r\n */\r\nexport function getAxisAngle(out_axis, q) {\r\n  var rad = Math.acos(q[3]) * 2.0;\r\n  var s = Math.sin(rad / 2.0);\r\n  if (s > glMatrix.EPSILON) {\r\n    out_axis[0] = q[0] / s;\r\n    out_axis[1] = q[1] / s;\r\n    out_axis[2] = q[2] / s;\r\n  } else {\r\n    // If s is zero, return any axis (no rotation - axis does not matter)\r\n    out_axis[0] = 1;\r\n    out_axis[1] = 0;\r\n    out_axis[2] = 0;\r\n  }\r\n  return rad;\r\n}\r\n\r\n/**\r\n * Gets the angular distance between two unit quaternions\r\n *\r\n * @param  {ReadonlyQuat} a     Origin unit quaternion\r\n * @param  {ReadonlyQuat} b     Destination unit quaternion\r\n * @return {Number}     Angle, in radians, between the two quaternions\r\n */\r\nexport function getAngle(a, b) {\r\n  var dotproduct = dot(a, b);\r\n  return Math.acos(2 * dotproduct * dotproduct - 1);\r\n}\r\n\r\n/**\r\n * Multiplies two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @returns {quat} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var ax = a[0],\r\n    ay = a[1],\r\n    az = a[2],\r\n    aw = a[3];\r\n  var bx = b[0],\r\n    by = b[1],\r\n    bz = b[2],\r\n    bw = b[3];\r\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\r\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\r\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\r\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a quaternion by the given angle about the X axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {ReadonlyQuat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\r\nexport function rotateX(out, a, rad) {\r\n  rad *= 0.5;\r\n  var ax = a[0],\r\n    ay = a[1],\r\n    az = a[2],\r\n    aw = a[3];\r\n  var bx = Math.sin(rad),\r\n    bw = Math.cos(rad);\r\n  out[0] = ax * bw + aw * bx;\r\n  out[1] = ay * bw + az * bx;\r\n  out[2] = az * bw - ay * bx;\r\n  out[3] = aw * bw - ax * bx;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a quaternion by the given angle about the Y axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {ReadonlyQuat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\r\nexport function rotateY(out, a, rad) {\r\n  rad *= 0.5;\r\n  var ax = a[0],\r\n    ay = a[1],\r\n    az = a[2],\r\n    aw = a[3];\r\n  var by = Math.sin(rad),\r\n    bw = Math.cos(rad);\r\n  out[0] = ax * bw - az * by;\r\n  out[1] = ay * bw + aw * by;\r\n  out[2] = az * bw + ax * by;\r\n  out[3] = aw * bw - ay * by;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a quaternion by the given angle about the Z axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {ReadonlyQuat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\r\nexport function rotateZ(out, a, rad) {\r\n  rad *= 0.5;\r\n  var ax = a[0],\r\n    ay = a[1],\r\n    az = a[2],\r\n    aw = a[3];\r\n  var bz = Math.sin(rad),\r\n    bw = Math.cos(rad);\r\n  out[0] = ax * bw + ay * bz;\r\n  out[1] = ay * bw - ax * bz;\r\n  out[2] = az * bw + aw * bz;\r\n  out[3] = aw * bw - az * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the W component of a quat from the X, Y, and Z components.\r\n * Assumes that quaternion is 1 unit in length.\r\n * Any existing W component will be ignored.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate W component of\r\n * @returns {quat} out\r\n */\r\nexport function calculateW(out, a) {\r\n  var x = a[0],\r\n    y = a[1],\r\n    z = a[2];\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculate the exponential of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate the exponential of\r\n * @returns {quat} out\r\n */\r\nexport function exp(out, a) {\r\n  var x = a[0],\r\n    y = a[1],\r\n    z = a[2],\r\n    w = a[3];\r\n  var r = Math.sqrt(x * x + y * y + z * z);\r\n  var et = Math.exp(w);\r\n  var s = r > 0 ? et * Math.sin(r) / r : 0;\r\n  out[0] = x * s;\r\n  out[1] = y * s;\r\n  out[2] = z * s;\r\n  out[3] = et * Math.cos(r);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculate the natural logarithm of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate the exponential of\r\n * @returns {quat} out\r\n */\r\nexport function ln(out, a) {\r\n  var x = a[0],\r\n    y = a[1],\r\n    z = a[2],\r\n    w = a[3];\r\n  var r = Math.sqrt(x * x + y * y + z * z);\r\n  var t = r > 0 ? Math.atan2(r, w) / r : 0;\r\n  out[0] = x * t;\r\n  out[1] = y * t;\r\n  out[2] = z * t;\r\n  out[3] = 0.5 * Math.log(x * x + y * y + z * z + w * w);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculate the scalar power of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate the exponential of\r\n * @param {Number} b amount to scale the quaternion by\r\n * @returns {quat} out\r\n */\r\nexport function pow(out, a, b) {\r\n  ln(out, a);\r\n  scale(out, out, b);\r\n  exp(out, out);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a spherical linear interpolation between two quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\r\nexport function slerp(out, a, b, t) {\r\n  // benchmarks:\r\n  //    http://jsperf.com/quaternion-slerp-implementations\r\n  var ax = a[0],\r\n    ay = a[1],\r\n    az = a[2],\r\n    aw = a[3];\r\n  var bx = b[0],\r\n    by = b[1],\r\n    bz = b[2],\r\n    bw = b[3];\r\n  var omega, cosom, sinom, scale0, scale1;\r\n\r\n  // calc cosine\r\n  cosom = ax * bx + ay * by + az * bz + aw * bw;\r\n  // adjust signs (if necessary)\r\n  if (cosom < 0.0) {\r\n    cosom = -cosom;\r\n    bx = -bx;\r\n    by = -by;\r\n    bz = -bz;\r\n    bw = -bw;\r\n  }\r\n  // calculate coefficients\r\n  if (1.0 - cosom > glMatrix.EPSILON) {\r\n    // standard case (slerp)\r\n    omega = Math.acos(cosom);\r\n    sinom = Math.sin(omega);\r\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\r\n    scale1 = Math.sin(t * omega) / sinom;\r\n  } else {\r\n    // \"from\" and \"to\" quaternions are very close\r\n    //  ... so we can do a linear interpolation\r\n    scale0 = 1.0 - t;\r\n    scale1 = t;\r\n  }\r\n  // calculate final values\r\n  out[0] = scale0 * ax + scale1 * bx;\r\n  out[1] = scale0 * ay + scale1 * by;\r\n  out[2] = scale0 * az + scale1 * bz;\r\n  out[3] = scale0 * aw + scale1 * bw;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a random unit quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\r\nexport function random(out) {\r\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\r\n  // TODO: Calling random 3 times is probably not the fastest solution\r\n  var u1 = glMatrix.RANDOM();\r\n  var u2 = glMatrix.RANDOM();\r\n  var u3 = glMatrix.RANDOM();\r\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\r\n  var sqrtU1 = Math.sqrt(u1);\r\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\r\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\r\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\r\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the inverse of a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate inverse of\r\n * @returns {quat} out\r\n */\r\nexport function invert(out, a) {\r\n  var a0 = a[0],\r\n    a1 = a[1],\r\n    a2 = a[2],\r\n    a3 = a[3];\r\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\r\n  var invDot = dot ? 1.0 / dot : 0;\r\n\r\n  // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\r\n\r\n  out[0] = -a0 * invDot;\r\n  out[1] = -a1 * invDot;\r\n  out[2] = -a2 * invDot;\r\n  out[3] = a3 * invDot;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the conjugate of a quat\r\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate conjugate of\r\n * @returns {quat} out\r\n */\r\nexport function conjugate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a quaternion from the given 3x3 rotation matrix.\r\n *\r\n * NOTE: The resultant quaternion is not normalized, so you should be sure\r\n * to renormalize the quaternion yourself where necessary.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyMat3} m rotation matrix\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport function fromMat3(out, m) {\r\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\r\n  // article \"Quaternion Calculus and Fast Animation\".\r\n  var fTrace = m[0] + m[4] + m[8];\r\n  var fRoot;\r\n  if (fTrace > 0.0) {\r\n    // |w| > 1/2, may as well choose w > 1/2\r\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\r\n    out[3] = 0.5 * fRoot;\r\n    fRoot = 0.5 / fRoot; // 1/(4w)\r\n    out[0] = (m[5] - m[7]) * fRoot;\r\n    out[1] = (m[6] - m[2]) * fRoot;\r\n    out[2] = (m[1] - m[3]) * fRoot;\r\n  } else {\r\n    // |w| <= 1/2\r\n    var i = 0;\r\n    if (m[4] > m[0]) i = 1;\r\n    if (m[8] > m[i * 3 + i]) i = 2;\r\n    var j = (i + 1) % 3;\r\n    var k = (i + 2) % 3;\r\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\r\n    out[i] = 0.5 * fRoot;\r\n    fRoot = 0.5 / fRoot;\r\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\r\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\r\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a quaternion from the given euler angle x, y, z using the provided intrinsic order for the conversion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {Number} x Angle to rotate around X axis in degrees.\r\n * @param {Number} y Angle to rotate around Y axis in degrees.\r\n * @param {Number} z Angle to rotate around Z axis in degrees.\r\n * @param {'xyz'|'xzy'|'yxz'|'yzx'|'zxy'|'zyx'} order Intrinsic order for conversion, default is zyx.\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport function fromEuler(out, x, y, z) {\r\n  var order = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : glMatrix.ANGLE_ORDER;\r\n  var halfToRad = Math.PI / 360;\r\n  x *= halfToRad;\r\n  z *= halfToRad;\r\n  y *= halfToRad;\r\n  var sx = Math.sin(x);\r\n  var cx = Math.cos(x);\r\n  var sy = Math.sin(y);\r\n  var cy = Math.cos(y);\r\n  var sz = Math.sin(z);\r\n  var cz = Math.cos(z);\r\n  switch (order) {\r\n    case \"xyz\":\r\n      out[0] = sx * cy * cz + cx * sy * sz;\r\n      out[1] = cx * sy * cz - sx * cy * sz;\r\n      out[2] = cx * cy * sz + sx * sy * cz;\r\n      out[3] = cx * cy * cz - sx * sy * sz;\r\n      break;\r\n    case \"xzy\":\r\n      out[0] = sx * cy * cz - cx * sy * sz;\r\n      out[1] = cx * sy * cz - sx * cy * sz;\r\n      out[2] = cx * cy * sz + sx * sy * cz;\r\n      out[3] = cx * cy * cz + sx * sy * sz;\r\n      break;\r\n    case \"yxz\":\r\n      out[0] = sx * cy * cz + cx * sy * sz;\r\n      out[1] = cx * sy * cz - sx * cy * sz;\r\n      out[2] = cx * cy * sz - sx * sy * cz;\r\n      out[3] = cx * cy * cz + sx * sy * sz;\r\n      break;\r\n    case \"yzx\":\r\n      out[0] = sx * cy * cz + cx * sy * sz;\r\n      out[1] = cx * sy * cz + sx * cy * sz;\r\n      out[2] = cx * cy * sz - sx * sy * cz;\r\n      out[3] = cx * cy * cz - sx * sy * sz;\r\n      break;\r\n    case \"zxy\":\r\n      out[0] = sx * cy * cz - cx * sy * sz;\r\n      out[1] = cx * sy * cz + sx * cy * sz;\r\n      out[2] = cx * cy * sz + sx * sy * cz;\r\n      out[3] = cx * cy * cz - sx * sy * sz;\r\n      break;\r\n    case \"zyx\":\r\n      out[0] = sx * cy * cz - cx * sy * sz;\r\n      out[1] = cx * sy * cz + sx * cy * sz;\r\n      out[2] = cx * cy * sz - sx * sy * cz;\r\n      out[3] = cx * cy * cz + sx * sy * sz;\r\n      break;\r\n    default:\r\n      throw new Error('Unknown angle order ' + order);\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a quaternion\r\n *\r\n * @param {ReadonlyQuat} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\r\nexport function str(a) {\r\n  return \"quat(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\r\n}\r\n\r\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {ReadonlyQuat} a quaternion to clone\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\r\nexport var clone = vec4.clone;\r\n\r\n/**\r\n * Creates a new quat initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\r\nexport var fromValues = vec4.fromValues;\r\n\r\n/**\r\n * Copy the values from one quat to another\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the source quaternion\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var copy = vec4.copy;\r\n\r\n/**\r\n * Set the components of a quat to the given values\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var set = vec4.set;\r\n\r\n/**\r\n * Adds two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var add = vec4.add;\r\n\r\n/**\r\n * Alias for {@link quat.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Scales a quat by a scalar number\r\n *\r\n * @param {quat} out the receiving vector\r\n * @param {ReadonlyQuat} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var scale = vec4.scale;\r\n\r\n/**\r\n * Calculates the dot product of two quat's\r\n *\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\r\nexport var dot = vec4.dot;\r\n\r\n/**\r\n * Performs a linear interpolation between two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var lerp = vec4.lerp;\r\n\r\n/**\r\n * Calculates the length of a quat\r\n *\r\n * @param {ReadonlyQuat} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\nexport var length = vec4.length;\r\n\r\n/**\r\n * Alias for {@link quat.length}\r\n * @function\r\n */\r\nexport var len = length;\r\n\r\n/**\r\n * Calculates the squared length of a quat\r\n *\r\n * @param {ReadonlyQuat} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\r\nexport var squaredLength = vec4.squaredLength;\r\n\r\n/**\r\n * Alias for {@link quat.squaredLength}\r\n * @function\r\n */\r\nexport var sqrLen = squaredLength;\r\n\r\n/**\r\n * Normalize a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quaternion to normalize\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var normalize = vec4.normalize;\r\n\r\n/**\r\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyQuat} a The first quaternion.\r\n * @param {ReadonlyQuat} b The second quaternion.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport var exactEquals = vec4.exactEquals;\r\n\r\n/**\r\n * Returns whether or not the quaternions point approximately to the same direction.\r\n *\r\n * Both quaternions are assumed to be unit length.\r\n *\r\n * @param {ReadonlyQuat} a The first unit quaternion.\r\n * @param {ReadonlyQuat} b The second unit quaternion.\r\n * @returns {Boolean} True if the quaternions are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  return Math.abs(vec4.dot(a, b)) >= 1 - glMatrix.EPSILON;\r\n}\r\n\r\n/**\r\n * Sets a quaternion to represent the shortest rotation from one\r\n * vector to another.\r\n *\r\n * Both vectors are assumed to be unit length.\r\n *\r\n * @param {quat} out the receiving quaternion.\r\n * @param {ReadonlyVec3} a the initial vector\r\n * @param {ReadonlyVec3} b the destination vector\r\n * @returns {quat} out\r\n */\r\nexport var rotationTo = function () {\r\n  var tmpvec3 = vec3.create();\r\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\r\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\r\n  return function (out, a, b) {\r\n    var dot = vec3.dot(a, b);\r\n    if (dot < -0.999999) {\r\n      vec3.cross(tmpvec3, xUnitVec3, a);\r\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\r\n      vec3.normalize(tmpvec3, tmpvec3);\r\n      setAxisAngle(out, tmpvec3, Math.PI);\r\n      return out;\r\n    } else if (dot > 0.999999) {\r\n      out[0] = 0;\r\n      out[1] = 0;\r\n      out[2] = 0;\r\n      out[3] = 1;\r\n      return out;\r\n    } else {\r\n      vec3.cross(tmpvec3, a, b);\r\n      out[0] = tmpvec3[0];\r\n      out[1] = tmpvec3[1];\r\n      out[2] = tmpvec3[2];\r\n      out[3] = 1 + dot;\r\n      return normalize(out, out);\r\n    }\r\n  };\r\n}();\r\n\r\n/**\r\n * Performs a spherical linear interpolation with two control points\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @param {ReadonlyQuat} c the third operand\r\n * @param {ReadonlyQuat} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\r\nexport var sqlerp = function () {\r\n  var temp1 = create();\r\n  var temp2 = create();\r\n  return function (out, a, b, c, d, t) {\r\n    slerp(temp1, a, d, t);\r\n    slerp(temp2, b, c, t);\r\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\r\n    return out;\r\n  };\r\n}();\r\n\r\n/**\r\n * Sets the specified quaternion with values corresponding to the given\r\n * axes. Each axis is a vec3 and is expected to be unit length and\r\n * perpendicular to all other specified axes.\r\n *\r\n * @param {ReadonlyVec3} view  the vector representing the viewing direction\r\n * @param {ReadonlyVec3} right the vector representing the local \"right\" direction\r\n * @param {ReadonlyVec3} up    the vector representing the local \"up\" direction\r\n * @returns {quat} out\r\n */\r\nexport var setAxes = function () {\r\n  var matr = mat3.create();\r\n  return function (out, view, right, up) {\r\n    matr[0] = right[0];\r\n    matr[3] = right[1];\r\n    matr[6] = right[2];\r\n    matr[1] = up[0];\r\n    matr[4] = up[1];\r\n    matr[7] = up[2];\r\n    matr[2] = -view[0];\r\n    matr[5] = -view[1];\r\n    matr[8] = -view[2];\r\n    return normalize(out, fromMat3(out, matr));\r\n  };\r\n}();", "import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 3 Dimensional Vector\r\n * @module vec3\r\n */\r\n\r\n/**\r\n * Creates a new, empty vec3\r\n *\r\n * @returns {vec3} a new 3D vector\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(3);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[0] = 0;\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec3 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec3} a vector to clone\r\n * @returns {vec3} a new 3D vector\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(3);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the length of a vec3\r\n *\r\n * @param {ReadonlyVec3} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\nexport function length(a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  return Math.sqrt(x * x + y * y + z * z);\r\n}\r\n\r\n/**\r\n * Creates a new vec3 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} a new 3D vector\r\n */\r\nexport function fromValues(x, y, z) {\r\n  var out = new glMatrix.ARRAY_TYPE(3);\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one vec3 to another\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the source vector\r\n * @returns {vec3} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a vec3 to the given values\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} out\r\n */\r\nexport function set(out, x, y, z) {\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiplies two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  out[0] = a[0] * b[0];\r\n  out[1] = a[1] * b[1];\r\n  out[2] = a[2] * b[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Divides two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function divide(out, a, b) {\r\n  out[0] = a[0] / b[0];\r\n  out[1] = a[1] / b[1];\r\n  out[2] = a[2] / b[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.ceil the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to ceil\r\n * @returns {vec3} out\r\n */\r\nexport function ceil(out, a) {\r\n  out[0] = Math.ceil(a[0]);\r\n  out[1] = Math.ceil(a[1]);\r\n  out[2] = Math.ceil(a[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.floor the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to floor\r\n * @returns {vec3} out\r\n */\r\nexport function floor(out, a) {\r\n  out[0] = Math.floor(a[0]);\r\n  out[1] = Math.floor(a[1]);\r\n  out[2] = Math.floor(a[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the minimum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function min(out, a, b) {\r\n  out[0] = Math.min(a[0], b[0]);\r\n  out[1] = Math.min(a[1], b[1]);\r\n  out[2] = Math.min(a[2], b[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the maximum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function max(out, a, b) {\r\n  out[0] = Math.max(a[0], b[0]);\r\n  out[1] = Math.max(a[1], b[1]);\r\n  out[2] = Math.max(a[2], b[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * symmetric round the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to round\r\n * @returns {vec3} out\r\n */\r\nexport function round(out, a) {\r\n  out[0] = glMatrix.round(a[0]);\r\n  out[1] = glMatrix.round(a[1]);\r\n  out[2] = glMatrix.round(a[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales a vec3 by a scalar number\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec3} out\r\n */\r\nexport function scale(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec3's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec3} out\r\n */\r\nexport function scaleAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the euclidian distance between two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\r\nexport function distance(a, b) {\r\n  var x = b[0] - a[0];\r\n  var y = b[1] - a[1];\r\n  var z = b[2] - a[2];\r\n  return Math.sqrt(x * x + y * y + z * z);\r\n}\r\n\r\n/**\r\n * Calculates the squared euclidian distance between two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\r\nexport function squaredDistance(a, b) {\r\n  var x = b[0] - a[0];\r\n  var y = b[1] - a[1];\r\n  var z = b[2] - a[2];\r\n  return x * x + y * y + z * z;\r\n}\r\n\r\n/**\r\n * Calculates the squared length of a vec3\r\n *\r\n * @param {ReadonlyVec3} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\r\nexport function squaredLength(a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  return x * x + y * y + z * z;\r\n}\r\n\r\n/**\r\n * Negates the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to negate\r\n * @returns {vec3} out\r\n */\r\nexport function negate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the inverse of the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to invert\r\n * @returns {vec3} out\r\n */\r\nexport function inverse(out, a) {\r\n  out[0] = 1.0 / a[0];\r\n  out[1] = 1.0 / a[1];\r\n  out[2] = 1.0 / a[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Normalize a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to normalize\r\n * @returns {vec3} out\r\n */\r\nexport function normalize(out, a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  var len = x * x + y * y + z * z;\r\n  if (len > 0) {\r\n    //TODO: evaluate use of glm_invsqrt here?\r\n    len = 1 / Math.sqrt(len);\r\n  }\r\n  out[0] = a[0] * len;\r\n  out[1] = a[1] * len;\r\n  out[2] = a[2] * len;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the dot product of two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\r\nexport function dot(a, b) {\r\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\r\n}\r\n\r\n/**\r\n * Computes the cross product of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function cross(out, a, b) {\r\n  var ax = a[0],\r\n    ay = a[1],\r\n    az = a[2];\r\n  var bx = b[0],\r\n    by = b[1],\r\n    bz = b[2];\r\n  out[0] = ay * bz - az * by;\r\n  out[1] = az * bx - ax * bz;\r\n  out[2] = ax * by - ay * bx;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a linear interpolation between two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\r\nexport function lerp(out, a, b, t) {\r\n  var ax = a[0];\r\n  var ay = a[1];\r\n  var az = a[2];\r\n  out[0] = ax + t * (b[0] - ax);\r\n  out[1] = ay + t * (b[1] - ay);\r\n  out[2] = az + t * (b[2] - az);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a spherical linear interpolation between two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\r\nexport function slerp(out, a, b, t) {\r\n  var angle = Math.acos(Math.min(Math.max(dot(a, b), -1), 1));\r\n  var sinTotal = Math.sin(angle);\r\n  var ratioA = Math.sin((1 - t) * angle) / sinTotal;\r\n  var ratioB = Math.sin(t * angle) / sinTotal;\r\n  out[0] = ratioA * a[0] + ratioB * b[0];\r\n  out[1] = ratioA * a[1] + ratioB * b[1];\r\n  out[2] = ratioA * a[2] + ratioB * b[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a hermite interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {ReadonlyVec3} c the third operand\r\n * @param {ReadonlyVec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\r\nexport function hermite(out, a, b, c, d, t) {\r\n  var factorTimes2 = t * t;\r\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\r\n  var factor2 = factorTimes2 * (t - 2) + t;\r\n  var factor3 = factorTimes2 * (t - 1);\r\n  var factor4 = factorTimes2 * (3 - 2 * t);\r\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\r\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\r\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a bezier interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {ReadonlyVec3} c the third operand\r\n * @param {ReadonlyVec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\r\nexport function bezier(out, a, b, c, d, t) {\r\n  var inverseFactor = 1 - t;\r\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\r\n  var factorTimes2 = t * t;\r\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\r\n  var factor2 = 3 * t * inverseFactorTimesTwo;\r\n  var factor3 = 3 * factorTimes2 * inverseFactor;\r\n  var factor4 = factorTimes2 * t;\r\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\r\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\r\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If omitted, a unit vector will be returned\r\n * @returns {vec3} out\r\n */\r\nexport function random(out, scale) {\r\n  scale = scale === undefined ? 1.0 : scale;\r\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\r\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\r\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\r\n  out[0] = Math.cos(r) * zScale;\r\n  out[1] = Math.sin(r) * zScale;\r\n  out[2] = z * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec3 with a mat4.\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec3} out\r\n */\r\nexport function transformMat4(out, a, m) {\r\n  var x = a[0],\r\n    y = a[1],\r\n    z = a[2];\r\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\r\n  w = w || 1.0;\r\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\r\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\r\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec3 with a mat3.\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\r\n * @returns {vec3} out\r\n */\r\nexport function transformMat3(out, a, m) {\r\n  var x = a[0],\r\n    y = a[1],\r\n    z = a[2];\r\n  out[0] = x * m[0] + y * m[3] + z * m[6];\r\n  out[1] = x * m[1] + y * m[4] + z * m[7];\r\n  out[2] = x * m[2] + y * m[5] + z * m[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec3 with a quat\r\n * Can also be used for dual quaternions. (Multiply it with the real part)\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyQuat} q normalized quaternion to transform with\r\n * @returns {vec3} out\r\n */\r\nexport function transformQuat(out, a, q) {\r\n  // Fast Vector Rotation using Quaternions by Robert Eisele\r\n  // https://raw.org/proof/vector-rotation-using-quaternions/\r\n\r\n  var qx = q[0],\r\n    qy = q[1],\r\n    qz = q[2],\r\n    qw = q[3];\r\n  var vx = a[0],\r\n    vy = a[1],\r\n    vz = a[2];\r\n\r\n  // t = q x v\r\n  var tx = qy * vz - qz * vy;\r\n  var ty = qz * vx - qx * vz;\r\n  var tz = qx * vy - qy * vx;\r\n\r\n  // t = 2t\r\n  tx = tx + tx;\r\n  ty = ty + ty;\r\n  tz = tz + tz;\r\n\r\n  // v + w t + q x t\r\n  out[0] = vx + qw * tx + qy * tz - qz * ty;\r\n  out[1] = vy + qw * ty + qz * tx - qx * tz;\r\n  out[2] = vz + qw * tz + qx * ty - qy * tx;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotate a 3D vector around the x-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\r\nexport function rotateX(out, a, b, rad) {\r\n  var p = [],\r\n    r = [];\r\n  //Translate point to the origin\r\n  p[0] = a[0] - b[0];\r\n  p[1] = a[1] - b[1];\r\n  p[2] = a[2] - b[2];\r\n\r\n  //perform rotation\r\n  r[0] = p[0];\r\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\r\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad);\r\n\r\n  //translate to correct position\r\n  out[0] = r[0] + b[0];\r\n  out[1] = r[1] + b[1];\r\n  out[2] = r[2] + b[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotate a 3D vector around the y-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\r\nexport function rotateY(out, a, b, rad) {\r\n  var p = [],\r\n    r = [];\r\n  //Translate point to the origin\r\n  p[0] = a[0] - b[0];\r\n  p[1] = a[1] - b[1];\r\n  p[2] = a[2] - b[2];\r\n\r\n  //perform rotation\r\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\r\n  r[1] = p[1];\r\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad);\r\n\r\n  //translate to correct position\r\n  out[0] = r[0] + b[0];\r\n  out[1] = r[1] + b[1];\r\n  out[2] = r[2] + b[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotate a 3D vector around the z-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\r\nexport function rotateZ(out, a, b, rad) {\r\n  var p = [],\r\n    r = [];\r\n  //Translate point to the origin\r\n  p[0] = a[0] - b[0];\r\n  p[1] = a[1] - b[1];\r\n  p[2] = a[2] - b[2];\r\n\r\n  //perform rotation\r\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\r\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\r\n  r[2] = p[2];\r\n\r\n  //translate to correct position\r\n  out[0] = r[0] + b[0];\r\n  out[1] = r[1] + b[1];\r\n  out[2] = r[2] + b[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Get the angle between two 3D vectors\r\n * @param {ReadonlyVec3} a The first operand\r\n * @param {ReadonlyVec3} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\r\nexport function angle(a, b) {\r\n  var ax = a[0],\r\n    ay = a[1],\r\n    az = a[2],\r\n    bx = b[0],\r\n    by = b[1],\r\n    bz = b[2],\r\n    mag = Math.sqrt((ax * ax + ay * ay + az * az) * (bx * bx + by * by + bz * bz)),\r\n    cosine = mag && dot(a, b) / mag;\r\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\r\n}\r\n\r\n/**\r\n * Set the components of a vec3 to zero\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @returns {vec3} out\r\n */\r\nexport function zero(out) {\r\n  out[0] = 0.0;\r\n  out[1] = 0.0;\r\n  out[2] = 0.0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec3} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\r\nexport function str(a) {\r\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec3} a The first vector.\r\n * @param {ReadonlyVec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec3} a The first vector.\r\n * @param {ReadonlyVec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n    a1 = a[1],\r\n    a2 = a[2];\r\n  var b0 = b[0],\r\n    b1 = b[1],\r\n    b2 = b[2];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\r\n}\r\n\r\n/**\r\n * Alias for {@link vec3.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;\r\n\r\n/**\r\n * Alias for {@link vec3.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link vec3.divide}\r\n * @function\r\n */\r\nexport var div = divide;\r\n\r\n/**\r\n * Alias for {@link vec3.distance}\r\n * @function\r\n */\r\nexport var dist = distance;\r\n\r\n/**\r\n * Alias for {@link vec3.squaredDistance}\r\n * @function\r\n */\r\nexport var sqrDist = squaredDistance;\r\n\r\n/**\r\n * Alias for {@link vec3.length}\r\n * @function\r\n */\r\nexport var len = length;\r\n\r\n/**\r\n * Alias for {@link vec3.squaredLength}\r\n * @function\r\n */\r\nexport var sqrLen = squaredLength;\r\n\r\n/**\r\n * Perform some operation over an array of vec3s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\r\nexport var forEach = function () {\r\n  var vec = create();\r\n  return function (a, stride, offset, count, fn, arg) {\r\n    var i, l;\r\n    if (!stride) {\r\n      stride = 3;\r\n    }\r\n    if (!offset) {\r\n      offset = 0;\r\n    }\r\n    if (count) {\r\n      l = Math.min(count * stride + offset, a.length);\r\n    } else {\r\n      l = a.length;\r\n    }\r\n    for (i = offset; i < l; i += stride) {\r\n      vec[0] = a[i];\r\n      vec[1] = a[i + 1];\r\n      vec[2] = a[i + 2];\r\n      fn(vec, vec, arg);\r\n      a[i] = vec[0];\r\n      a[i + 1] = vec[1];\r\n      a[i + 2] = vec[2];\r\n    }\r\n    return a;\r\n  };\r\n}();", "import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 4 Dimensional Vector\r\n * @module vec4\r\n */\r\n\r\n/**\r\n * Creates a new, empty vec4\r\n *\r\n * @returns {vec4} a new 4D vector\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[0] = 0;\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[3] = 0;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec4 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec4} a vector to clone\r\n * @returns {vec4} a new 4D vector\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec4 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} a new 4D vector\r\n */\r\nexport function fromValues(x, y, z, w) {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  out[3] = w;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one vec4 to another\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the source vector\r\n * @returns {vec4} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a vec4 to the given values\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} out\r\n */\r\nexport function set(out, x, y, z, w) {\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  out[3] = w;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiplies two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  out[0] = a[0] * b[0];\r\n  out[1] = a[1] * b[1];\r\n  out[2] = a[2] * b[2];\r\n  out[3] = a[3] * b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Divides two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function divide(out, a, b) {\r\n  out[0] = a[0] / b[0];\r\n  out[1] = a[1] / b[1];\r\n  out[2] = a[2] / b[2];\r\n  out[3] = a[3] / b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.ceil the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to ceil\r\n * @returns {vec4} out\r\n */\r\nexport function ceil(out, a) {\r\n  out[0] = Math.ceil(a[0]);\r\n  out[1] = Math.ceil(a[1]);\r\n  out[2] = Math.ceil(a[2]);\r\n  out[3] = Math.ceil(a[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.floor the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to floor\r\n * @returns {vec4} out\r\n */\r\nexport function floor(out, a) {\r\n  out[0] = Math.floor(a[0]);\r\n  out[1] = Math.floor(a[1]);\r\n  out[2] = Math.floor(a[2]);\r\n  out[3] = Math.floor(a[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the minimum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function min(out, a, b) {\r\n  out[0] = Math.min(a[0], b[0]);\r\n  out[1] = Math.min(a[1], b[1]);\r\n  out[2] = Math.min(a[2], b[2]);\r\n  out[3] = Math.min(a[3], b[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the maximum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function max(out, a, b) {\r\n  out[0] = Math.max(a[0], b[0]);\r\n  out[1] = Math.max(a[1], b[1]);\r\n  out[2] = Math.max(a[2], b[2]);\r\n  out[3] = Math.max(a[3], b[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * symmetric round the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to round\r\n * @returns {vec4} out\r\n */\r\nexport function round(out, a) {\r\n  out[0] = glMatrix.round(a[0]);\r\n  out[1] = glMatrix.round(a[1]);\r\n  out[2] = glMatrix.round(a[2]);\r\n  out[3] = glMatrix.round(a[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales a vec4 by a scalar number\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec4} out\r\n */\r\nexport function scale(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec4's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec4} out\r\n */\r\nexport function scaleAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the euclidian distance between two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\r\nexport function distance(a, b) {\r\n  var x = b[0] - a[0];\r\n  var y = b[1] - a[1];\r\n  var z = b[2] - a[2];\r\n  var w = b[3] - a[3];\r\n  return Math.sqrt(x * x + y * y + z * z + w * w);\r\n}\r\n\r\n/**\r\n * Calculates the squared euclidian distance between two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\r\nexport function squaredDistance(a, b) {\r\n  var x = b[0] - a[0];\r\n  var y = b[1] - a[1];\r\n  var z = b[2] - a[2];\r\n  var w = b[3] - a[3];\r\n  return x * x + y * y + z * z + w * w;\r\n}\r\n\r\n/**\r\n * Calculates the length of a vec4\r\n *\r\n * @param {ReadonlyVec4} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\nexport function length(a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  var w = a[3];\r\n  return Math.sqrt(x * x + y * y + z * z + w * w);\r\n}\r\n\r\n/**\r\n * Calculates the squared length of a vec4\r\n *\r\n * @param {ReadonlyVec4} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\r\nexport function squaredLength(a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  var w = a[3];\r\n  return x * x + y * y + z * z + w * w;\r\n}\r\n\r\n/**\r\n * Negates the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to negate\r\n * @returns {vec4} out\r\n */\r\nexport function negate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  out[3] = -a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the inverse of the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to invert\r\n * @returns {vec4} out\r\n */\r\nexport function inverse(out, a) {\r\n  out[0] = 1.0 / a[0];\r\n  out[1] = 1.0 / a[1];\r\n  out[2] = 1.0 / a[2];\r\n  out[3] = 1.0 / a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Normalize a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to normalize\r\n * @returns {vec4} out\r\n */\r\nexport function normalize(out, a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  var w = a[3];\r\n  var len = x * x + y * y + z * z + w * w;\r\n  if (len > 0) {\r\n    len = 1 / Math.sqrt(len);\r\n  }\r\n  out[0] = x * len;\r\n  out[1] = y * len;\r\n  out[2] = z * len;\r\n  out[3] = w * len;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the dot product of two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\r\nexport function dot(a, b) {\r\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\r\n}\r\n\r\n/**\r\n * Returns the cross-product of three vectors in a 4-dimensional space\r\n *\r\n * @param {ReadonlyVec4} out the receiving vector\r\n * @param {ReadonlyVec4} u the first vector\r\n * @param {ReadonlyVec4} v the second vector\r\n * @param {ReadonlyVec4} w the third vector\r\n * @returns {vec4} result\r\n */\r\nexport function cross(out, u, v, w) {\r\n  var A = v[0] * w[1] - v[1] * w[0],\r\n    B = v[0] * w[2] - v[2] * w[0],\r\n    C = v[0] * w[3] - v[3] * w[0],\r\n    D = v[1] * w[2] - v[2] * w[1],\r\n    E = v[1] * w[3] - v[3] * w[1],\r\n    F = v[2] * w[3] - v[3] * w[2];\r\n  var G = u[0];\r\n  var H = u[1];\r\n  var I = u[2];\r\n  var J = u[3];\r\n  out[0] = H * F - I * E + J * D;\r\n  out[1] = -(G * F) + I * C - J * B;\r\n  out[2] = G * E - H * C + J * A;\r\n  out[3] = -(G * D) + H * B - I * A;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a linear interpolation between two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec4} out\r\n */\r\nexport function lerp(out, a, b, t) {\r\n  var ax = a[0];\r\n  var ay = a[1];\r\n  var az = a[2];\r\n  var aw = a[3];\r\n  out[0] = ax + t * (b[0] - ax);\r\n  out[1] = ay + t * (b[1] - ay);\r\n  out[2] = az + t * (b[2] - az);\r\n  out[3] = aw + t * (b[3] - aw);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If omitted, a unit vector will be returned\r\n * @returns {vec4} out\r\n */\r\nexport function random(out, scale) {\r\n  scale = scale === undefined ? 1.0 : scale;\r\n\r\n  // Marsaglia, George. Choosing a Point from the Surface of a\r\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\r\n  // http://projecteuclid.org/euclid.aoms/1177692644;\r\n  var v1, v2, v3, v4;\r\n  var s1, s2;\r\n  var rand;\r\n  rand = glMatrix.RANDOM();\r\n  v1 = rand * 2 - 1;\r\n  v2 = (4 * glMatrix.RANDOM() - 2) * Math.sqrt(rand * -rand + rand);\r\n  s1 = v1 * v1 + v2 * v2;\r\n  rand = glMatrix.RANDOM();\r\n  v3 = rand * 2 - 1;\r\n  v4 = (4 * glMatrix.RANDOM() - 2) * Math.sqrt(rand * -rand + rand);\r\n  s2 = v3 * v3 + v4 * v4;\r\n  var d = Math.sqrt((1 - s1) / s2);\r\n  out[0] = scale * v1;\r\n  out[1] = scale * v2;\r\n  out[2] = scale * v3 * d;\r\n  out[3] = scale * v4 * d;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec4 with a mat4.\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec4} out\r\n */\r\nexport function transformMat4(out, a, m) {\r\n  var x = a[0],\r\n    y = a[1],\r\n    z = a[2],\r\n    w = a[3];\r\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\r\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\r\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\r\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec4 with a quat\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to transform\r\n * @param {ReadonlyQuat} q normalized quaternion to transform with\r\n * @returns {vec4} out\r\n */\r\nexport function transformQuat(out, a, q) {\r\n  // Fast Vector Rotation using Quaternions by Robert Eisele\r\n  // https://raw.org/proof/vector-rotation-using-quaternions/\r\n\r\n  var qx = q[0],\r\n    qy = q[1],\r\n    qz = q[2],\r\n    qw = q[3];\r\n  var vx = a[0],\r\n    vy = a[1],\r\n    vz = a[2];\r\n\r\n  // t = q x v\r\n  var tx = qy * vz - qz * vy;\r\n  var ty = qz * vx - qx * vz;\r\n  var tz = qx * vy - qy * vx;\r\n\r\n  // t = 2t\r\n  tx = tx + tx;\r\n  ty = ty + ty;\r\n  tz = tz + tz;\r\n\r\n  // v + w t + q x t\r\n  out[0] = vx + qw * tx + qy * tz - qz * ty;\r\n  out[1] = vy + qw * ty + qz * tx - qx * tz;\r\n  out[2] = vz + qw * tz + qx * ty - qy * tx;\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a vec4 to zero\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @returns {vec4} out\r\n */\r\nexport function zero(out) {\r\n  out[0] = 0.0;\r\n  out[1] = 0.0;\r\n  out[2] = 0.0;\r\n  out[3] = 0.0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec4} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\r\nexport function str(a) {\r\n  return \"vec4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec4} a The first vector.\r\n * @param {ReadonlyVec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec4} a The first vector.\r\n * @param {ReadonlyVec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n    a1 = a[1],\r\n    a2 = a[2],\r\n    a3 = a[3];\r\n  var b0 = b[0],\r\n    b1 = b[1],\r\n    b2 = b[2],\r\n    b3 = b[3];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\r\n}\r\n\r\n/**\r\n * Alias for {@link vec4.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;\r\n\r\n/**\r\n * Alias for {@link vec4.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link vec4.divide}\r\n * @function\r\n */\r\nexport var div = divide;\r\n\r\n/**\r\n * Alias for {@link vec4.distance}\r\n * @function\r\n */\r\nexport var dist = distance;\r\n\r\n/**\r\n * Alias for {@link vec4.squaredDistance}\r\n * @function\r\n */\r\nexport var sqrDist = squaredDistance;\r\n\r\n/**\r\n * Alias for {@link vec4.length}\r\n * @function\r\n */\r\nexport var len = length;\r\n\r\n/**\r\n * Alias for {@link vec4.squaredLength}\r\n * @function\r\n */\r\nexport var sqrLen = squaredLength;\r\n\r\n/**\r\n * Perform some operation over an array of vec4s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\r\nexport var forEach = function () {\r\n  var vec = create();\r\n  return function (a, stride, offset, count, fn, arg) {\r\n    var i, l;\r\n    if (!stride) {\r\n      stride = 4;\r\n    }\r\n    if (!offset) {\r\n      offset = 0;\r\n    }\r\n    if (count) {\r\n      l = Math.min(count * stride + offset, a.length);\r\n    } else {\r\n      l = a.length;\r\n    }\r\n    for (i = offset; i < l; i += stride) {\r\n      vec[0] = a[i];\r\n      vec[1] = a[i + 1];\r\n      vec[2] = a[i + 2];\r\n      vec[3] = a[i + 3];\r\n      fn(vec, vec, arg);\r\n      a[i] = vec[0];\r\n      a[i + 1] = vec[1];\r\n      a[i + 2] = vec[2];\r\n      a[i + 3] = vec[3];\r\n    }\r\n    return a;\r\n  };\r\n}();", "import * as glMatrix from \"./common.js\";\r\nimport * as quat from \"./quat.js\";\r\nimport * as mat4 from \"./mat4.js\";\r\n\r\n/**\r\n * Dual Quaternion<br>\r\n * Format: [real, dual]<br>\r\n * Quaternion format: XYZW<br>\r\n * Make sure to have normalized dual quaternions, otherwise the functions may not work as intended.<br>\r\n * @module quat2\r\n */\r\n\r\n/**\r\n * Creates a new identity dual quat\r\n *\r\n * @returns {quat2} a new dual quaternion [real -> rotation, dual -> translation]\r\n */\r\nexport function create() {\r\n  var dq = new glMatrix.ARRAY_TYPE(8);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    dq[0] = 0;\r\n    dq[1] = 0;\r\n    dq[2] = 0;\r\n    dq[4] = 0;\r\n    dq[5] = 0;\r\n    dq[6] = 0;\r\n    dq[7] = 0;\r\n  }\r\n  dq[3] = 1;\r\n  return dq;\r\n}\r\n\r\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {ReadonlyQuat2} a dual quaternion to clone\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\r\nexport function clone(a) {\r\n  var dq = new glMatrix.ARRAY_TYPE(8);\r\n  dq[0] = a[0];\r\n  dq[1] = a[1];\r\n  dq[2] = a[2];\r\n  dq[3] = a[3];\r\n  dq[4] = a[4];\r\n  dq[5] = a[5];\r\n  dq[6] = a[6];\r\n  dq[7] = a[7];\r\n  return dq;\r\n}\r\n\r\n/**\r\n * Creates a new dual quat initialized with the given values\r\n *\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component\r\n * @param {Number} y2 Y component\r\n * @param {Number} z2 Z component\r\n * @param {Number} w2 W component\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\r\nexport function fromValues(x1, y1, z1, w1, x2, y2, z2, w2) {\r\n  var dq = new glMatrix.ARRAY_TYPE(8);\r\n  dq[0] = x1;\r\n  dq[1] = y1;\r\n  dq[2] = z1;\r\n  dq[3] = w1;\r\n  dq[4] = x2;\r\n  dq[5] = y2;\r\n  dq[6] = z2;\r\n  dq[7] = w2;\r\n  return dq;\r\n}\r\n\r\n/**\r\n * Creates a new dual quat from the given values (quat and translation)\r\n *\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component (translation)\r\n * @param {Number} y2 Y component (translation)\r\n * @param {Number} z2 Z component (translation)\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\r\nexport function fromRotationTranslationValues(x1, y1, z1, w1, x2, y2, z2) {\r\n  var dq = new glMatrix.ARRAY_TYPE(8);\r\n  dq[0] = x1;\r\n  dq[1] = y1;\r\n  dq[2] = z1;\r\n  dq[3] = w1;\r\n  var ax = x2 * 0.5,\r\n    ay = y2 * 0.5,\r\n    az = z2 * 0.5;\r\n  dq[4] = ax * w1 + ay * z1 - az * y1;\r\n  dq[5] = ay * w1 + az * x1 - ax * z1;\r\n  dq[6] = az * w1 + ax * y1 - ay * x1;\r\n  dq[7] = -ax * x1 - ay * y1 - az * z1;\r\n  return dq;\r\n}\r\n\r\n/**\r\n * Creates a dual quat from a quaternion and a translation\r\n *\r\n * @param {ReadonlyQuat2} dual quaternion receiving operation result\r\n * @param {ReadonlyQuat} q a normalized quaternion\r\n * @param {ReadonlyVec3} t translation vector\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\r\nexport function fromRotationTranslation(out, q, t) {\r\n  var ax = t[0] * 0.5,\r\n    ay = t[1] * 0.5,\r\n    az = t[2] * 0.5,\r\n    bx = q[0],\r\n    by = q[1],\r\n    bz = q[2],\r\n    bw = q[3];\r\n  out[0] = bx;\r\n  out[1] = by;\r\n  out[2] = bz;\r\n  out[3] = bw;\r\n  out[4] = ax * bw + ay * bz - az * by;\r\n  out[5] = ay * bw + az * bx - ax * bz;\r\n  out[6] = az * bw + ax * by - ay * bx;\r\n  out[7] = -ax * bx - ay * by - az * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a dual quat from a translation\r\n *\r\n * @param {ReadonlyQuat2} dual quaternion receiving operation result\r\n * @param {ReadonlyVec3} t translation vector\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\r\nexport function fromTranslation(out, t) {\r\n  out[0] = 0;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  out[4] = t[0] * 0.5;\r\n  out[5] = t[1] * 0.5;\r\n  out[6] = t[2] * 0.5;\r\n  out[7] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a dual quat from a quaternion\r\n *\r\n * @param {ReadonlyQuat2} dual quaternion receiving operation result\r\n * @param {ReadonlyQuat} q the quaternion\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\r\nexport function fromRotation(out, q) {\r\n  out[0] = q[0];\r\n  out[1] = q[1];\r\n  out[2] = q[2];\r\n  out[3] = q[3];\r\n  out[4] = 0;\r\n  out[5] = 0;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new dual quat from a matrix (4x4)\r\n *\r\n * @param {quat2} out the dual quaternion\r\n * @param {ReadonlyMat4} a the matrix\r\n * @returns {quat2} dual quat receiving operation result\r\n * @function\r\n */\r\nexport function fromMat4(out, a) {\r\n  //TODO Optimize this\r\n  var outer = quat.create();\r\n  mat4.getRotation(outer, a);\r\n  var t = new glMatrix.ARRAY_TYPE(3);\r\n  mat4.getTranslation(t, a);\r\n  fromRotationTranslation(out, outer, t);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one dual quat to another\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the source dual quaternion\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a dual quat to the identity dual quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @returns {quat2} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 0;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  out[4] = 0;\r\n  out[5] = 0;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a dual quat to the given values\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component\r\n * @param {Number} y2 Y component\r\n * @param {Number} z2 Z component\r\n * @param {Number} w2 W component\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function set(out, x1, y1, z1, w1, x2, y2, z2, w2) {\r\n  out[0] = x1;\r\n  out[1] = y1;\r\n  out[2] = z1;\r\n  out[3] = w1;\r\n  out[4] = x2;\r\n  out[5] = y2;\r\n  out[6] = z2;\r\n  out[7] = w2;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Gets the real part of a dual quat\r\n * @param  {quat} out real part\r\n * @param  {ReadonlyQuat2} a Dual Quaternion\r\n * @return {quat} real part\r\n */\r\nexport var getReal = quat.copy;\r\n\r\n/**\r\n * Gets the dual part of a dual quat\r\n * @param  {quat} out dual part\r\n * @param  {ReadonlyQuat2} a Dual Quaternion\r\n * @return {quat} dual part\r\n */\r\nexport function getDual(out, a) {\r\n  out[0] = a[4];\r\n  out[1] = a[5];\r\n  out[2] = a[6];\r\n  out[3] = a[7];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the real component of a dual quat to the given quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {ReadonlyQuat} q a quaternion representing the real part\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport var setReal = quat.copy;\r\n\r\n/**\r\n * Set the dual component of a dual quat to the given quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {ReadonlyQuat} q a quaternion representing the dual part\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function setDual(out, q) {\r\n  out[4] = q[0];\r\n  out[5] = q[1];\r\n  out[6] = q[2];\r\n  out[7] = q[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Gets the translation of a normalized dual quat\r\n * @param  {vec3} out translation\r\n * @param  {ReadonlyQuat2} a Dual Quaternion to be decomposed\r\n * @return {vec3} translation\r\n */\r\nexport function getTranslation(out, a) {\r\n  var ax = a[4],\r\n    ay = a[5],\r\n    az = a[6],\r\n    aw = a[7],\r\n    bx = -a[0],\r\n    by = -a[1],\r\n    bz = -a[2],\r\n    bw = a[3];\r\n  out[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\r\n  out[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\r\n  out[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Translates a dual quat by the given vector\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the dual quaternion to translate\r\n * @param {ReadonlyVec3} v vector to translate by\r\n * @returns {quat2} out\r\n */\r\nexport function translate(out, a, v) {\r\n  var ax1 = a[0],\r\n    ay1 = a[1],\r\n    az1 = a[2],\r\n    aw1 = a[3],\r\n    bx1 = v[0] * 0.5,\r\n    by1 = v[1] * 0.5,\r\n    bz1 = v[2] * 0.5,\r\n    ax2 = a[4],\r\n    ay2 = a[5],\r\n    az2 = a[6],\r\n    aw2 = a[7];\r\n  out[0] = ax1;\r\n  out[1] = ay1;\r\n  out[2] = az1;\r\n  out[3] = aw1;\r\n  out[4] = aw1 * bx1 + ay1 * bz1 - az1 * by1 + ax2;\r\n  out[5] = aw1 * by1 + az1 * bx1 - ax1 * bz1 + ay2;\r\n  out[6] = aw1 * bz1 + ax1 * by1 - ay1 * bx1 + az2;\r\n  out[7] = -ax1 * bx1 - ay1 * by1 - az1 * bz1 + aw2;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat around the X axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\r\nexport function rotateX(out, a, rad) {\r\n  var bx = -a[0],\r\n    by = -a[1],\r\n    bz = -a[2],\r\n    bw = a[3],\r\n    ax = a[4],\r\n    ay = a[5],\r\n    az = a[6],\r\n    aw = a[7],\r\n    ax1 = ax * bw + aw * bx + ay * bz - az * by,\r\n    ay1 = ay * bw + aw * by + az * bx - ax * bz,\r\n    az1 = az * bw + aw * bz + ax * by - ay * bx,\r\n    aw1 = aw * bw - ax * bx - ay * by - az * bz;\r\n  quat.rotateX(out, a, rad);\r\n  bx = out[0];\r\n  by = out[1];\r\n  bz = out[2];\r\n  bw = out[3];\r\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\r\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\r\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\r\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat around the Y axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\r\nexport function rotateY(out, a, rad) {\r\n  var bx = -a[0],\r\n    by = -a[1],\r\n    bz = -a[2],\r\n    bw = a[3],\r\n    ax = a[4],\r\n    ay = a[5],\r\n    az = a[6],\r\n    aw = a[7],\r\n    ax1 = ax * bw + aw * bx + ay * bz - az * by,\r\n    ay1 = ay * bw + aw * by + az * bx - ax * bz,\r\n    az1 = az * bw + aw * bz + ax * by - ay * bx,\r\n    aw1 = aw * bw - ax * bx - ay * by - az * bz;\r\n  quat.rotateY(out, a, rad);\r\n  bx = out[0];\r\n  by = out[1];\r\n  bz = out[2];\r\n  bw = out[3];\r\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\r\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\r\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\r\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat around the Z axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\r\nexport function rotateZ(out, a, rad) {\r\n  var bx = -a[0],\r\n    by = -a[1],\r\n    bz = -a[2],\r\n    bw = a[3],\r\n    ax = a[4],\r\n    ay = a[5],\r\n    az = a[6],\r\n    aw = a[7],\r\n    ax1 = ax * bw + aw * bx + ay * bz - az * by,\r\n    ay1 = ay * bw + aw * by + az * bx - ax * bz,\r\n    az1 = az * bw + aw * bz + ax * by - ay * bx,\r\n    aw1 = aw * bw - ax * bx - ay * by - az * bz;\r\n  quat.rotateZ(out, a, rad);\r\n  bx = out[0];\r\n  by = out[1];\r\n  bz = out[2];\r\n  bw = out[3];\r\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\r\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\r\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\r\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat by a given quaternion (a * q)\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\r\n * @param {ReadonlyQuat} q quaternion to rotate by\r\n * @returns {quat2} out\r\n */\r\nexport function rotateByQuatAppend(out, a, q) {\r\n  var qx = q[0],\r\n    qy = q[1],\r\n    qz = q[2],\r\n    qw = q[3],\r\n    ax = a[0],\r\n    ay = a[1],\r\n    az = a[2],\r\n    aw = a[3];\r\n  out[0] = ax * qw + aw * qx + ay * qz - az * qy;\r\n  out[1] = ay * qw + aw * qy + az * qx - ax * qz;\r\n  out[2] = az * qw + aw * qz + ax * qy - ay * qx;\r\n  out[3] = aw * qw - ax * qx - ay * qy - az * qz;\r\n  ax = a[4];\r\n  ay = a[5];\r\n  az = a[6];\r\n  aw = a[7];\r\n  out[4] = ax * qw + aw * qx + ay * qz - az * qy;\r\n  out[5] = ay * qw + aw * qy + az * qx - ax * qz;\r\n  out[6] = az * qw + aw * qz + ax * qy - ay * qx;\r\n  out[7] = aw * qw - ax * qx - ay * qy - az * qz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat by a given quaternion (q * a)\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat} q quaternion to rotate by\r\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\r\n * @returns {quat2} out\r\n */\r\nexport function rotateByQuatPrepend(out, q, a) {\r\n  var qx = q[0],\r\n    qy = q[1],\r\n    qz = q[2],\r\n    qw = q[3],\r\n    bx = a[0],\r\n    by = a[1],\r\n    bz = a[2],\r\n    bw = a[3];\r\n  out[0] = qx * bw + qw * bx + qy * bz - qz * by;\r\n  out[1] = qy * bw + qw * by + qz * bx - qx * bz;\r\n  out[2] = qz * bw + qw * bz + qx * by - qy * bx;\r\n  out[3] = qw * bw - qx * bx - qy * by - qz * bz;\r\n  bx = a[4];\r\n  by = a[5];\r\n  bz = a[6];\r\n  bw = a[7];\r\n  out[4] = qx * bw + qw * bx + qy * bz - qz * by;\r\n  out[5] = qy * bw + qw * by + qz * bx - qx * bz;\r\n  out[6] = qz * bw + qw * bz + qx * by - qy * bx;\r\n  out[7] = qw * bw - qx * bx - qy * by - qz * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat around a given axis. Does the normalisation automatically\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @param {Number} rad how far the rotation should be\r\n * @returns {quat2} out\r\n */\r\nexport function rotateAroundAxis(out, a, axis, rad) {\r\n  //Special case for rad = 0\r\n  if (Math.abs(rad) < glMatrix.EPSILON) {\r\n    return copy(out, a);\r\n  }\r\n  var axisLength = Math.sqrt(axis[0] * axis[0] + axis[1] * axis[1] + axis[2] * axis[2]);\r\n  rad = rad * 0.5;\r\n  var s = Math.sin(rad);\r\n  var bx = s * axis[0] / axisLength;\r\n  var by = s * axis[1] / axisLength;\r\n  var bz = s * axis[2] / axisLength;\r\n  var bw = Math.cos(rad);\r\n  var ax1 = a[0],\r\n    ay1 = a[1],\r\n    az1 = a[2],\r\n    aw1 = a[3];\r\n  out[0] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\r\n  out[1] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\r\n  out[2] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\r\n  out[3] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\r\n  var ax = a[4],\r\n    ay = a[5],\r\n    az = a[6],\r\n    aw = a[7];\r\n  out[4] = ax * bw + aw * bx + ay * bz - az * by;\r\n  out[5] = ay * bw + aw * by + az * bx - ax * bz;\r\n  out[6] = az * bw + aw * bz + ax * by - ay * bx;\r\n  out[7] = aw * bw - ax * bx - ay * by - az * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two dual quat's\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the first operand\r\n * @param {ReadonlyQuat2} b the second operand\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  out[4] = a[4] + b[4];\r\n  out[5] = a[5] + b[5];\r\n  out[6] = a[6] + b[6];\r\n  out[7] = a[7] + b[7];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiplies two dual quat's\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the first operand\r\n * @param {ReadonlyQuat2} b the second operand\r\n * @returns {quat2} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var ax0 = a[0],\r\n    ay0 = a[1],\r\n    az0 = a[2],\r\n    aw0 = a[3],\r\n    bx1 = b[4],\r\n    by1 = b[5],\r\n    bz1 = b[6],\r\n    bw1 = b[7],\r\n    ax1 = a[4],\r\n    ay1 = a[5],\r\n    az1 = a[6],\r\n    aw1 = a[7],\r\n    bx0 = b[0],\r\n    by0 = b[1],\r\n    bz0 = b[2],\r\n    bw0 = b[3];\r\n  out[0] = ax0 * bw0 + aw0 * bx0 + ay0 * bz0 - az0 * by0;\r\n  out[1] = ay0 * bw0 + aw0 * by0 + az0 * bx0 - ax0 * bz0;\r\n  out[2] = az0 * bw0 + aw0 * bz0 + ax0 * by0 - ay0 * bx0;\r\n  out[3] = aw0 * bw0 - ax0 * bx0 - ay0 * by0 - az0 * bz0;\r\n  out[4] = ax0 * bw1 + aw0 * bx1 + ay0 * bz1 - az0 * by1 + ax1 * bw0 + aw1 * bx0 + ay1 * bz0 - az1 * by0;\r\n  out[5] = ay0 * bw1 + aw0 * by1 + az0 * bx1 - ax0 * bz1 + ay1 * bw0 + aw1 * by0 + az1 * bx0 - ax1 * bz0;\r\n  out[6] = az0 * bw1 + aw0 * bz1 + ax0 * by1 - ay0 * bx1 + az1 * bw0 + aw1 * bz0 + ax1 * by0 - ay1 * bx0;\r\n  out[7] = aw0 * bw1 - ax0 * bx1 - ay0 * by1 - az0 * bz1 + aw1 * bw0 - ax1 * bx0 - ay1 * by0 - az1 * bz0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Alias for {@link quat2.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Scales a dual quat by a scalar number\r\n *\r\n * @param {quat2} out the receiving dual quat\r\n * @param {ReadonlyQuat2} a the dual quat to scale\r\n * @param {Number} b amount to scale the dual quat by\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function scale(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  out[4] = a[4] * b;\r\n  out[5] = a[5] * b;\r\n  out[6] = a[6] * b;\r\n  out[7] = a[7] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the dot product of two dual quat's (The dot product of the real parts)\r\n *\r\n * @param {ReadonlyQuat2} a the first operand\r\n * @param {ReadonlyQuat2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\r\nexport var dot = quat.dot;\r\n\r\n/**\r\n * Performs a linear interpolation between two dual quats's\r\n * NOTE: The resulting dual quaternions won't always be normalized (The error is most noticeable when t = 0.5)\r\n *\r\n * @param {quat2} out the receiving dual quat\r\n * @param {ReadonlyQuat2} a the first operand\r\n * @param {ReadonlyQuat2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat2} out\r\n */\r\nexport function lerp(out, a, b, t) {\r\n  var mt = 1 - t;\r\n  if (dot(a, b) < 0) t = -t;\r\n  out[0] = a[0] * mt + b[0] * t;\r\n  out[1] = a[1] * mt + b[1] * t;\r\n  out[2] = a[2] * mt + b[2] * t;\r\n  out[3] = a[3] * mt + b[3] * t;\r\n  out[4] = a[4] * mt + b[4] * t;\r\n  out[5] = a[5] * mt + b[5] * t;\r\n  out[6] = a[6] * mt + b[6] * t;\r\n  out[7] = a[7] * mt + b[7] * t;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the inverse of a dual quat. If they are normalized, conjugate is cheaper\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a dual quat to calculate inverse of\r\n * @returns {quat2} out\r\n */\r\nexport function invert(out, a) {\r\n  var sqlen = squaredLength(a);\r\n  out[0] = -a[0] / sqlen;\r\n  out[1] = -a[1] / sqlen;\r\n  out[2] = -a[2] / sqlen;\r\n  out[3] = a[3] / sqlen;\r\n  out[4] = -a[4] / sqlen;\r\n  out[5] = -a[5] / sqlen;\r\n  out[6] = -a[6] / sqlen;\r\n  out[7] = a[7] / sqlen;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the conjugate of a dual quat\r\n * If the dual quaternion is normalized, this function is faster than quat2.inverse and produces the same result.\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {ReadonlyQuat2} a quat to calculate conjugate of\r\n * @returns {quat2} out\r\n */\r\nexport function conjugate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  out[3] = a[3];\r\n  out[4] = -a[4];\r\n  out[5] = -a[5];\r\n  out[6] = -a[6];\r\n  out[7] = a[7];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the length of a dual quat\r\n *\r\n * @param {ReadonlyQuat2} a dual quat to calculate length of\r\n * @returns {Number} length of a\r\n * @function\r\n */\r\nexport var length = quat.length;\r\n\r\n/**\r\n * Alias for {@link quat2.length}\r\n * @function\r\n */\r\nexport var len = length;\r\n\r\n/**\r\n * Calculates the squared length of a dual quat\r\n *\r\n * @param {ReadonlyQuat2} a dual quat to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\r\nexport var squaredLength = quat.squaredLength;\r\n\r\n/**\r\n * Alias for {@link quat2.squaredLength}\r\n * @function\r\n */\r\nexport var sqrLen = squaredLength;\r\n\r\n/**\r\n * Normalize a dual quat\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a dual quaternion to normalize\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function normalize(out, a) {\r\n  var magnitude = squaredLength(a);\r\n  if (magnitude > 0) {\r\n    magnitude = Math.sqrt(magnitude);\r\n    var a0 = a[0] / magnitude;\r\n    var a1 = a[1] / magnitude;\r\n    var a2 = a[2] / magnitude;\r\n    var a3 = a[3] / magnitude;\r\n    var b0 = a[4];\r\n    var b1 = a[5];\r\n    var b2 = a[6];\r\n    var b3 = a[7];\r\n    var a_dot_b = a0 * b0 + a1 * b1 + a2 * b2 + a3 * b3;\r\n    out[0] = a0;\r\n    out[1] = a1;\r\n    out[2] = a2;\r\n    out[3] = a3;\r\n    out[4] = (b0 - a0 * a_dot_b) / magnitude;\r\n    out[5] = (b1 - a1 * a_dot_b) / magnitude;\r\n    out[6] = (b2 - a2 * a_dot_b) / magnitude;\r\n    out[7] = (b3 - a3 * a_dot_b) / magnitude;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a dual quaternion\r\n *\r\n * @param {ReadonlyQuat2} a dual quaternion to represent as a string\r\n * @returns {String} string representation of the dual quat\r\n */\r\nexport function str(a) {\r\n  return \"quat2(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \")\";\r\n}\r\n\r\n/**\r\n * Returns whether or not the dual quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyQuat2} a the first dual quaternion.\r\n * @param {ReadonlyQuat2} b the second dual quaternion.\r\n * @returns {Boolean} true if the dual quaternions are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7];\r\n}\r\n\r\n/**\r\n * Returns whether or not the dual quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyQuat2} a the first dual quat.\r\n * @param {ReadonlyQuat2} b the second dual quat.\r\n * @returns {Boolean} true if the dual quats are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n    a1 = a[1],\r\n    a2 = a[2],\r\n    a3 = a[3],\r\n    a4 = a[4],\r\n    a5 = a[5],\r\n    a6 = a[6],\r\n    a7 = a[7];\r\n  var b0 = b[0],\r\n    b1 = b[1],\r\n    b2 = b[2],\r\n    b3 = b[3],\r\n    b4 = b[4],\r\n    b5 = b[5],\r\n    b6 = b[6],\r\n    b7 = b[7];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7));\r\n}", "var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { Component, Emitter } from '@wonderlandengine/api';\r\nimport { property } from '@wonderlandengine/api/decorators.js';\r\nimport { setXRRigidTransformLocal } from './utils/webxr.js';\r\n/**\r\n * Sets up a [WebXR Device API \"Hit Test\"](https://immersive-web.github.io/hit-test/)\r\n * and places the object to the hit location.\r\n *\r\n * **Requirements:**\r\n *  - Specify `'hit-test'` in the required or optional features on the AR button in your html file.\r\n *    See [Wastepaperbin AR](/showcase/wpb-ar) as an example.\r\n */\r\nclass HitTestLocation extends Component {\r\n    static TypeName = 'hit-test-location';\r\n    tempScaling = new Float32Array(3);\r\n    visible = false;\r\n    xrHitTestSource = null;\r\n    /** Reference space for creating the hit test when the session starts */\r\n    xrReferenceSpace = null;\r\n    /**\r\n     * For maintaining backwards compatibility: Whether to scale the object to 0 and back.\r\n     * @deprecated Use onHitLost and onHitFound instead.\r\n     */\r\n    scaleObject = true;\r\n    /** Emits an event when the hit test switches from visible to invisible */\r\n    onHitLost = new Emitter();\r\n    /** Emits an event when the hit test switches from invisible to visible */\r\n    onHitFound = new Emitter();\r\n    onSessionStartCallback = null;\r\n    onSessionEndCallback = null;\r\n    start() {\r\n        this.onSessionStartCallback = this.onXRSessionStart.bind(this);\r\n        this.onSessionEndCallback = this.onXRSessionEnd.bind(this);\r\n        if (this.scaleObject) {\r\n            this.tempScaling.set(this.object.scalingLocal);\r\n            this.object.scale([0, 0, 0]);\r\n            this.onHitLost.add(() => {\r\n                this.tempScaling.set(this.object.scalingLocal);\r\n                this.object.scale([0, 0, 0]);\r\n            });\r\n            this.onHitFound.add(() => {\r\n                this.object.scalingLocal.set(this.tempScaling);\r\n                this.object.setDirty();\r\n            });\r\n        }\r\n    }\r\n    onActivate() {\r\n        this.engine.onXRSessionStart.add(this.onSessionStartCallback);\r\n        this.engine.onXRSessionEnd.add(this.onSessionEndCallback);\r\n    }\r\n    onDeactivate() {\r\n        this.engine.onXRSessionStart.remove(this.onSessionStartCallback);\r\n        this.engine.onXRSessionEnd.remove(this.onSessionEndCallback);\r\n    }\r\n    update() {\r\n        const wasVisible = this.visible;\r\n        if (this.xrHitTestSource) {\r\n            const frame = this.engine.xrFrame;\r\n            if (!frame)\r\n                return;\r\n            let hitTestResults = frame.getHitTestResults(this.xrHitTestSource);\r\n            if (hitTestResults.length > 0) {\r\n                let pose = hitTestResults[0].getPose(this.engine.xr.currentReferenceSpace);\r\n                this.visible = !!pose;\r\n                if (pose) {\r\n                    setXRRigidTransformLocal(this.object, pose.transform);\r\n                }\r\n            }\r\n            else {\r\n                this.visible = false;\r\n            }\r\n        }\r\n        /* Emit events for visible state change */\r\n        if (this.visible != wasVisible) {\r\n            (this.visible ? this.onHitFound : this.onHitLost).notify(this);\r\n        }\r\n    }\r\n    getHitTestResults(frame = this.engine.xr?.frame ?? null) {\r\n        if (!frame)\r\n            return [];\r\n        /* May happen if the hit test source couldn't be created */\r\n        if (!this.xrHitTestSource)\r\n            return [];\r\n        return frame.getHitTestResults(this.xrHitTestSource);\r\n    }\r\n    onXRSessionStart(session) {\r\n        if (session.requestHitTestSource === undefined) {\r\n            console.error('hit-test-location: hit test feature not available. Deactivating component.');\r\n            this.active = false;\r\n            return;\r\n        }\r\n        session\r\n            .requestHitTestSource({\r\n            space: this.xrReferenceSpace ??\r\n                this.engine.xr.referenceSpaceForType('viewer'),\r\n        })\r\n            .then((hitTestSource) => {\r\n            this.xrHitTestSource = hitTestSource;\r\n        })\r\n            .catch(console.error);\r\n    }\r\n    onXRSessionEnd() {\r\n        if (!this.xrHitTestSource)\r\n            return;\r\n        this.xrHitTestSource.cancel();\r\n        this.xrHitTestSource = null;\r\n    }\r\n}\r\n__decorate([\r\n    property.bool(true)\r\n], HitTestLocation.prototype, \"scaleObject\", void 0);\r\nexport { HitTestLocation };\r\n//# sourceMappingURL=hit-test-location.js.map", "var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { Component } from '@wonderlandengine/api';\r\nimport { property } from '@wonderlandengine/api/decorators.js';\r\nimport { quat2 } from 'gl-matrix';\r\n/**\r\n * Prints some limited debug information about the object.\r\n *\r\n * Information consists of: This object's name, an object parameter's name,\r\n * the object's world translation, world transform and local transform.\r\n *\r\n * Mainly used by engine developers for debug purposes or as example code.\r\n */\r\nclass DebugObject extends Component {\r\n    static TypeName = 'debug-object';\r\n    /** A second object to print the name of */\r\n    obj = null;\r\n    start() {\r\n        let origin = new Float32Array(3);\r\n        quat2.getTranslation(origin, this.object.transformWorld);\r\n        console.log('Debug object:', this.object.name);\r\n        console.log('Other object:', this.obj?.name);\r\n        console.log('\\ttranslation', origin);\r\n        console.log('\\ttransformWorld', this.object.transformWorld);\r\n        console.log('\\ttransformLocal', this.object.transformLocal);\r\n    }\r\n}\r\n__decorate([\r\n    property.object()\r\n], DebugObject.prototype, \"obj\", void 0);\r\nexport { DebugObject };\r\n//# sourceMappingURL=debug-object.js.map", "import { Component } from '@wonderlandengine/api';\r\n/**\r\n * Function to convert a Euler in YXZ order to a quaternion\r\n */\r\nfunction quatFromEulerYXZDeg(out, x, y, z) {\r\n    const halfToRad = (0.5 * Math.PI) / 180.0;\r\n    x *= halfToRad;\r\n    y *= halfToRad;\r\n    z *= halfToRad;\r\n    const c1 = Math.cos(x);\r\n    const c2 = Math.cos(y);\r\n    const c3 = Math.cos(z);\r\n    const s1 = Math.sin(x);\r\n    const s2 = Math.sin(y);\r\n    const s3 = Math.sin(z);\r\n    out[0] = s1 * c2 * c3 + c1 * s2 * s3;\r\n    out[1] = c1 * s2 * c3 - s1 * c2 * s3;\r\n    out[2] = c1 * c2 * s3 - s1 * s2 * c3;\r\n    out[3] = c1 * c2 * c3 + s1 * s2 * s3;\r\n}\r\n/**\r\n * Retrieve device orientation from a mobile device and set the object's\r\n * orientation accordingly.\r\n *\r\n * Useful for magic window experiences.\r\n */\r\nclass DeviceOrientationLook extends Component {\r\n    static TypeName = 'device-orientation-look';\r\n    static Properties = {};\r\n    rotationX = 0;\r\n    rotationY = 0;\r\n    lastClientX = -1;\r\n    lastClientY = -1;\r\n    /* Initialize device orientation with Identity Quaternion */\r\n    deviceOrientation = [0, 0, 0, 1];\r\n    screenOrientation = 0;\r\n    _origin = [0, 0, 0];\r\n    onActivate() {\r\n        this.screenOrientation = window.innerHeight > window.innerWidth ? 0 : 90;\r\n        window.addEventListener('deviceorientation', this.onDeviceOrientation);\r\n        window.addEventListener('orientationchange', this.onOrientationChange, false);\r\n    }\r\n    onDeactivate() {\r\n        window.removeEventListener('deviceorientation', this.onDeviceOrientation);\r\n        window.removeEventListener('orientationchange', this.onOrientationChange);\r\n    }\r\n    update() {\r\n        /* Don't use device orientation in VR */\r\n        if (this.engine.xr)\r\n            return;\r\n        this.object.getPositionLocal(this._origin);\r\n        this.object.resetTransform();\r\n        if (this.screenOrientation != 0) {\r\n            this.object.rotateAxisAngleDegLocal([0, 0, -1], this.screenOrientation);\r\n        }\r\n        this.object.rotateLocal([-Math.sqrt(0.5), 0, 0, Math.sqrt(0.5)]);\r\n        this.object.rotateLocal(this.deviceOrientation);\r\n        this.object.translateLocal(this._origin);\r\n    }\r\n    onDeviceOrientation = (e) => {\r\n        let alpha = e.alpha ?? 0;\r\n        let beta = e.beta ?? 0;\r\n        let gamma = e.gamma ?? 0;\r\n        quatFromEulerYXZDeg(this.deviceOrientation, beta, alpha, -gamma);\r\n    };\r\n    onOrientationChange = () => {\r\n        this.screenOrientation =\r\n            window.screen?.orientation.angle ?? window.orientation ?? 0;\r\n    };\r\n}\r\nexport { DeviceOrientationLook };\r\n//# sourceMappingURL=device-orientation-look.js.map", "import { CollisionComponent, Component } from '@wonderlandengine/api';\r\nimport { CursorTarget } from './cursor-target.js';\r\n/**\r\n * Enables interaction with cursor-targets through collision overlaps,\r\n * e.g. on the tip of a finger on a tracked hand.\r\n *\r\n * **Requirements:**\r\n *  - A collision component (usually a sphere with `0.05` radius) on the same object\r\n *\r\n * @since 0.8.5\r\n */\r\nclass FingerCursor extends Component {\r\n    static TypeName = 'finger-cursor';\r\n    lastTarget = null;\r\n    tip;\r\n    start() {\r\n        const collisionComponent = this.object.getComponent(CollisionComponent);\r\n        if (!collisionComponent) {\r\n            throw new Error(`Finger-cursor component on object '${this.object.name}' requires a collision component to work properly.`);\r\n        }\r\n        this.tip = collisionComponent;\r\n    }\r\n    update() {\r\n        const overlaps = this.tip.queryOverlaps();\r\n        let overlapFound = null;\r\n        for (let i = 0; i < overlaps.length; ++i) {\r\n            const o = overlaps[i].object;\r\n            const target = o.getComponent(CursorTarget);\r\n            if (target) {\r\n                if (!target.equals(this.lastTarget)) {\r\n                    target.onHover.notify(o, this);\r\n                    target.onClick.notify(o, this);\r\n                }\r\n                overlapFound = target;\r\n                break;\r\n            }\r\n        }\r\n        if (!overlapFound) {\r\n            if (this.lastTarget)\r\n                this.lastTarget.onUnhover.notify(this.lastTarget.object, this);\r\n            this.lastTarget = null;\r\n            return;\r\n        }\r\n        else {\r\n            this.lastTarget = overlapFound;\r\n        }\r\n    }\r\n}\r\nexport { FingerCursor };\r\n//# sourceMappingURL=finger-cursor.js.map", "var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { Component } from '@wonderlandengine/api';\r\nimport { property } from '@wonderlandengine/api/decorators.js';\r\n/**\r\n * Applies [fixed foveation](https://www.w3.org/TR/webxrlayers-1/#dom-xrcompositionlayer-fixedfoveation)\r\n * once a WebXR session is started\r\n *\r\n * Fixed foveation reduces shading cost at the periphery by rendering at lower resolutions at the\r\n * edges of the users vision.\r\n */\r\nclass FixedFoveation extends Component {\r\n    static TypeName = 'fixed-foveation';\r\n    /** Amount to apply from 0 (none) to 1 (full) */\r\n    fixedFoveation;\r\n    onActivate() {\r\n        this.engine.onXRSessionStart.add(this.setFixedFoveation);\r\n    }\r\n    onDeactivate() {\r\n        this.engine.onXRSessionStart.remove(this.setFixedFoveation);\r\n    }\r\n    setFixedFoveation = () => {\r\n        this.engine.xr.baseLayer.fixedFoveation = this.fixedFoveation;\r\n    };\r\n}\r\n__decorate([\r\n    property.float(0.5)\r\n], FixedFoveation.prototype, \"fixedFoveation\", void 0);\r\nexport { FixedFoveation };\r\n//# sourceMappingURL=fixed-foveation.js.map", "var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { Component, MeshComponent, } from '@wonderlandengine/api';\r\nimport { property } from '@wonderlandengine/api/decorators.js';\r\nimport { vec3, quat } from 'gl-matrix';\r\nimport { setXRRigidTransformLocal } from './utils/webxr.js';\r\nconst ORDERED_JOINTS = [\r\n    'wrist',\r\n    'thumb-metacarpal',\r\n    'thumb-phalanx-proximal',\r\n    'thumb-phalanx-distal',\r\n    'thumb-tip',\r\n    'index-finger-metacarpal',\r\n    'index-finger-phalanx-proximal',\r\n    'index-finger-phalanx-intermediate',\r\n    'index-finger-phalanx-distal',\r\n    'index-finger-tip',\r\n    'middle-finger-metacarpal',\r\n    'middle-finger-phalanx-proximal',\r\n    'middle-finger-phalanx-intermediate',\r\n    'middle-finger-phalanx-distal',\r\n    'middle-finger-tip',\r\n    'ring-finger-metacarpal',\r\n    'ring-finger-phalanx-proximal',\r\n    'ring-finger-phalanx-intermediate',\r\n    'ring-finger-phalanx-distal',\r\n    'ring-finger-tip',\r\n    'pinky-finger-metacarpal',\r\n    'pinky-finger-phalanx-proximal',\r\n    'pinky-finger-phalanx-intermediate',\r\n    'pinky-finger-phalanx-distal',\r\n    'pinky-finger-tip',\r\n];\r\nconst invTranslation = vec3.create();\r\nconst invRotation = quat.create();\r\nconst tempVec0 = vec3.create();\r\nconst tempVec1 = vec3.create();\r\n/**\r\n * Easy hand tracking through the WebXR Device API\r\n * [\"Hand Input\" API](https://immersive-web.github.io/webxr-hand-input/).\r\n *\r\n * Allows displaying hands either as sphere-joints or skinned mesh.\r\n *\r\n * To react to grabbing, use `this.isGrabbing()`. For other gestures, refer\r\n * to `this.joints` - an array of [Object3D](/jsapi/object3d) and use the joint\r\n * indices listed [in the WebXR Hand Input specification](https://immersive-web.github.io/webxr-hand-input/#skeleton-joints-section).\r\n *\r\n * It is often desired to use either hand tracking or controllers, not both.\r\n * This component provides `deactivateChildrenWithoutPose` to hide the hand\r\n * tracking visualization if no pose is available and `controllerToDeactivate`\r\n * for disabling another object once a hand tracking pose *is* available.\r\n * Outside of XR sessions, tracking or controllers are neither enabled nor disabled\r\n * to play well with the [vr-mode-active-switch](#vr-mode-active-switch) component.\r\n *\r\n * **Requirements:**\r\n *  - To use hand-tracking, enable \"joint tracking\" in `chrome://flags` on\r\n *    Oculus Browser for Oculus Quest/Oculus Quest 2.\r\n *\r\n * See [Hand Tracking Example](/showcase/hand-tracking).\r\n */\r\nclass HandTracking extends Component {\r\n    static TypeName = 'hand-tracking';\r\n    /** Handedness determining whether to receive tracking input from right or left hand */\r\n    handedness = 0;\r\n    /** (optional) Mesh to use to visualize joints */\r\n    jointMesh = null;\r\n    /** Material to use for display. Applied to either the spawned skinned mesh or the joint spheres. */\r\n    jointMaterial = null;\r\n    /** (optional) Skin to apply tracked joint poses to. If not present,\r\n     * joint spheres will be used for display instead. */\r\n    handSkin = null;\r\n    /** Deactivate children if no pose was tracked */\r\n    deactivateChildrenWithoutPose = true;\r\n    /** Controller objects to activate including children if no pose is available */\r\n    controllerToDeactivate = null;\r\n    init() {\r\n        this.handedness = ['left', 'right'][this.handedness];\r\n    }\r\n    joints = {};\r\n    session = null;\r\n    /* Whether last update had a hand pose */\r\n    hasPose = false;\r\n    _childrenActive = true;\r\n    start() {\r\n        if (!('XRHand' in window)) {\r\n            console.warn('WebXR Hand Tracking not supported by this browser.');\r\n            this.active = false;\r\n            return;\r\n        }\r\n        if (this.handSkin) {\r\n            const skin = this.handSkin;\r\n            const jointIds = skin.jointIds;\r\n            /* Map the wrist */\r\n            this.joints[ORDERED_JOINTS[0]] = this.engine.wrapObject(jointIds[0]);\r\n            /* Index in ORDERED_JOINTS that we are mapping to our joints */\r\n            /* Skip thumb0 joint, start at thumb1 */\r\n            for (let j = 0; j < jointIds.length; ++j) {\r\n                const joint = this.engine.wrapObject(jointIds[j]);\r\n                /* tip joints are only needed for joint rendering, so we skip those while mapping */\r\n                this.joints[joint.name] = joint;\r\n            }\r\n            /* If we have a hand skin, no need to spawn the joints-based one */\r\n            return;\r\n        }\r\n        /* Spawn joints */\r\n        const jointObjects = this.engine.scene.addObjects(ORDERED_JOINTS.length, this.object, ORDERED_JOINTS.length);\r\n        for (let j = 0; j < ORDERED_JOINTS.length; ++j) {\r\n            const joint = jointObjects[j];\r\n            joint.addComponent(MeshComponent, {\r\n                mesh: this.jointMesh,\r\n                material: this.jointMaterial,\r\n            });\r\n            this.joints[ORDERED_JOINTS[j]] = joint;\r\n            joint.name = ORDERED_JOINTS[j];\r\n        }\r\n    }\r\n    update(dt) {\r\n        if (!this.engine.xr)\r\n            return;\r\n        this.hasPose = false;\r\n        if (this.engine.xr.session.inputSources) {\r\n            for (let i = 0; i < this.engine.xr.session.inputSources.length; ++i) {\r\n                const inputSource = this.engine.xr.session.inputSources[i];\r\n                if (!inputSource?.hand || inputSource?.handedness != this.handedness)\r\n                    continue;\r\n                const wristSpace = inputSource.hand.get('wrist');\r\n                if (wristSpace) {\r\n                    const p = this.engine.xr.frame.getJointPose(wristSpace, this.engine.xr.currentReferenceSpace);\r\n                    if (p) {\r\n                        setXRRigidTransformLocal(this.object, p.transform);\r\n                    }\r\n                }\r\n                this.object.getRotationLocal(invRotation);\r\n                quat.conjugate(invRotation, invRotation);\r\n                this.object.getPositionLocal(invTranslation);\r\n                /* There is a bone 'wrist', but it just sits on the root\r\n                 * object. It could have an initial transform we want to\r\n                 * clear for skinning, though. */\r\n                this.joints['wrist'].resetTransform();\r\n                /* Wrist is already handled, so start at 1 */\r\n                for (let j = 0; j < ORDERED_JOINTS.length; ++j) {\r\n                    const jointName = ORDERED_JOINTS[j];\r\n                    const joint = this.joints[jointName];\r\n                    if (!joint)\r\n                        continue;\r\n                    let jointPose = null;\r\n                    const jointSpace = inputSource.hand.get(jointName);\r\n                    if (jointSpace) {\r\n                        jointPose = this.engine.xr.frame.getJointPose(jointSpace, this.engine.xr.currentReferenceSpace);\r\n                    }\r\n                    if (jointPose) {\r\n                        this.hasPose = true;\r\n                        joint.resetPositionRotation();\r\n                        joint.translateLocal([\r\n                            jointPose.transform.position.x - invTranslation[0],\r\n                            jointPose.transform.position.y - invTranslation[1],\r\n                            jointPose.transform.position.z - invTranslation[2],\r\n                        ]);\r\n                        joint.rotateLocal(invRotation);\r\n                        joint.rotateObject([\r\n                            jointPose.transform.orientation.x,\r\n                            jointPose.transform.orientation.y,\r\n                            jointPose.transform.orientation.z,\r\n                            jointPose.transform.orientation.w,\r\n                        ]);\r\n                        if (!this.handSkin) {\r\n                            /* Last joint radius of each finger is null */\r\n                            const r = jointPose.radius || 0.007;\r\n                            joint.setScalingLocal([r, r, r]);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (!this.hasPose && this._childrenActive) {\r\n            this._childrenActive = false;\r\n            if (this.deactivateChildrenWithoutPose) {\r\n                this.setChildrenActive(false);\r\n            }\r\n            if (this.controllerToDeactivate) {\r\n                this.controllerToDeactivate.active = true;\r\n                this.setChildrenActive(true, this.controllerToDeactivate);\r\n            }\r\n        }\r\n        else if (this.hasPose && !this._childrenActive) {\r\n            this._childrenActive = true;\r\n            if (this.deactivateChildrenWithoutPose) {\r\n                this.setChildrenActive(true);\r\n            }\r\n            if (this.controllerToDeactivate) {\r\n                this.controllerToDeactivate.active = false;\r\n                this.setChildrenActive(false, this.controllerToDeactivate);\r\n            }\r\n        }\r\n    }\r\n    setChildrenActive(active, object) {\r\n        object = object || this.object;\r\n        const children = object.children;\r\n        for (const o of children) {\r\n            o.active = active;\r\n            this.setChildrenActive(active, o);\r\n        }\r\n    }\r\n    isGrabbing() {\r\n        this.joints['index-finger-tip'].getPositionLocal(tempVec0);\r\n        this.joints['thumb-tip'].getPositionLocal(tempVec1);\r\n        return vec3.sqrDist(tempVec0, tempVec1) < 0.001;\r\n    }\r\n}\r\n__decorate([\r\n    property.enum(['left', 'right'])\r\n], HandTracking.prototype, \"handedness\", void 0);\r\n__decorate([\r\n    property.mesh()\r\n], HandTracking.prototype, \"jointMesh\", void 0);\r\n__decorate([\r\n    property.material()\r\n], HandTracking.prototype, \"jointMaterial\", void 0);\r\n__decorate([\r\n    property.skin()\r\n], HandTracking.prototype, \"handSkin\", void 0);\r\n__decorate([\r\n    property.bool(true)\r\n], HandTracking.prototype, \"deactivateChildrenWithoutPose\", void 0);\r\n__decorate([\r\n    property.object()\r\n], HandTracking.prototype, \"controllerToDeactivate\", void 0);\r\nexport { HandTracking };\r\n//# sourceMappingURL=hand-tracking.js.map", "import { Component, Type } from '@wonderlandengine/api';\r\nimport { AudioListener } from '@wonderlandengine/spatial-audio';\r\n/**\r\n * Deprecated audio listener based on [Howler.js](https://howlerjs.com/).\r\n * @deprecated Use AudioListener (audio-listener) instead.\r\n */\r\nclass HowlerAudioListener extends AudioListener {\r\n    static TypeName = 'howler-audio-listener';\r\n}\r\nexport { HowlerAudioListener };\r\n//# sourceMappingURL=howler-audio-listener.js.map", "var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { Component, Emitter } from '@wonderlandengine/api';\r\nimport { property } from '@wonderlandengine/api/decorators.js';\r\nimport { _audioContext, AudioListener, _unlockAudioContext } from './audio-listener.js';\r\nimport { AudioChannel, PlayState } from './audio-manager.js';\r\nimport { MIN_RAMP_TIME, MIN_VOLUME } from './audio-players.js';\r\nexport var PanningType;\r\n(function (PanningType) {\r\n    PanningType[PanningType[\"None\"] = 0] = \"None\";\r\n    PanningType[PanningType[\"Regular\"] = 1] = \"Regular\";\r\n    PanningType[PanningType[\"Hrtf\"] = 2] = \"Hrtf\";\r\n})(PanningType || (PanningType = {}));\r\n/**\r\n * Constants\r\n */\r\nconst posVec = new Float32Array(3);\r\nconst oriVec = new Float32Array(3);\r\nconst distanceModels = ['linear', 'exponential', 'inverse'];\r\nconst bufferCache = new Map();\r\n/**\r\n * Loads the given audio into a AudioBuffer.\r\n *\r\n * @param source Path to the file that should be decoded\r\n * @returns A Promise that fulfills once the audio is decoded\r\n */\r\nexport async function loadAudio(source) {\r\n    const response = await fetch(source);\r\n    const arrayBuffer = await response.arrayBuffer();\r\n    const buffer = await _audioContext.decodeAudioData(arrayBuffer);\r\n    return buffer;\r\n}\r\n/**\r\n * Adds the specified file to cache.\r\n * @param source Path to the file that should be added to cache.\r\n * @warning This is for internal use only, use at own risk!\r\n */\r\nasync function addBufferToCache(source) {\r\n    let audio;\r\n    if (bufferCache.has(source)) {\r\n        audio = bufferCache.get(source);\r\n        audio.referenceCount += 1;\r\n    }\r\n    else {\r\n        audio = {\r\n            referenceCount: 1,\r\n            buffer: loadAudio(source), // Delay await until bufferCache is set, to avoid subsequent calls with same source to start decoding\r\n        };\r\n        bufferCache.set(source, audio);\r\n    }\r\n    return await audio.buffer;\r\n}\r\n/**\r\n * Removes the specified file from cache.\r\n *\r\n * @param source Path to the file that should be evicted from cache.\r\n * @warning This is for internal use only, use at own risk!\r\n */\r\nfunction removeBufferFromCache(source) {\r\n    if (!bufferCache.has(source)) {\r\n        return;\r\n    }\r\n    const audioFile = bufferCache.get(source);\r\n    if (audioFile.referenceCount > 1) {\r\n        audioFile.referenceCount -= 1;\r\n    }\r\n    else {\r\n        bufferCache.delete(source);\r\n    }\r\n}\r\n/**\r\n * Represents an audio src in the Wonderland Engine, allowing playback of audio files.\r\n */\r\nexport class AudioSource extends Component {\r\n    /**\r\n     * The type name for this component.\r\n     */\r\n    static TypeName = 'audio-source';\r\n    static onRegister(engine) {\r\n        engine.registerComponent(AudioListener);\r\n    }\r\n    /** Path to the audio file that should be played. */\r\n    src;\r\n    /**\r\n     * Volume of the audio source.\r\n     *\r\n     * @remarks This will only take effect audio that has not started playing yet. Is the audio already playing, use\r\n     * setVolumeDuringPlayback()\r\n     * @see setVolumeDuringPlayback\r\n     */\r\n    volume;\r\n    /** Whether to loop the sound. */\r\n    loop;\r\n    /** Whether to autoplay the sound. */\r\n    autoplay;\r\n    /**\r\n     * Select the panning method.\r\n     *\r\n     * @warning Enabling HRTF (Head-Related Transfer Function) is computationally more intensive than regular panning!\r\n     */\r\n    spatial;\r\n    /**\r\n     * Set this property if the object will never move.\r\n     * Disabling position updates each frame saves CPU time.\r\n     */\r\n    isStationary;\r\n    /** The distance model used for spatial audio. */\r\n    distanceModel;\r\n    /** The maximum distance for audio falloff. */\r\n    maxDistance;\r\n    /** The reference distance for audio falloff. */\r\n    refDistance;\r\n    /** The rolloff factor for audio falloff. */\r\n    rolloffFactor;\r\n    /** The inner angle of the audio cone. */\r\n    coneInnerAngle;\r\n    /** The outer angle of the audio cone. */\r\n    coneOuterAngle;\r\n    /** The outer gain of the audio cone. */\r\n    coneOuterGain;\r\n    /**\r\n     * The emitter will notify all subscribers when a state change occurs.\r\n     * @see PlayState\r\n     */\r\n    emitter = new Emitter();\r\n    _pannerOptions = {};\r\n    _buffer;\r\n    _pannerNode = new PannerNode(_audioContext);\r\n    _audioNode = new AudioBufferSourceNode(_audioContext);\r\n    _isPlaying = false;\r\n    _time = 0;\r\n    _gainNode = new GainNode(_audioContext);\r\n    /**\r\n     * Initializes the audio src component.\r\n     * If `autoplay` is enabled, the audio will start playing as soon as the file is loaded.\r\n     */\r\n    async start() {\r\n        this._gainNode.connect(_audioContext.destination);\r\n        if (this.src !== '') {\r\n            this._buffer = await addBufferToCache(this.src);\r\n            this.emitter.notify(PlayState.Ready);\r\n            if (this.autoplay) {\r\n                this.play();\r\n            }\r\n        }\r\n    }\r\n    setAudioChannel(am, channel) {\r\n        this.stop();\r\n        switch (channel) {\r\n            case AudioChannel.Music:\r\n                this._gainNode.disconnect();\r\n                this._gainNode.connect(am['_musicGain']);\r\n                break;\r\n            case AudioChannel.Sfx:\r\n                this._gainNode.disconnect();\r\n                this._gainNode.connect(am['_sfxGain']);\r\n                break;\r\n            case AudioChannel.Master:\r\n                this._gainNode.disconnect();\r\n                this._gainNode.connect(am['_masterGain']);\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n    }\r\n    /**\r\n     * Plays the audio associated with this audio src.\r\n     *\r\n     * @param buffer Optional parameter that will set the raw audio buffer that should be played. Defaults to internal audio buffer that is set with given audio path.\r\n     * @remarks Is this audio-source currently playing, playback will be restarted.\r\n     */\r\n    async play(buffer = this._buffer) {\r\n        if (this._isPlaying) {\r\n            this.stop();\r\n        }\r\n        else if (_audioContext.state === 'suspended') {\r\n            await _unlockAudioContext();\r\n        }\r\n        this._gainNode.gain.value = this.volume;\r\n        this._audioNode.buffer = buffer;\r\n        this._audioNode.loop = this.loop;\r\n        if (!this.spatial) {\r\n            this._audioNode.connect(this._gainNode);\r\n        }\r\n        else {\r\n            this._updateSettings();\r\n            /* PannerNodes can't be reused, as they will play at their last position for a short period */\r\n            this._pannerNode = new PannerNode(_audioContext, this._pannerOptions);\r\n            this._audioNode.connect(this._pannerNode).connect(this._gainNode);\r\n        }\r\n        this._audioNode.onended = () => this.stop();\r\n        this._audioNode.start();\r\n        this._isPlaying = true;\r\n        if (!this.isStationary) {\r\n            this.update = this._update.bind(this);\r\n        }\r\n        this.emitter.notify(PlayState.Playing);\r\n    }\r\n    /**\r\n     * Stops the audio associated with this audio src.\r\n     */\r\n    stop() {\r\n        if (!this._isPlaying)\r\n            return;\r\n        this._isPlaying = false;\r\n        this._audioNode.onended = null;\r\n        this._audioNode.stop();\r\n        this.update = undefined;\r\n        this._audioNode.disconnect();\r\n        this._pannerNode.disconnect();\r\n        this._audioNode = new AudioBufferSourceNode(_audioContext);\r\n        this.emitter.notify(PlayState.Stopped);\r\n    }\r\n    /**\r\n     * Checks if the audio src is currently playing.\r\n     */\r\n    get isPlaying() {\r\n        return this._isPlaying;\r\n    }\r\n    /**\r\n     * Changes the volume during playback.\r\n     * @param v Volume that source should have.\r\n     * @param t Optional parameter that specifies the time it takes for the volume to reach its specified value in\r\n     * seconds (Default is 0).\r\n     */\r\n    setVolumeDuringPlayback(v, t = 0) {\r\n        const volume = Math.max(MIN_VOLUME, v);\r\n        const time = _audioContext.currentTime + Math.max(MIN_RAMP_TIME, t);\r\n        this._gainNode.gain.linearRampToValueAtTime(volume, time);\r\n    }\r\n    /**\r\n     * Change out the source.\r\n     *\r\n     * @param path Path to the audio file.\r\n     */\r\n    async changeAudioSource(path) {\r\n        this._buffer = await addBufferToCache(path);\r\n        removeBufferFromCache(this.src);\r\n        this.src = path;\r\n    }\r\n    /**\r\n     * Called when the component is deactivated.\r\n     * Stops the audio playback.\r\n     */\r\n    onDeactivate() {\r\n        this.stop();\r\n    }\r\n    /**\r\n     * Called when the component is destroyed.\r\n     * Stops the audio playback and removes the src from cache.\r\n     */\r\n    onDestroy() {\r\n        this.stop();\r\n        this._gainNode.disconnect();\r\n        removeBufferFromCache(this.src);\r\n    }\r\n    _update(dt) {\r\n        this.object.getPositionWorld(posVec);\r\n        this.object.getForwardWorld(oriVec);\r\n        this._time = _audioContext.currentTime + dt;\r\n        this._pannerNode.positionX.linearRampToValueAtTime(posVec[0], this._time);\r\n        this._pannerNode.positionY.linearRampToValueAtTime(posVec[2], this._time);\r\n        this._pannerNode.positionZ.linearRampToValueAtTime(-posVec[1], this._time);\r\n        this._pannerNode.orientationX.linearRampToValueAtTime(oriVec[0], this._time);\r\n        this._pannerNode.orientationY.linearRampToValueAtTime(oriVec[2], this._time);\r\n        this._pannerNode.orientationZ.linearRampToValueAtTime(-oriVec[1], this._time);\r\n    }\r\n    /**\r\n     * @deprecated Use {@link #volume} instead\r\n     */\r\n    set maxVolume(v) {\r\n        this.volume = v;\r\n    }\r\n    /**\r\n     * @deprecated Use {@link #volume} instead\r\n     */\r\n    get maxVolume() {\r\n        return this.volume;\r\n    }\r\n    _updateSettings() {\r\n        this.object.getPositionWorld(posVec);\r\n        this.object.getForwardWorld(oriVec);\r\n        this._pannerOptions = {\r\n            coneInnerAngle: this.coneInnerAngle,\r\n            coneOuterAngle: this.coneOuterAngle,\r\n            coneOuterGain: this.coneOuterGain,\r\n            distanceModel: this._distanceModelSelector(),\r\n            maxDistance: this.maxDistance,\r\n            refDistance: this.refDistance,\r\n            rolloffFactor: this.rolloffFactor,\r\n            panningModel: this.spatial === PanningType.Hrtf ? 'HRTF' : 'equalpower',\r\n            positionX: posVec[0],\r\n            positionY: posVec[2],\r\n            positionZ: -posVec[1],\r\n            orientationX: oriVec[0],\r\n            orientationY: oriVec[2],\r\n            orientationZ: -oriVec[1],\r\n        };\r\n    }\r\n    _distanceModelSelector() {\r\n        if (distanceModels.includes(this.distanceModel)) {\r\n            return this.distanceModel;\r\n        }\r\n        return 'exponential';\r\n    }\r\n}\r\n__decorate([\r\n    property.string()\r\n], AudioSource.prototype, \"src\", void 0);\r\n__decorate([\r\n    property.float(1.0)\r\n], AudioSource.prototype, \"volume\", void 0);\r\n__decorate([\r\n    property.bool(false)\r\n], AudioSource.prototype, \"loop\", void 0);\r\n__decorate([\r\n    property.bool(false)\r\n], AudioSource.prototype, \"autoplay\", void 0);\r\n__decorate([\r\n    property.enum(['none', 'panning', 'hrtf'], PanningType.Regular)\r\n], AudioSource.prototype, \"spatial\", void 0);\r\n__decorate([\r\n    property.bool(false)\r\n], AudioSource.prototype, \"isStationary\", void 0);\r\n__decorate([\r\n    property.enum(['linear', 'inverse', 'exponential'], 'exponential')\r\n], AudioSource.prototype, \"distanceModel\", void 0);\r\n__decorate([\r\n    property.float(10000)\r\n], AudioSource.prototype, \"maxDistance\", void 0);\r\n__decorate([\r\n    property.float(1.0)\r\n], AudioSource.prototype, \"refDistance\", void 0);\r\n__decorate([\r\n    property.float(1.0)\r\n], AudioSource.prototype, \"rolloffFactor\", void 0);\r\n__decorate([\r\n    property.float(360)\r\n], AudioSource.prototype, \"coneInnerAngle\", void 0);\r\n__decorate([\r\n    property.float(0)\r\n], AudioSource.prototype, \"coneOuterAngle\", void 0);\r\n__decorate([\r\n    property.float(0)\r\n], AudioSource.prototype, \"coneOuterGain\", void 0);\r\n", "import { Component } from '@wonderlandengine/api';\r\nconst SAMPLE_RATE = 48000;\r\n/* 5ms for now, so it definitely takes less than one frame */\r\nconst FADE_DURATION = 5 / 1000;\r\nconst tempVec = new Float32Array(3);\r\nconst tempVec2 = new Float32Array(3);\r\n/**\r\n * Variables\r\n */\r\nlet _audioContext = null;\r\nif (window.AudioContext !== undefined) {\r\n    _audioContext = new AudioContext({\r\n        latencyHint: 'interactive',\r\n        sampleRate: SAMPLE_RATE,\r\n    });\r\n}\r\nexport { _audioContext };\r\n/**\r\n * Unlocks the WebAudio AudioContext.\r\n *\r\n * @returns a promise that fulfills when the audioContext resumes.\r\n * @remarks WebAudio AudioContext only resumes on user interaction.\r\n * @warning This is for internal use only, use at own risk!\r\n */\r\nexport async function _unlockAudioContext() {\r\n    return new Promise((resolve) => {\r\n        const unlockHandler = () => {\r\n            _audioContext.resume().then(() => {\r\n                window.removeEventListener('click', unlockHandler);\r\n                window.removeEventListener('touch', unlockHandler);\r\n                window.removeEventListener('keydown', unlockHandler);\r\n                window.removeEventListener('mousedown', unlockHandler);\r\n                resolve();\r\n            });\r\n        };\r\n        window.addEventListener('click', unlockHandler);\r\n        window.addEventListener('touch', unlockHandler);\r\n        window.addEventListener('keydown', unlockHandler);\r\n        window.addEventListener('mousedown', unlockHandler);\r\n    });\r\n}\r\n/**\r\n * Represents a Wonderland audio listener component.\r\n * Updates the position and orientation of a WebAudio listener instance.\r\n *\r\n * @remarks Only one listener should be active at a time.\r\n */\r\nexport class AudioListener extends Component {\r\n    static TypeName = 'audio-listener';\r\n    static Properties = {};\r\n    /**\r\n     * The WebAudio listener instance associated with this component.\r\n     */\r\n    listener = _audioContext.listener;\r\n    /**\r\n     * The time in which the last position update will be done.\r\n     */\r\n    time = 0;\r\n    start() {\r\n        /* Check if recommended functions are supported */\r\n        if ('positionX' in this.listener) {\r\n            /* supported */\r\n            this.update = this._updateRecommended.bind(this);\r\n        }\r\n        else {\r\n            /* unsupported */\r\n            this.update = this._updateDeprecated.bind(this);\r\n        }\r\n    }\r\n    _updateDeprecated() {\r\n        /* Set the position of the listener */\r\n        this.object.getPositionWorld(tempVec);\r\n        this.listener.setPosition(tempVec[0], tempVec[2], -tempVec[1]);\r\n        /* Set the orientation of the listener */\r\n        this.object.getForwardWorld(tempVec);\r\n        this.object.getUpWorld(tempVec2);\r\n        this.listener.setOrientation(tempVec[0], tempVec[2], -tempVec[1], tempVec2[0], tempVec2[2], -tempVec2[1]);\r\n    }\r\n    _updateRecommended() {\r\n        this.time = _audioContext.currentTime + FADE_DURATION;\r\n        /* Set the position of the listener */\r\n        this.object.getPositionWorld(tempVec);\r\n        this.listener.positionX.linearRampToValueAtTime(tempVec[0], this.time);\r\n        this.listener.positionY.linearRampToValueAtTime(tempVec[2], this.time);\r\n        this.listener.positionZ.linearRampToValueAtTime(-tempVec[1], this.time);\r\n        /* Set the facing direction of the listener */\r\n        this.object.getForwardWorld(tempVec);\r\n        this.listener.forwardX.linearRampToValueAtTime(tempVec[0], this.time);\r\n        this.listener.forwardY.linearRampToValueAtTime(tempVec[2], this.time);\r\n        this.listener.forwardZ.linearRampToValueAtTime(-tempVec[1], this.time);\r\n        /* Set the head orientation of the listener */\r\n        this.object.getUpWorld(tempVec);\r\n        this.listener.upX.linearRampToValueAtTime(tempVec[0], this.time);\r\n        this.listener.upY.linearRampToValueAtTime(tempVec[2], this.time);\r\n        this.listener.upZ.linearRampToValueAtTime(-tempVec[1], this.time);\r\n    }\r\n}\r\n", "import { _audioContext } from './audio-listener.js';\r\nimport { Emitter } from '@wonderlandengine/api';\r\nimport { BufferPlayer, DEF_VOL, MIN_RAMP_TIME, MIN_VOLUME } from './audio-players.js';\r\n/**\r\n * Enumerates the available channels within the AudioManager.\r\n * These channels can be utilized to regulate global volume.\r\n */\r\nexport var AudioChannel;\r\n(function (AudioChannel) {\r\n    /** Intended for sound effects. Connects to Master AudioChannel. */\r\n    AudioChannel[AudioChannel[\"Sfx\"] = 0] = \"Sfx\";\r\n    /** Intended for music. Connects to Master AudioChannel. */\r\n    AudioChannel[AudioChannel[\"Music\"] = 1] = \"Music\";\r\n    /** Connects directly to output. */\r\n    AudioChannel[AudioChannel[\"Master\"] = 2] = \"Master\";\r\n})(AudioChannel || (AudioChannel = {}));\r\n/**\r\n * Enumerates the possible states of playback for audio sources.\r\n */\r\nexport var PlayState;\r\n(function (PlayState) {\r\n    /** The source is ready to be played */\r\n    PlayState[PlayState[\"Ready\"] = 0] = \"Ready\";\r\n    /** The source has started playing */\r\n    PlayState[PlayState[\"Playing\"] = 1] = \"Playing\";\r\n    /** The source has stopped */\r\n    PlayState[PlayState[\"Stopped\"] = 2] = \"Stopped\";\r\n    /** The source has paused */\r\n    PlayState[PlayState[\"Paused\"] = 3] = \"Paused\";\r\n})(PlayState || (PlayState = {}));\r\n/**\r\n * Default number of internal players.\r\n */\r\nexport const DEF_PLAYER_COUNT = 32;\r\nconst SHIFT_AMOUNT = 16;\r\nconst MAX_NUMBER_OF_INSTANCES = (1 << SHIFT_AMOUNT) - 1;\r\nexport class AudioManager {\r\n    /** The emitter will notify all listeners about the PlayState of a unique ID.\r\n     *\r\n     * @remarks\r\n     * - READY will be emitted if all sources of a given source ID have loaded.\r\n     * - PLAYING / STOPPED / PAUSED are only emitted for play IDs that are returned by the play() method.\r\n     * - If you want to check the status for a source ID, convert the play ID of the message using the\r\n     *   getSourceIdFromPlayId() method.\r\n     *\r\n     * @see getSourceIdFromPlayId\r\n     * @example\r\n     * ```js\r\n     * const music = audioManager.play(Sounds.Music);\r\n     * audioManager.emitter.add((msg) => {\r\n     *    if (msg.id === music) {\r\n     *          console.log(msg.state);\r\n     *    }\r\n     * });\r\n     * ```\r\n     */\r\n    emitter = new Emitter();\r\n    /**\r\n     * Sets the random function the manager will use for selecting buffers.\r\n     *\r\n     * @remarks Default random function is Math.random()\r\n     * @param func Function that should be used for select the buffer.\r\n     */\r\n    randomBufferSelectFunction = Math.random;\r\n    /* Cache for decoded audio buffers */\r\n    _bufferCache = [];\r\n    /* Simple, fast cache for players */\r\n    _playerCache = [];\r\n    _playerCacheIndex = 0;\r\n    _amountOfFreePlayers = DEF_PLAYER_COUNT;\r\n    /* Counts how many times a sourceId has played. Resets to 0 after {@link MAX_NUMBER_OF_INSTANCES }. */\r\n    _instanceCounter = [];\r\n    _masterGain;\r\n    _musicGain;\r\n    _sfxGain;\r\n    _unlocked = false;\r\n    _autoplayStorage = [];\r\n    /**\r\n     * Constructs a AudioManager.\r\n     *\r\n     * Uses the default amount of players.\r\n     * @see DEF_PLAYER_COUNT\r\n     * @example\r\n     * ```js\r\n     * // AudioManager can't be constructed in a non-browser environment!\r\n     * export const am = window.AudioContext ? new AudioManager() : null!;\r\n     * ```\r\n     */\r\n    constructor() {\r\n        this._unlockAudioContext();\r\n        this._sfxGain = new GainNode(_audioContext);\r\n        this._masterGain = new GainNode(_audioContext);\r\n        this._musicGain = new GainNode(_audioContext);\r\n        this._sfxGain.connect(this._masterGain);\r\n        this._musicGain.connect(this._masterGain);\r\n        this._masterGain.connect(_audioContext.destination);\r\n        for (let i = 0; i < DEF_PLAYER_COUNT; i++) {\r\n            this._playerCache.push(new BufferPlayer(this));\r\n        }\r\n    }\r\n    async load(path, id) {\r\n        if (id < 0) {\r\n            console.error('audio-manager: Negative IDs are not valid! Skipping ${path}.');\r\n            return;\r\n        }\r\n        const paths = Array.isArray(path) ? path : [path];\r\n        if (!this._bufferCache[id]) {\r\n            this._bufferCache[id] = [];\r\n        }\r\n        this._instanceCounter[id] = -1;\r\n        for (let i = 0; i < paths.length; i++) {\r\n            const response = await fetch(paths[i]);\r\n            const arrayBuffer = await response.arrayBuffer();\r\n            const audioBuffer = await _audioContext.decodeAudioData(arrayBuffer);\r\n            this._bufferCache[id].push(audioBuffer);\r\n        }\r\n        /* Init the instanceCounter */\r\n        this._instanceCounter[id] = 0;\r\n        this.emitter.notify({ id: id, state: PlayState.Ready });\r\n    }\r\n    async loadBatch(...pair) {\r\n        return Promise.all(pair.map((p) => this.load(p[0], p[1])));\r\n    }\r\n    play(id, config) {\r\n        if (this._instanceCounter[id] == -1) {\r\n            console.warn(`audio-manager: Tried to play audio that is still decoding: ${id}`);\r\n            return -1;\r\n        }\r\n        const bufferList = this._bufferCache[id];\r\n        if (!bufferList) {\r\n            console.error(`audio-manager: No audio source is associated with identifier: ${id}`);\r\n            return -1;\r\n        }\r\n        if (!this._unlocked) {\r\n            return -1;\r\n        }\r\n        const player = this._getAvailablePlayer();\r\n        if (!player) {\r\n            console.warn(`audio-manager: All players are busy and no low priority player could be found to free up to play ${id}.`);\r\n            return -1;\r\n        }\r\n        const unique_id = this._generateUniqueId(id);\r\n        /* Decode playConfig */\r\n        if (config?.priority) {\r\n            /* Priority players get pushed to the end of the list and cant be retrieved to free up */\r\n            this._amountOfFreePlayers--;\r\n            let index = this._playerCache.indexOf(player);\r\n            this._playerCache.splice(index, 1);\r\n            this._playerCache.push(player);\r\n            player.priority = true;\r\n        }\r\n        else {\r\n            player.priority = false;\r\n        }\r\n        player.playId = unique_id;\r\n        player.buffer = this._selectRandomBuffer(bufferList);\r\n        player.looping = config?.loop ?? false;\r\n        player.position = config?.position;\r\n        player.playOffset = config?.playOffset ?? 0;\r\n        player.channel = config?.channel ?? AudioChannel.Sfx;\r\n        player.volume = config?.volume ?? DEF_VOL;\r\n        player.play();\r\n        return unique_id;\r\n    }\r\n    _playWithUniqueId(uniqueId, config) {\r\n        const id = this.getSourceIdFromPlayId(uniqueId);\r\n        const bufferList = this._bufferCache[id];\r\n        if (!bufferList) {\r\n            console.error(`audio-manager: No audio source is associated with identifier: ${id}`);\r\n            return;\r\n        }\r\n        const player = this._getAvailablePlayer();\r\n        if (!player) {\r\n            console.warn(`audio-manager: All players are busy and no low priority player could be found to free up.`);\r\n            return;\r\n        }\r\n        /* Decode playConfig */\r\n        if (config?.priority) {\r\n            /* Priority players get pushed to the end of the list and cant be retrievd to free up */\r\n            this._amountOfFreePlayers--;\r\n            let index = this._playerCache.indexOf(player);\r\n            this._playerCache.splice(index, 1);\r\n            this._playerCache.push(player);\r\n            player.priority = true;\r\n        }\r\n        else {\r\n            player.priority = false;\r\n        }\r\n        player.playId = uniqueId;\r\n        player.buffer = this._selectRandomBuffer(bufferList);\r\n        player.looping = config?.loop ?? false;\r\n        player.oneShot = config?.oneShot ?? false;\r\n        player.position = config?.position;\r\n        player.playOffset = config?.playOffset ?? 0;\r\n        player.channel = config?.channel ?? AudioChannel.Sfx;\r\n        player.volume = config?.volume ?? DEF_VOL;\r\n        player.play();\r\n    }\r\n    playOneShot(id, config) {\r\n        if (!config)\r\n            this.play(id, { oneShot: true });\r\n        config.loop = false;\r\n        config.priority = false;\r\n        config.oneShot = true;\r\n        this.play(id, config);\r\n    }\r\n    /**\r\n     * Advances the _playerCacheIndex and stops the player on that position.\r\n     *\r\n     * @returns A BufferPlayer with PlayState.Stopped, or undefined if no player can be stopped.\r\n     */\r\n    _getAvailablePlayer() {\r\n        if (this._amountOfFreePlayers < 1)\r\n            return;\r\n        /* Advance cache pointer */\r\n        this._playerCacheIndex = (this._playerCacheIndex + 1) % this._amountOfFreePlayers;\r\n        const player = this._playerCache[this._playerCacheIndex];\r\n        /* Make player available if unavailable */\r\n        player.stop();\r\n        return player;\r\n    }\r\n    autoplay(id, config) {\r\n        if (this._unlocked) {\r\n            return this.play(id, config);\r\n        }\r\n        const uniqueId = this._generateUniqueId(id);\r\n        this._autoplayStorage.push([uniqueId, config]);\r\n        return uniqueId;\r\n    }\r\n    stop(playId) {\r\n        this._playerCache.forEach((player) => {\r\n            if (player.playId === playId) {\r\n                player.stop();\r\n                return;\r\n            }\r\n        });\r\n    }\r\n    pause(playId) {\r\n        this._playerCache.forEach((player) => {\r\n            if (player.playId === playId) {\r\n                player.pause();\r\n                return;\r\n            }\r\n        });\r\n    }\r\n    resume(playId) {\r\n        this._playerCache.forEach((player) => {\r\n            if (player.playId === playId) {\r\n                player.resume();\r\n                return;\r\n            }\r\n        });\r\n    }\r\n    stopOneShots() {\r\n        this._playerCache.forEach((player) => {\r\n            if (player.oneShot) {\r\n                player.stop();\r\n                return;\r\n            }\r\n        });\r\n    }\r\n    resumeAll() {\r\n        this._playerCache.forEach((player) => {\r\n            player.resume();\r\n        });\r\n    }\r\n    pauseAll() {\r\n        this._playerCache.forEach((player) => {\r\n            player.pause();\r\n        });\r\n    }\r\n    stopAll() {\r\n        this._playerCache.forEach((player) => {\r\n            player.stop();\r\n        });\r\n    }\r\n    setGlobalVolume(channel, volume, time = 0) {\r\n        volume = Math.max(MIN_VOLUME, volume);\r\n        time = _audioContext.currentTime + Math.max(MIN_RAMP_TIME, time);\r\n        switch (channel) {\r\n            case AudioChannel.Music:\r\n                this._musicGain.gain.linearRampToValueAtTime(volume, time);\r\n                break;\r\n            case AudioChannel.Sfx:\r\n                this._sfxGain.gain.linearRampToValueAtTime(volume, time);\r\n                break;\r\n            case AudioChannel.Master:\r\n                this._masterGain.gain.linearRampToValueAtTime(volume, time);\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n    }\r\n    remove(id) {\r\n        if (id < 0)\r\n            return;\r\n        this.stop(id);\r\n        this._bufferCache[id] = undefined;\r\n        this._instanceCounter[id] = -1;\r\n    }\r\n    removeAll() {\r\n        this.stopAll();\r\n        this._bufferCache.length = 0;\r\n        this._instanceCounter.length = 0;\r\n    }\r\n    getSourceIdFromPlayId(playId) {\r\n        return playId >> SHIFT_AMOUNT;\r\n    }\r\n    get amountOfFreePlayers() {\r\n        return this._amountOfFreePlayers;\r\n    }\r\n    _selectRandomBuffer(bufferList) {\r\n        return bufferList[Math.floor(this.randomBufferSelectFunction() * bufferList.length)];\r\n    }\r\n    _generateUniqueId(id) {\r\n        let instanceCount = this._instanceCounter[id];\r\n        if (!instanceCount)\r\n            instanceCount = 0;\r\n        else if (instanceCount === -1)\r\n            return -1;\r\n        const unique_id = (id << SHIFT_AMOUNT) + instanceCount;\r\n        this._instanceCounter[id] = (instanceCount + 1) % MAX_NUMBER_OF_INSTANCES;\r\n        return unique_id;\r\n    }\r\n    /**\r\n     * @warning This function is for internal use only!\r\n     */\r\n    _returnPriorityPlayer(player) {\r\n        if (!player.priority)\r\n            return;\r\n        /* We start looking from the back, because priority players are always in the back */\r\n        for (let i = this._playerCache.length - 1; i >= 0; i--) {\r\n            if (this._playerCache[i] === player) {\r\n                this._playerCache.splice(i, 1);\r\n                this._playerCache.unshift(player);\r\n                this._amountOfFreePlayers++;\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    _unlockAudioContext() {\r\n        const unlockHandler = () => {\r\n            _audioContext.resume().then(() => {\r\n                window.removeEventListener('click', unlockHandler);\r\n                window.removeEventListener('touch', unlockHandler);\r\n                window.removeEventListener('keydown', unlockHandler);\r\n                window.removeEventListener('mousedown', unlockHandler);\r\n                this._unlocked = true;\r\n                for (const audio of this._autoplayStorage) {\r\n                    this._playWithUniqueId(audio[0], audio[1]);\r\n                }\r\n                this._autoplayStorage.length = 0;\r\n            });\r\n        };\r\n        window.addEventListener('click', unlockHandler);\r\n        window.addEventListener('touch', unlockHandler);\r\n        window.addEventListener('keydown', unlockHandler);\r\n        window.addEventListener('mousedown', unlockHandler);\r\n    }\r\n}\r\nexport class EmptyAudioManager {\r\n    async load(path, id) { }\r\n    async loadBatch(...pair) { }\r\n    play(id, config) {\r\n        return -1;\r\n    }\r\n    playOneShot(id, config) { }\r\n    autoplay(id, config) {\r\n        return -1;\r\n    }\r\n    stop(playId) { }\r\n    pause(playId) { }\r\n    resume(playId) { }\r\n    stopOneShots() { }\r\n    resumeAll() { }\r\n    pauseAll() { }\r\n    stopAll() { }\r\n    setGlobalVolume(channel, volume, time) { }\r\n    remove(id) { }\r\n    removeAll() { }\r\n    getSourceIdFromPlayId(playId) {\r\n        return -1;\r\n    }\r\n    get amountOfFreePlayers() {\r\n        return -1;\r\n    }\r\n}\r\n/**\r\n * Global instance of a AudioManager.\r\n *\r\n * @remarks\r\n * To construct an AudioManager, the WebAudio API is needed. For non-browser environments, like during the packaging\r\n * step of the wonderland editor, the globalAudioManager is set to an `EmptyAudioManager`.\r\n * It enables the usage of `load()` and `loadBatch()` in top-level code.\r\n *\r\n * @warning\r\n * \u26A0\uFE0F Only load() and loadBatch() can be used in top-level code \u26A0\uFE0F\r\n */\r\nexport const globalAudioManager = window.AudioContext\r\n    ? new AudioManager()\r\n    : new EmptyAudioManager();\r\n", "import { _audioContext } from './audio-listener.js';\r\nimport { AudioChannel, PlayState } from './audio-manager.js';\r\n/* Ramp times of 0 cause a click, 5 ms should be sufficient */\r\nexport const MIN_RAMP_TIME = 5 / 1000;\r\n/* Needed because WebAudio ramp function doesn't accept 0 as valid volume */\r\nexport const MIN_VOLUME = 0.001;\r\nexport const DEF_VOL = 1.0;\r\nconst DEFAULT_PANNER_CONFIG = {\r\n    coneInnerAngle: 360,\r\n    coneOuterAngle: 0,\r\n    coneOuterGain: 0,\r\n    distanceModel: 'exponential',\r\n    maxDistance: 10000,\r\n    refDistance: 1.0,\r\n    rolloffFactor: 1.0,\r\n    panningModel: 'HRTF',\r\n    positionX: 0,\r\n    positionY: 0,\r\n    positionZ: 1,\r\n    orientationX: 0,\r\n    orientationY: 0,\r\n    orientationZ: 1,\r\n};\r\nexport class BufferPlayer {\r\n    playId = -1;\r\n    buffer = _audioContext.createBuffer(1, _audioContext.sampleRate, _audioContext.sampleRate);\r\n    looping = false;\r\n    position;\r\n    priority = false;\r\n    playOffset = 0;\r\n    channel = AudioChannel.Sfx;\r\n    volume = DEF_VOL;\r\n    oneShot = false;\r\n    _gainNode = new GainNode(_audioContext);\r\n    _pannerNode = new PannerNode(_audioContext, DEFAULT_PANNER_CONFIG);\r\n    _audioNode = new AudioBufferSourceNode(_audioContext);\r\n    _pannerOptions = DEFAULT_PANNER_CONFIG;\r\n    _playState = PlayState.Stopped;\r\n    _timeStamp = 0;\r\n    _audioManager;\r\n    /**\r\n     * Constructs a BufferPlayer.\r\n     *\r\n     * @warning This is for internal use only. BufferPlayer's should only be created and used inside the AudioManager.\r\n     * @param audioManager Manager that manages this player.\r\n     */\r\n    constructor(audioManager) {\r\n        this._audioManager = audioManager;\r\n    }\r\n    play() {\r\n        if (this._playState === PlayState.Playing) {\r\n            this.stop();\r\n        }\r\n        switch (this.channel) {\r\n            case AudioChannel.Music:\r\n                this._gainNode.connect(this._audioManager['_musicGain']);\r\n                break;\r\n            case AudioChannel.Master:\r\n                this._gainNode.connect(this._audioManager['_masterGain']);\r\n                break;\r\n            default:\r\n                this._gainNode.connect(this._audioManager['_sfxGain']);\r\n        }\r\n        this._gainNode.gain.value = this.volume;\r\n        this._audioNode.buffer = this.buffer;\r\n        this._audioNode.loop = this.looping;\r\n        if (this.position) {\r\n            this._pannerOptions.positionX = this.position[0];\r\n            this._pannerOptions.positionY = this.position[2];\r\n            this._pannerOptions.positionZ = -this.position[1];\r\n            /* This is a workaround! We cant re-use panner nodes because they don't update fast enough when\r\n             reconnecting */\r\n            this._pannerNode = new PannerNode(_audioContext, this._pannerOptions);\r\n            this._audioNode.connect(this._pannerNode).connect(this._gainNode);\r\n        }\r\n        else {\r\n            this._audioNode.connect(this._gainNode);\r\n        }\r\n        this._audioNode.start(0, this.playOffset);\r\n        this._timeStamp = _audioContext.currentTime - this.playOffset;\r\n        this._audioNode.onended = () => this.stop();\r\n        this._playState = PlayState.Playing;\r\n        this.emitState();\r\n    }\r\n    emitState() {\r\n        this._audioManager.emitter.notify({ id: this.playId, state: this._playState });\r\n    }\r\n    /**\r\n     * Stops current playback and sends notification on the audio managers emitter.\r\n     */\r\n    stop() {\r\n        if (this._playState === PlayState.Stopped)\r\n            return;\r\n        this._resetWebAudioNodes();\r\n        if (this.priority) {\r\n            this._audioManager._returnPriorityPlayer(this);\r\n        }\r\n        this._playState = PlayState.Stopped;\r\n        this.emitState();\r\n    }\r\n    pause() {\r\n        if (this._playState !== PlayState.Playing)\r\n            return;\r\n        this.playOffset =\r\n            (_audioContext.currentTime - this._timeStamp) % this.buffer.duration;\r\n        this._resetWebAudioNodes();\r\n        this._playState = PlayState.Paused;\r\n        this.emitState();\r\n    }\r\n    resume() {\r\n        if (this._playState !== PlayState.Paused)\r\n            return;\r\n        this.play();\r\n    }\r\n    _resetWebAudioNodes() {\r\n        this._audioNode.onended = null;\r\n        this._audioNode.stop();\r\n        this._audioNode.disconnect();\r\n        this._pannerNode.disconnect();\r\n        this._gainNode.disconnect();\r\n        this._audioNode = new AudioBufferSourceNode(_audioContext);\r\n    }\r\n}\r\n", "import { Component, Type } from '@wonderlandengine/api';\r\nimport { AudioSource } from '@wonderlandengine/spatial-audio';\r\n/**\r\n * Deprecated audio source based on [Howler.js](https://howlerjs.com/).\r\n * @deprecated Use AudioSource (audio-source) instead.\r\n */\r\nclass HowlerAudioSource extends AudioSource {\r\n    static TypeName = 'howler-audio-source';\r\n}\r\nexport { HowlerAudioSource };\r\n//# sourceMappingURL=howler-audio-source.js.map", "var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { Component } from '@wonderlandengine/api';\r\nimport { setFirstMaterialTexture } from './utils/utils.js';\r\nimport { property } from '@wonderlandengine/api/decorators.js';\r\n/**\r\n * Downloads an image from URL and applies it as `diffuseTexture` or `flatTexture`\r\n * to an attached mesh component.\r\n *\r\n * Materials from the following shaders are supported:\r\n *  - \"Phong Opaque Textured\"\r\n *  - \"Flat Opaque Textured\"\r\n *  - \"Background\"\r\n *  - \"Physical Opaque Textured\"\r\n *  - \"Foliage\"\r\n */\r\nclass ImageTexture extends Component {\r\n    static TypeName = 'image-texture';\r\n    /** URL to download the image from */\r\n    url;\r\n    /** Material to apply the video texture to */\r\n    material;\r\n    /** Name of the texture property to set */\r\n    textureProperty;\r\n    texture;\r\n    start() {\r\n        this.engine.textures\r\n            .load(this.url, 'anonymous')\r\n            .then((texture) => {\r\n            this.texture = texture;\r\n            const mat = this.material;\r\n            if (!setFirstMaterialTexture(mat, texture, this.textureProperty)) {\r\n                console.error('Pipeline', mat.pipeline, 'not supported by image-texture');\r\n            }\r\n        })\r\n            .catch(console.error);\r\n    }\r\n    onDestroy() {\r\n        this.texture?.destroy();\r\n    }\r\n}\r\n__decorate([\r\n    property.string()\r\n], ImageTexture.prototype, \"url\", void 0);\r\n__decorate([\r\n    property.material({ required: true })\r\n], ImageTexture.prototype, \"material\", void 0);\r\n__decorate([\r\n    property.string('auto')\r\n], ImageTexture.prototype, \"textureProperty\", void 0);\r\nexport { ImageTexture };\r\n//# sourceMappingURL=image-texture.js.map", "/**\r\n * Set the diffuse/flat texture of known pipelines.\r\n *\r\n * @param mat Material to set the texture on\r\n * @param texture Texture to set\r\n * @param customTextureProperty Texture property to set or `'auto'` to automatically\r\n *      detect the right texture property based on known pipeline.\r\n * @returns `true` if the property was set, `false` otherwise.\r\n */\r\nexport function setFirstMaterialTexture(mat, texture, customTextureProperty) {\r\n    if (customTextureProperty !== 'auto') {\r\n        // @ts-ignore\r\n        mat[customTextureProperty] = texture;\r\n        return true;\r\n    }\r\n    const shader = mat.shader;\r\n    if (shader === 'Flat Opaque Textured') {\r\n        // @ts-ignore\r\n        mat.flatTexture = texture;\r\n        return true;\r\n    }\r\n    else if (shader === 'Phong Opaque Textured' ||\r\n        shader === 'Foliage' ||\r\n        shader === 'Phong Normalmapped' ||\r\n        shader === 'Phong Lightmapped') {\r\n        // @ts-ignore\r\n        mat.diffuseTexture = texture;\r\n        return true;\r\n    }\r\n    else if (shader === 'Particle') {\r\n        // @ts-ignore\r\n        mat.mainTexture = texture;\r\n        return true;\r\n    }\r\n    else if (shader === 'DistanceFieldVector') {\r\n        // @ts-ignore\r\n        mat.vectorTexture = texture;\r\n        return true;\r\n    }\r\n    else if (shader === 'Background' || shader === 'Sky') {\r\n        // @ts-ignore\r\n        mat.texture = texture;\r\n        return true;\r\n    }\r\n    else if (shader === 'Physical Opaque Textured') {\r\n        // @ts-ignore\r\n        mat.albedoTexture = texture;\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nexport function deg2rad(value) {\r\n    return value * Math.PI / 180.0;\r\n}\r\nexport function rad2deg(value) {\r\n    return (value * 180.0) / Math.PI;\r\n}\r\n//# sourceMappingURL=utils.js.map", "var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { Component } from '@wonderlandengine/api';\r\nimport { property } from '@wonderlandengine/api/decorators.js';\r\nimport { quat } from 'gl-matrix';\r\nconst preventDefault = (e) => { e.preventDefault(); };\r\nconst TEMP_ROT = new Float32Array(4);\r\nconst ROT_MUL = 180 / Math.PI / 100;\r\n/**\r\n * Controls the camera orientation through mouse movement.\r\n *\r\n * Efficiently implemented to affect object orientation only\r\n * when the mouse moves.\r\n */\r\nclass MouseLookComponent extends Component {\r\n    static TypeName = 'mouse-look';\r\n    /** Mouse look sensitivity */\r\n    sensitity = 0.25;\r\n    /** Require a mouse button to be pressed to control view.\r\n     * Otherwise view will allways follow mouse movement */\r\n    requireMouseDown = true;\r\n    /** If \"moveOnClick\" is enabled, mouse button which should\r\n     * be held down to control view */\r\n    mouseButtonIndex = 0;\r\n    /** Enables pointer lock on \"mousedown\" event on canvas */\r\n    pointerLockOnClick = false;\r\n    currentRotationY = 0;\r\n    currentRotationX = 0;\r\n    mouseDown = false;\r\n    onActivate() {\r\n        document.addEventListener('mousemove', this.onMouseMove);\r\n        const canvas = this.engine.canvas;\r\n        if (this.pointerLockOnClick) {\r\n            canvas.addEventListener('mousedown', this.requestPointerLock);\r\n        }\r\n        if (this.requireMouseDown) {\r\n            if (this.mouseButtonIndex === 2) {\r\n                canvas.addEventListener('contextmenu', preventDefault, false);\r\n            }\r\n            canvas.addEventListener('mousedown', this.onMouseDown);\r\n            canvas.addEventListener('mouseup', this.onMouseUp);\r\n        }\r\n    }\r\n    onDeactivate() {\r\n        document.removeEventListener('mousemove', this.onMouseMove);\r\n        const canvas = this.engine.canvas;\r\n        if (this.pointerLockOnClick) {\r\n            canvas.removeEventListener('mousedown', this.requestPointerLock);\r\n        }\r\n        if (this.requireMouseDown) {\r\n            if (this.mouseButtonIndex === 2) {\r\n                canvas.removeEventListener('contextmenu', preventDefault, false);\r\n            }\r\n            canvas.removeEventListener('mousedown', this.onMouseDown);\r\n            canvas.removeEventListener('mouseup', this.onMouseUp);\r\n        }\r\n    }\r\n    requestPointerLock = () => {\r\n        const canvas = this.engine.canvas;\r\n        canvas.requestPointerLock =\r\n            canvas.requestPointerLock ||\r\n                canvas.mozRequestPointerLock ||\r\n                canvas.webkitRequestPointerLock;\r\n        canvas.requestPointerLock();\r\n    };\r\n    onMouseDown = (e) => {\r\n        if (e.button === this.mouseButtonIndex) {\r\n            this.mouseDown = true;\r\n            document.body.style.cursor = 'grabbing';\r\n            if (e.button === 1) {\r\n                e.preventDefault();\r\n                /* Prevent scrolling */\r\n                return false;\r\n            }\r\n        }\r\n    };\r\n    onMouseUp = (e) => {\r\n        if (e.button === this.mouseButtonIndex) {\r\n            this.mouseDown = false;\r\n            document.body.style.cursor = 'initial';\r\n        }\r\n    };\r\n    onMouseMove = (e) => {\r\n        if (this.active && (this.mouseDown || !this.requireMouseDown)) {\r\n            this.currentRotationX += (-this.sensitity * e.movementY) * ROT_MUL;\r\n            this.currentRotationY += (-this.sensitity * e.movementX) * ROT_MUL;\r\n            // 89 deg instead of 90 so that there are no camera glitches\r\n            // when looking straight down/up\r\n            this.currentRotationX = Math.max(-89, Math.min(89, this.currentRotationX));\r\n            quat.fromEuler(TEMP_ROT, this.currentRotationX, this.currentRotationY, 0);\r\n            this.object.setRotationLocal(TEMP_ROT);\r\n        }\r\n    };\r\n}\r\n__decorate([\r\n    property.float(0.25)\r\n], MouseLookComponent.prototype, \"sensitity\", void 0);\r\n__decorate([\r\n    property.bool(true)\r\n], MouseLookComponent.prototype, \"requireMouseDown\", void 0);\r\n__decorate([\r\n    property.int()\r\n], MouseLookComponent.prototype, \"mouseButtonIndex\", void 0);\r\n__decorate([\r\n    property.bool(false)\r\n], MouseLookComponent.prototype, \"pointerLockOnClick\", void 0);\r\nexport { MouseLookComponent };\r\n//# sourceMappingURL=mouse-look.js.map", "var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { Component } from '@wonderlandengine/api';\r\nimport { property } from '@wonderlandengine/api/decorators.js';\r\n/**\r\n * Set player height for a Y-offset above the ground for\r\n * 'local' and 'viewer' reference spaces.\r\n */\r\nclass PlayerHeight extends Component {\r\n    static TypeName = 'player-height';\r\n    height = 1.75;\r\n    onSessionStartCallback;\r\n    onSessionEndCallback;\r\n    start() {\r\n        this.object.resetPositionRotation();\r\n        this.object.translateLocal([0.0, this.height, 0.0]);\r\n        this.onSessionStartCallback = this.onXRSessionStart.bind(this);\r\n        this.onSessionEndCallback = this.onXRSessionEnd.bind(this);\r\n    }\r\n    onActivate() {\r\n        this.engine.onXRSessionStart.add(this.onSessionStartCallback);\r\n        this.engine.onXRSessionEnd.add(this.onSessionEndCallback);\r\n    }\r\n    onDeactivate() {\r\n        this.engine.onXRSessionStart.remove(this.onSessionStartCallback);\r\n        this.engine.onXRSessionEnd.remove(this.onSessionEndCallback);\r\n    }\r\n    onXRSessionStart() {\r\n        const type = this.engine.xr?.currentReferenceSpaceType;\r\n        if (type !== 'local' && type !== 'viewer') {\r\n            this.object.resetPositionRotation();\r\n        }\r\n    }\r\n    onXRSessionEnd() {\r\n        const type = this.engine.xr?.currentReferenceSpaceType;\r\n        if (type !== 'local' && type !== 'viewer') {\r\n            this.object.resetPositionRotation();\r\n            this.object.translateLocal([0.0, this.height, 0.0]);\r\n        }\r\n    }\r\n}\r\n__decorate([\r\n    property.float(1.75)\r\n], PlayerHeight.prototype, \"height\", void 0);\r\nexport { PlayerHeight };\r\n//# sourceMappingURL=player-height.js.map", "var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { Component } from '@wonderlandengine/api';\r\nimport { property } from '@wonderlandengine/api/decorators.js';\r\n/**\r\n * Sets the target framerate\r\n *\r\n * [Updates the target framerate](https://immersive-web.github.io/webxr/#dom-xrsession-updatetargetframerate)\r\n * to the closest [supported target framerate](https://immersive-web.github.io/webxr/#dom-xrsession-supportedFrameRates)\r\n * to the given `framerate`.\r\n *\r\n * The target framerate is used for the device's VR compositor as an indication of how often to refresh the\r\n * screen with new images. This means the app will be asked to produce frames in more regular intervals,\r\n * potentially spending less time on frames that are likely to be dropped.\r\n *\r\n * For apps with heavy load, setting a well matching target framerate can improve the apps rendering stability\r\n * and reduce stutter.\r\n *\r\n * Likewise, the target framerate can be used to enable 120Hz refresh rates on Oculus Quest 2 on simpler apps.\r\n */\r\nclass TargetFramerate extends Component {\r\n    static TypeName = 'target-framerate';\r\n    framerate;\r\n    onActivate() {\r\n        this.engine.onXRSessionStart.add(this.setTargetFramerate);\r\n    }\r\n    onDeactivate() {\r\n        this.engine.onXRSessionStart.remove(this.setTargetFramerate);\r\n    }\r\n    setTargetFramerate = (s) => {\r\n        if (s.supportedFrameRates) {\r\n            const a = s.supportedFrameRates;\r\n            a.sort((a, b) => Math.abs(a - this.framerate) - Math.abs(b - this.framerate));\r\n            s.updateTargetFrameRate(a[0]);\r\n        }\r\n    };\r\n}\r\n__decorate([\r\n    property.float(90.0)\r\n], TargetFramerate.prototype, \"framerate\", void 0);\r\nexport { TargetFramerate };\r\n//# sourceMappingURL=target-framerate.js.map", "import { vec3, quat2 } from 'gl-matrix';\r\nimport { Component, Type } from '@wonderlandengine/api';\r\n/**\r\n * Teleport VR locomotion.\r\n *\r\n * See [Teleport Example](/showcase/teleport).\r\n */\r\nclass TeleportComponent extends Component {\r\n    static TypeName = 'teleport';\r\n    static Properties = {\r\n        /** Object that will be placed as indiciation forwhere the player will teleport to. */\r\n        teleportIndicatorMeshObject: { type: Type.Object },\r\n        /** Root of the player, the object that will be positioned on teleportation. */\r\n        camRoot: { type: Type.Object },\r\n        /** Non-vr camera for use outside of VR */\r\n        cam: { type: Type.Object },\r\n        /** Left eye for use in VR*/\r\n        eyeLeft: { type: Type.Object },\r\n        /** Right eye for use in VR*/\r\n        eyeRight: { type: Type.Object },\r\n        /** Handedness for VR cursors to accept trigger events only from respective controller. */\r\n        handedness: {\r\n            type: Type.Enum,\r\n            values: ['input component', 'left', 'right', 'none'],\r\n            default: 'input component',\r\n        },\r\n        /** Collision group of valid \"floor\" objects that can be teleported on */\r\n        floorGroup: { type: Type.Int, default: 1 },\r\n        /** How far the thumbstick needs to be pushed to have the teleport target indicator show up */\r\n        thumbstickActivationThreshhold: { type: Type.Float, default: -0.7 },\r\n        /** How far the thumbstick needs to be released to execute the teleport */\r\n        thumbstickDeactivationThreshhold: { type: Type.Float, default: 0.3 },\r\n        /** Offset to apply to the indicator object, e.g. to avoid it from Z-fighting with the floor */\r\n        indicatorYOffset: { type: Type.Float, default: 0.01 },\r\n        /** Mode for raycasting, whether to use PhysX or simple collision components */\r\n        rayCastMode: {\r\n            type: Type.Enum,\r\n            values: ['collision', 'physx'],\r\n            default: 'collision',\r\n        },\r\n        /** Max distance for PhysX raycast */\r\n        maxDistance: { type: Type.Float, default: 100.0 },\r\n    };\r\n    init() {\r\n        this._prevThumbstickAxis = new Float32Array(2);\r\n        this._tempVec = new Float32Array(3);\r\n        this._tempVec0 = new Float32Array(3);\r\n        this._currentIndicatorRotation = 0;\r\n        this.input = this.object.getComponent('input');\r\n        if (!this.input) {\r\n            console.error(this.object.name, 'generic-teleport-component.js: input component is required on the object');\r\n            return;\r\n        }\r\n        if (!this.teleportIndicatorMeshObject) {\r\n            console.error(this.object.name, 'generic-teleport-component.js: Teleport indicator mesh is missing');\r\n            return;\r\n        }\r\n        if (!this.camRoot) {\r\n            console.error(this.object.name, 'generic-teleport-component.js: camRoot not set');\r\n            return;\r\n        }\r\n        this.isIndicating = false;\r\n        this.indicatorHidden = true;\r\n        this.hitSpot = new Float32Array(3);\r\n        this._hasHit = false;\r\n        this._extraRotation = 0;\r\n        this._currentStickAxes = new Float32Array(2);\r\n    }\r\n    start() {\r\n        if (this.handedness == 0) {\r\n            const inputComp = this.object.getComponent('input');\r\n            if (!inputComp) {\r\n                console.warn('teleport component on object', this.object.name, 'was configured with handedness \"input component\", ' +\r\n                    'but object has no input component.');\r\n            }\r\n            else {\r\n                this.handedness = inputComp.handedness;\r\n                this.input = inputComp;\r\n            }\r\n        }\r\n        else {\r\n            this.handedness = ['left', 'right'][this.handedness - 1];\r\n        }\r\n        this.onSessionStartCallback = this.setupVREvents.bind(this);\r\n        this.teleportIndicatorMeshObject.active = false;\r\n    }\r\n    onActivate() {\r\n        if (this.cam) {\r\n            this.isMouseIndicating = false;\r\n            canvas.addEventListener('mousedown', this.onMouseDown);\r\n            canvas.addEventListener('mouseup', this.onMouseUp);\r\n        }\r\n        this.engine.onXRSessionStart.add(this.onSessionStartCallback);\r\n    }\r\n    onDeactivate() {\r\n        canvas.addEventListener('mousedown', this.onMouseDown);\r\n        canvas.addEventListener('mouseup', this.onMouseUp);\r\n        this.engine.onXRSessionStart.remove(this.onSessionStartCallback);\r\n    }\r\n    /* Get current camera Y rotation */\r\n    _getCamRotation() {\r\n        this.eyeLeft.getForward(this._tempVec);\r\n        this._tempVec[1] = 0;\r\n        vec3.normalize(this._tempVec, this._tempVec);\r\n        return Math.atan2(this._tempVec[0], this._tempVec[2]);\r\n    }\r\n    update() {\r\n        let inputLength = 0;\r\n        if (this.gamepad && this.gamepad.axes) {\r\n            this._currentStickAxes[0] = this.gamepad.axes[2];\r\n            this._currentStickAxes[1] = this.gamepad.axes[3];\r\n            inputLength =\r\n                Math.abs(this._currentStickAxes[0]) + Math.abs(this._currentStickAxes[1]);\r\n        }\r\n        if (!this.isIndicating &&\r\n            this._prevThumbstickAxis[1] >= this.thumbstickActivationThreshhold &&\r\n            this._currentStickAxes[1] < this.thumbstickActivationThreshhold) {\r\n            this.isIndicating = true;\r\n        }\r\n        else if (this.isIndicating &&\r\n            inputLength < this.thumbstickDeactivationThreshhold) {\r\n            this.isIndicating = false;\r\n            this.teleportIndicatorMeshObject.active = false;\r\n            if (this._hasHit) {\r\n                this._teleportPlayer(this.hitSpot, this._extraRotation);\r\n            }\r\n        }\r\n        if (this.isIndicating && this.teleportIndicatorMeshObject && this.input) {\r\n            const origin = this._tempVec0;\r\n            this.object.getPositionWorld(origin);\r\n            const direction = this.object.getForwardWorld(this._tempVec);\r\n            let rayHit = (this.rayHit =\r\n                this.rayCastMode == 0\r\n                    ? this.engine.scene.rayCast(origin, direction, 1 << this.floorGroup)\r\n                    : this.engine.physics.rayCast(origin, direction, 1 << this.floorGroup, this.maxDistance));\r\n            if (rayHit.hitCount > 0) {\r\n                this.indicatorHidden = false;\r\n                this._extraRotation =\r\n                    Math.PI +\r\n                        Math.atan2(this._currentStickAxes[0], this._currentStickAxes[1]);\r\n                this._currentIndicatorRotation =\r\n                    this._getCamRotation() + (this._extraRotation - Math.PI);\r\n                this.teleportIndicatorMeshObject.resetPositionRotation();\r\n                this.teleportIndicatorMeshObject.rotateAxisAngleRad([0, 1, 0], this._currentIndicatorRotation);\r\n                this.teleportIndicatorMeshObject.translate(rayHit.locations[0]);\r\n                this.teleportIndicatorMeshObject.translate([\r\n                    0.0,\r\n                    this.indicatorYOffset,\r\n                    0.0,\r\n                ]);\r\n                this.teleportIndicatorMeshObject.active = true;\r\n                this.hitSpot.set(rayHit.locations[0]);\r\n                this._hasHit = true;\r\n            }\r\n            else {\r\n                if (!this.indicatorHidden) {\r\n                    this.teleportIndicatorMeshObject.active = false;\r\n                    this.indicatorHidden = true;\r\n                }\r\n                this._hasHit = false;\r\n            }\r\n        }\r\n        else if (this.teleportIndicatorMeshObject && this.isMouseIndicating) {\r\n            this.onMousePressed();\r\n        }\r\n        this._prevThumbstickAxis.set(this._currentStickAxes);\r\n    }\r\n    setupVREvents(s) {\r\n        /* If in VR, one-time bind the listener */\r\n        this.session = s;\r\n        s.addEventListener('end', function () {\r\n            /* Reset cache once the session ends to rebind select etc, in case\r\n             * it starts again */\r\n            this.gamepad = null;\r\n            this.session = null;\r\n        }.bind(this));\r\n        if (s.inputSources && s.inputSources.length) {\r\n            for (let i = 0; i < s.inputSources.length; i++) {\r\n                let inputSource = s.inputSources[i];\r\n                if (inputSource.handedness == this.handedness) {\r\n                    this.gamepad = inputSource.gamepad;\r\n                }\r\n            }\r\n        }\r\n        s.addEventListener('inputsourceschange', function (e) {\r\n            if (e.added && e.added.length) {\r\n                for (let i = 0; i < e.added.length; i++) {\r\n                    let inputSource = e.added[i];\r\n                    if (inputSource.handedness == this.handedness) {\r\n                        this.gamepad = inputSource.gamepad;\r\n                    }\r\n                }\r\n            }\r\n        }.bind(this));\r\n    }\r\n    onMouseDown = () => {\r\n        this.isMouseIndicating = true;\r\n    };\r\n    onMouseUp = () => {\r\n        this.isMouseIndicating = false;\r\n        this.teleportIndicatorMeshObject.active = false;\r\n        if (this._hasHit) {\r\n            this._teleportPlayer(this.hitSpot, 0.0);\r\n        }\r\n    };\r\n    onMousePressed() {\r\n        let origin = [0, 0, 0];\r\n        this.cam.getPositionWorld(origin);\r\n        const direction = this.cam.getForward(this._tempVec);\r\n        let rayHit = (this.rayHit =\r\n            this.rayCastMode == 0\r\n                ? this.engine.scene.rayCast(origin, direction, 1 << this.floorGroup)\r\n                : this.engine.physics.rayCast(origin, direction, 1 << this.floorGroup, this.maxDistance));\r\n        if (rayHit.hitCount > 0) {\r\n            this.indicatorHidden = false;\r\n            direction[1] = 0;\r\n            vec3.normalize(direction, direction);\r\n            this._currentIndicatorRotation =\r\n                -Math.sign(direction[2]) * Math.acos(direction[0]) - Math.PI * 0.5;\r\n            this.teleportIndicatorMeshObject.resetPositionRotation();\r\n            this.teleportIndicatorMeshObject.rotateAxisAngleRad([0, 1, 0], this._currentIndicatorRotation);\r\n            this.teleportIndicatorMeshObject.translate(rayHit.locations[0]);\r\n            this.teleportIndicatorMeshObject.active = true;\r\n            this.hitSpot = rayHit.locations[0];\r\n            this._hasHit = true;\r\n        }\r\n        else {\r\n            if (!this.indicatorHidden) {\r\n                this.teleportIndicatorMeshObject.active = false;\r\n                this.indicatorHidden = true;\r\n            }\r\n            this._hasHit = false;\r\n        }\r\n    }\r\n    _teleportPlayer(newPosition, rotationToAdd) {\r\n        this.camRoot.rotateAxisAngleRad([0, 1, 0], rotationToAdd);\r\n        const p = this._tempVec;\r\n        const p1 = this._tempVec0;\r\n        if (this.session) {\r\n            this.eyeLeft.getPositionWorld(p);\r\n            this.eyeRight.getPositionWorld(p1);\r\n            vec3.add(p, p, p1);\r\n            vec3.scale(p, p, 0.5);\r\n        }\r\n        else {\r\n            this.cam.getPositionWorld(p);\r\n        }\r\n        this.camRoot.getPositionWorld(p1);\r\n        vec3.sub(p, p1, p);\r\n        p[0] += newPosition[0];\r\n        p[1] = newPosition[1];\r\n        p[2] += newPosition[2];\r\n        this.camRoot.setPositionWorld(p);\r\n    }\r\n}\r\nexport { TeleportComponent };\r\n//# sourceMappingURL=teleport.js.map", "var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { Component, Mesh, MeshIndexType, MeshAttribute, } from '@wonderlandengine/api';\r\nimport { property } from '@wonderlandengine/api/decorators.js';\r\nimport { vec3 } from 'gl-matrix';\r\nconst direction = vec3.create();\r\nconst offset = vec3.create();\r\nconst normal = vec3.create();\r\nconst UP = vec3.fromValues(0, 1, 0);\r\n/**\r\n * Dynamic mesh-based trail\r\n *\r\n * This component keeps track of the world position of the object it's added to.\r\n * At a fixed interval the world position is stored as start and end points of the trail segments.\r\n *\r\n * The trail tapers off along its length. UV texture coordinates are setup such that the\r\n * U-axis covers the width of the trail and the V-axis covers the length of the trail.\r\n * This allows the trail's appearance to be defined using a texture.\r\n */\r\nclass Trail extends Component {\r\n    static TypeName = 'trail';\r\n    /** The material to apply to the trail mesh */\r\n    material = null;\r\n    /** The number of segments in the trail mesh */\r\n    segments = 50;\r\n    /** The time interval before recording a new point */\r\n    interval = 0.1;\r\n    /** The width of the trail (in world space) */\r\n    width = 1.0;\r\n    /** Whether or not the trail should taper off */\r\n    taper = true;\r\n    /**\r\n     * The maximum delta time in seconds, above which the trail resets.\r\n     * This prevents the trail from jumping around when updates happen\r\n     * infrequently (e.g. when the tab doesn't have focus).\r\n     */\r\n    resetThreshold = 0.5;\r\n    _currentPointIndex = 0;\r\n    _timeTillNext = 0;\r\n    _points = [];\r\n    _trailContainer = null;\r\n    _meshComp = null;\r\n    _mesh = null;\r\n    _indexData = null;\r\n    start() {\r\n        this._points = new Array(this.segments + 1);\r\n        for (let i = 0; i < this._points.length; ++i) {\r\n            this._points[i] = vec3.create();\r\n        }\r\n        /* The points array is circular, so keep track of its head */\r\n        this._timeTillNext = this.interval;\r\n        this._trailContainer = this.engine.scene.addObject();\r\n        this._meshComp = this._trailContainer.addComponent('mesh');\r\n        this._meshComp.material = this.material;\r\n        /* Each point will have two vertices; one on either side */\r\n        const vertexCount = 2 * this._points.length;\r\n        /* Each segment consists of two triangles */\r\n        this._indexData = new Uint32Array(6 * this.segments);\r\n        for (let i = 0, v = 0; i < vertexCount - 2; i += 2, v += 6) {\r\n            this._indexData\r\n                .subarray(v, v + 6)\r\n                .set([i + 1, i + 0, i + 2, i + 2, i + 3, i + 1]);\r\n        }\r\n        this._mesh = new Mesh(this.engine, {\r\n            vertexCount: vertexCount,\r\n            indexData: this._indexData,\r\n            indexType: MeshIndexType.UnsignedInt,\r\n        });\r\n        this._meshComp.mesh = this._mesh;\r\n    }\r\n    updateVertices() {\r\n        if (!this._mesh)\r\n            return;\r\n        const positions = this._mesh.attribute(MeshAttribute.Position);\r\n        const texCoords = this._mesh.attribute(MeshAttribute.TextureCoordinate);\r\n        const normals = this._mesh.attribute(MeshAttribute.Normal);\r\n        vec3.set(direction, 0, 0, 0);\r\n        for (let i = 0; i < this._points.length; ++i) {\r\n            const curr = this._points[(this._currentPointIndex + i + 1) % this._points.length];\r\n            const next = this._points[(this._currentPointIndex + i + 2) % this._points.length];\r\n            /* The last point has no next, so re-use the direction of the previous segment */\r\n            if (i !== this._points.length - 1) {\r\n                vec3.sub(direction, next, curr);\r\n            }\r\n            vec3.cross(offset, UP, direction);\r\n            vec3.normalize(offset, offset);\r\n            const timeFraction = 1.0 - this._timeTillNext / this.interval;\r\n            const fraction = (i - timeFraction) / this.segments;\r\n            vec3.scale(offset, offset, ((this.taper ? fraction : 1.0) * this.width) / 2.0);\r\n            positions.set(i * 2, [\r\n                curr[0] - offset[0],\r\n                curr[1] - offset[1],\r\n                curr[2] - offset[2],\r\n            ]);\r\n            positions.set(i * 2 + 1, [\r\n                curr[0] + offset[0],\r\n                curr[1] + offset[1],\r\n                curr[2] + offset[2],\r\n            ]);\r\n            if (normals) {\r\n                vec3.cross(normal, direction, offset);\r\n                vec3.normalize(normal, normal);\r\n                normals.set(i * 2, normal);\r\n                normals.set(i * 2 + 1, normal);\r\n            }\r\n            if (texCoords) {\r\n                texCoords.set(i * 2, [0, fraction]);\r\n                texCoords.set(i * 2 + 1, [1, fraction]);\r\n            }\r\n        }\r\n        /* Notify WLE that the mesh has changed */\r\n        this._mesh.update();\r\n    }\r\n    resetTrail() {\r\n        this.object.getPositionWorld(this._points[0]);\r\n        for (let i = 1; i < this._points.length; ++i) {\r\n            vec3.copy(this._points[i], this._points[0]);\r\n        }\r\n        this._currentPointIndex = 0;\r\n        this._timeTillNext = this.interval;\r\n    }\r\n    update(dt) {\r\n        this._timeTillNext -= dt;\r\n        if (dt > this.resetThreshold) {\r\n            this.resetTrail();\r\n        }\r\n        if (this._timeTillNext < 0) {\r\n            this._currentPointIndex = (this._currentPointIndex + 1) % this._points.length;\r\n            this._timeTillNext = (this._timeTillNext % this.interval) + this.interval;\r\n        }\r\n        this.object.getPositionWorld(this._points[this._currentPointIndex]);\r\n        this.updateVertices();\r\n    }\r\n    onActivate() {\r\n        this.resetTrail();\r\n        if (this._meshComp)\r\n            this._meshComp.active = true;\r\n    }\r\n    onDeactivate() {\r\n        if (this._meshComp)\r\n            this._meshComp.active = false;\r\n    }\r\n    onDestroy() {\r\n        if (this._trailContainer)\r\n            this._trailContainer.destroy();\r\n        if (this._mesh)\r\n            this._mesh.destroy();\r\n    }\r\n}\r\n__decorate([\r\n    property.material()\r\n], Trail.prototype, \"material\", void 0);\r\n__decorate([\r\n    property.int(50)\r\n], Trail.prototype, \"segments\", void 0);\r\n__decorate([\r\n    property.float(50)\r\n], Trail.prototype, \"interval\", void 0);\r\n__decorate([\r\n    property.float(1.0)\r\n], Trail.prototype, \"width\", void 0);\r\n__decorate([\r\n    property.bool(true)\r\n], Trail.prototype, \"taper\", void 0);\r\n__decorate([\r\n    property.float(1.0)\r\n], Trail.prototype, \"resetThreshold\", void 0);\r\nexport { Trail };\r\n//# sourceMappingURL=trail.js.map", "import { Component, Property } from '@wonderlandengine/api';\r\nimport { vec3 } from 'gl-matrix';\r\nfunction clamp(v, a, b) {\r\n    return Math.max(a, Math.min(v, b));\r\n}\r\nconst rootScaling = new Float32Array(3);\r\nconst tempQuat = new Float32Array(4);\r\n/**\r\n * Solve inverse kinematics for a two joint chains\r\n *\r\n * Inspired by http://theorangeduck.com/page/simple-two-joint\r\n */\r\nconst twoJointIK = (function () {\r\n    const ta = new Float32Array(3);\r\n    const ca = new Float32Array(3);\r\n    const ba = new Float32Array(3);\r\n    const ab = new Float32Array(3);\r\n    const cb = new Float32Array(3);\r\n    const axis0 = new Float32Array(3);\r\n    const axis1 = new Float32Array(3);\r\n    const temp = new Float32Array(3);\r\n    return function (root, middle, b, c, targetPos, eps, helper) {\r\n        /* a = [0, 0, 0], since everything is computed in root-space */\r\n        ba.set(b);\r\n        const lab = vec3.length(ba);\r\n        vec3.sub(ta, b, c);\r\n        const lcb = vec3.length(ta);\r\n        ta.set(targetPos);\r\n        const lat = clamp(vec3.length(ta), eps, lab + lcb - eps);\r\n        ca.set(c);\r\n        vec3.scale(ab, b, -1);\r\n        vec3.sub(cb, c, b);\r\n        vec3.normalize(ca, ca);\r\n        vec3.normalize(ba, ba);\r\n        vec3.normalize(ab, ab);\r\n        vec3.normalize(cb, cb);\r\n        vec3.normalize(ta, ta);\r\n        /* Supposedly numerical errors can cause the dot to go out of -1, 1 range */\r\n        const ac_ab_0 = Math.acos(clamp(vec3.dot(ca, ba), -1, 1));\r\n        const ba_bc_0 = Math.acos(clamp(vec3.dot(ab, cb), -1, 1));\r\n        const ac_at_0 = Math.acos(clamp(vec3.dot(ca, ta), -1, 1));\r\n        const ac_ab_1 = Math.acos(clamp((lcb * lcb - lab * lab - lat * lat) / (-2 * lab * lat), -1, 1));\r\n        const ba_bc_1 = Math.acos(clamp((lat * lat - lab * lab - lcb * lcb) / (-2 * lab * lcb), -1, 1));\r\n        if (helper) {\r\n            vec3.sub(ba, helper, b);\r\n            vec3.normalize(ba, ba);\r\n        }\r\n        vec3.cross(axis0, ca, ba);\r\n        vec3.normalize(axis0, axis0);\r\n        vec3.cross(axis1, c, targetPos);\r\n        vec3.normalize(axis1, axis1);\r\n        middle.transformVectorInverseLocal(temp, axis0);\r\n        root.rotateAxisAngleRadObject(axis1, ac_at_0);\r\n        root.rotateAxisAngleRadObject(axis0, ac_ab_1 - ac_ab_0);\r\n        middle.rotateAxisAngleRadObject(axis0, ba_bc_1 - ba_bc_0);\r\n    };\r\n})();\r\n/**\r\n * Inverse kinematics for two-joint chains (e.g. knees or elbows)\r\n */\r\nclass TwoJointIkSolver extends Component {\r\n    static TypeName = 'two-joint-ik-solver';\r\n    static Properties = {\r\n        /** Root bone, never moves */\r\n        root: Property.object(),\r\n        /** Bone attached to the root */\r\n        middle: Property.object(),\r\n        /** Bone attached to the middle */\r\n        end: Property.object(),\r\n        /** Target the joins should reach for */\r\n        target: Property.object(),\r\n        /** Flag for copying rotation from target to end */\r\n        copyTargetRotation: Property.bool(true),\r\n        /** Helper object to use to determine joint rotation axis */\r\n        helper: Property.object(),\r\n    };\r\n    time = 0;\r\n    middlePos = new Float32Array(3);\r\n    endPos = new Float32Array(3);\r\n    targetPos = new Float32Array(3);\r\n    helperPos = new Float32Array(3);\r\n    rootTransform = new Float32Array(8);\r\n    middleTransform = new Float32Array(8);\r\n    endTransform = new Float32Array(8);\r\n    start() {\r\n        this.root.getTransformLocal(this.rootTransform);\r\n        this.middle.getTransformLocal(this.middleTransform);\r\n        this.end.getTransformLocal(this.endTransform);\r\n    }\r\n    update(dt) {\r\n        this.time += dt;\r\n        /* Reset to original pose for stability */\r\n        this.root.setTransformLocal(this.rootTransform);\r\n        this.middle.setTransformLocal(this.middleTransform);\r\n        this.end.setTransformLocal(this.endTransform);\r\n        this.root.getScalingWorld(rootScaling);\r\n        /* Get joint positions in root-space */\r\n        this.middle.getPositionLocal(this.middlePos);\r\n        this.end.getPositionLocal(this.endPos);\r\n        this.middle.transformPointLocal(this.endPos, this.endPos);\r\n        if (this.helper) {\r\n            /* Get helper position in root space */\r\n            this.helper.getPositionWorld(this.helperPos);\r\n            this.root.transformPointInverseWorld(this.helperPos, this.helperPos);\r\n            vec3.div(this.helperPos, this.helperPos, rootScaling);\r\n        }\r\n        /* Get target position in root space */\r\n        this.target.getPositionWorld(this.targetPos);\r\n        this.root.transformPointInverseWorld(this.targetPos, this.targetPos);\r\n        vec3.div(this.targetPos, this.targetPos, rootScaling);\r\n        twoJointIK(this.root, this.middle, this.middlePos, this.endPos, this.targetPos, 0.01, this.helper ? this.helperPos : null, this.time);\r\n        if (this.copyTargetRotation) {\r\n            this.end.setRotationWorld(this.target.getRotationWorld(tempQuat));\r\n        }\r\n    }\r\n}\r\nexport { TwoJointIkSolver };\r\n//# sourceMappingURL=two-joint-ik-solver.js.map", "var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { Component } from '@wonderlandengine/api';\r\nimport { setFirstMaterialTexture } from './utils/utils.js';\r\nimport { property } from '@wonderlandengine/api/decorators.js';\r\n/**\r\n * Downloads a video from URL and applies it as `diffuseTexture` or `flatTexture`\r\n * on given material.\r\n *\r\n * Video textures need to be updated regularly whenever\r\n * a new frame is available. This component handles the\r\n * detection of a new frame and updates the texture to\r\n * reflect the video's current frame.\r\n *\r\n * Materials from the following shaders are supported:\r\n *  - \"Phong Opaque Textured\"\r\n *  - \"Flat Opaque Textured\"\r\n *  - \"Background\"\r\n *  - \"Physical Opaque Textured\"\r\n *  - \"Foliage\"\r\n *\r\n * The video can be accessed through `this.video`:\r\n *\r\n * ```js\r\n *   let videoTexture = this.object.getComponent('video-texture');\r\n *   videoTexture.video.play();\r\n *   videoTexture.video.pause();\r\n * ```\r\n *\r\n * See [Video Example](/showcase/video).\r\n */\r\nclass VideoTexture extends Component {\r\n    static TypeName = 'video-texture';\r\n    /** URL to download video from */\r\n    url;\r\n    /** Material to apply the video texture to */\r\n    material;\r\n    /** Whether to loop the video */\r\n    loop;\r\n    /** Whether to automatically start playing the video */\r\n    autoplay;\r\n    /** Whether to mute sound */\r\n    muted;\r\n    /** Name of the texture property to set */\r\n    textureProperty;\r\n    loaded = false;\r\n    frameUpdateRequested = true;\r\n    video;\r\n    texture;\r\n    start() {\r\n        this.video = document.createElement('video');\r\n        this.video.src = this.url;\r\n        this.video.crossOrigin = 'anonymous';\r\n        this.video.playsInline = true;\r\n        this.video.loop = this.loop;\r\n        this.video.muted = this.muted;\r\n        this.video.addEventListener('playing', () => {\r\n            this.loaded = true;\r\n        });\r\n        if (this.autoplay) {\r\n            /* Muted videos are allowed to play immediately. Videos with sound\r\n             * need to await a user gesture. */\r\n            if (this.muted) {\r\n                this.video?.play();\r\n            }\r\n            else {\r\n                window.addEventListener('click', this.playAfterUserGesture);\r\n                window.addEventListener('touchstart', this.playAfterUserGesture);\r\n            }\r\n        }\r\n    }\r\n    onDestroy() {\r\n        this.video?.remove();\r\n        this.texture?.destroy();\r\n        if (this.autoplay && !this.muted) {\r\n            /* In case not removed yet, we remove the autoplay gestures here.\r\n             * If already removed, these have no effect. */\r\n            window.removeEventListener('click', this.playAfterUserGesture);\r\n            window.removeEventListener('touchstart', this.playAfterUserGesture);\r\n        }\r\n    }\r\n    applyTexture() {\r\n        const mat = this.material;\r\n        const pipeline = mat.pipeline;\r\n        const texture = (this.texture = this.engine.textures.create(this.video));\r\n        if (!setFirstMaterialTexture(mat, texture, this.textureProperty)) {\r\n            console.error('Pipeline', pipeline, 'not supported by video-texture');\r\n        }\r\n        if ('requestVideoFrameCallback' in this.video) {\r\n            this.video.requestVideoFrameCallback(this.updateVideo.bind(this));\r\n        }\r\n        else {\r\n            this.video.addEventListener('timeupdate', () => {\r\n                this.frameUpdateRequested = true;\r\n            });\r\n        }\r\n    }\r\n    update(dt) {\r\n        if (this.loaded && this.frameUpdateRequested) {\r\n            if (this.texture) {\r\n                this.texture.update();\r\n            }\r\n            else {\r\n                /* Apply texture on first frame update request */\r\n                this.applyTexture();\r\n            }\r\n            this.frameUpdateRequested = false;\r\n        }\r\n    }\r\n    updateVideo() {\r\n        this.frameUpdateRequested = true;\r\n        this.video.requestVideoFrameCallback(this.updateVideo.bind(this));\r\n    }\r\n    playAfterUserGesture = () => {\r\n        this.video?.play();\r\n        window.removeEventListener('click', this.playAfterUserGesture);\r\n        window.removeEventListener('touchstart', this.playAfterUserGesture);\r\n    };\r\n}\r\n__decorate([\r\n    property.string()\r\n], VideoTexture.prototype, \"url\", void 0);\r\n__decorate([\r\n    property.material({ required: true })\r\n], VideoTexture.prototype, \"material\", void 0);\r\n__decorate([\r\n    property.bool(true)\r\n], VideoTexture.prototype, \"loop\", void 0);\r\n__decorate([\r\n    property.bool(true)\r\n], VideoTexture.prototype, \"autoplay\", void 0);\r\n__decorate([\r\n    property.bool(true)\r\n], VideoTexture.prototype, \"muted\", void 0);\r\n__decorate([\r\n    property.string('auto')\r\n], VideoTexture.prototype, \"textureProperty\", void 0);\r\nexport { VideoTexture };\r\n//# sourceMappingURL=video-texture.js.map", "import { Component, Type } from '@wonderlandengine/api';\r\n/**\r\n * Allows switching all other components on an object to active/inactive\r\n * depending on whether a VR/AR session is active.\r\n *\r\n * Useful for hiding controllers until the user enters VR for example.\r\n */\r\nclass VrModeActiveSwitch extends Component {\r\n    static TypeName = 'vr-mode-active-switch';\r\n    static Properties = {\r\n        /** When components should be active: In VR or when not in VR */\r\n        activateComponents: {\r\n            type: Type.Enum,\r\n            values: ['in VR', 'in non-VR'],\r\n            default: 'in VR',\r\n        },\r\n        /** Whether child object's components should be affected */\r\n        affectChildren: { type: Type.Bool, default: true },\r\n    };\r\n    start() {\r\n        this.components = [];\r\n        this.getComponents(this.object);\r\n        /* Initial activation/deactivation */\r\n        this.onXRSessionEnd();\r\n        this.onSessionStartCallback = this.onXRSessionStart.bind(this);\r\n        this.onSessionEndCallback = this.onXRSessionEnd.bind(this);\r\n    }\r\n    onActivate() {\r\n        this.engine.onXRSessionStart.add(this.onSessionStartCallback);\r\n        this.engine.onXRSessionEnd.add(this.onSessionEndCallback);\r\n    }\r\n    onDeactivate() {\r\n        this.engine.onXRSessionStart.remove(this.onSessionStartCallback);\r\n        this.engine.onXRSessionEnd.remove(this.onSessionEndCallback);\r\n    }\r\n    getComponents(obj) {\r\n        const comps = obj.getComponents().filter((c) => c.type !== 'vr-mode-active-switch');\r\n        this.components = this.components.concat(comps);\r\n        if (this.affectChildren) {\r\n            let children = obj.children;\r\n            for (let i = 0; i < children.length; ++i) {\r\n                this.getComponents(children[i]);\r\n            }\r\n        }\r\n    }\r\n    setComponentsActive(active) {\r\n        const comps = this.components;\r\n        for (let i = 0; i < comps.length; ++i) {\r\n            comps[i].active = active;\r\n        }\r\n    }\r\n    onXRSessionStart() {\r\n        this.setComponentsActive(this.activateComponents == 0);\r\n    }\r\n    onXRSessionEnd() {\r\n        this.setComponentsActive(this.activateComponents != 0);\r\n    }\r\n}\r\nexport { VrModeActiveSwitch };\r\n//# sourceMappingURL=vr-mode-active-switch.js.map", "var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { Collider, CollisionComponent, Component, Emitter, Mesh, MeshAttribute, MeshComponent, MeshIndexType, } from '@wonderlandengine/api';\r\nimport { property } from '@wonderlandengine/api/decorators.js';\r\nimport { setXRRigidTransformLocal } from './utils/webxr.js';\r\n// FIXME: earcut overrides default export, breaking our tests\r\nimport earcut from 'earcut';\r\nconst tempVec3 = new Float32Array(3);\r\n/** Compute minimum and maxium extents of given list of contour points */\r\nfunction extentsFromContour(out, points) {\r\n    if (points.length == 0)\r\n        return out;\r\n    let absMaxX = Math.abs(points[0].x);\r\n    let absMaxZ = Math.abs(points[0].z);\r\n    for (let i = 1; i < points.length; ++i) {\r\n        absMaxX = Math.max(absMaxX, Math.abs(points[i].x));\r\n        absMaxZ = Math.max(absMaxZ, Math.abs(points[i].z));\r\n    }\r\n    out[0] = absMaxX;\r\n    out[1] = 0;\r\n    out[2] = absMaxZ;\r\n}\r\n/** Check whether x lies between a and b */\r\nfunction within(x, a, b) {\r\n    if (a > b)\r\n        return x < a && x > b;\r\n    return x > a && x < b;\r\n}\r\n/**\r\n * Check whether given point on plane's bounding box is inside plane's polygon\r\n *\r\n * @param p 3D point in plane's local space, Y value is ignored, since it is assumed\r\n *     that the point was checked against the plane's bounding box.\r\n * @param plane XRPlane that has `XRPlane.polygon`\r\n * @returns `true` if the point lies on the plane\r\n */\r\nexport function isPointLocalOnXRPlanePolygon(p, plane) {\r\n    const points = plane.polygon;\r\n    if (points.length < 3)\r\n        return false;\r\n    /* Count ray intersections: even == inside, odd == outside */\r\n    const pX = p[0];\r\n    const pZ = p[2];\r\n    let intersections = 0;\r\n    for (let n = 0, l = points.length - 1; n < points.length; ++n) {\r\n        const aX = points[l].x;\r\n        const aZ = points[l].z;\r\n        const s = (points[n].z - aZ) / (points[n].x - aX);\r\n        const x = Math.abs((pZ - aZ) / s);\r\n        if (x >= 0.0 && x <= 1.0 && within(x + pX, aX, points[n].x))\r\n            ++intersections;\r\n        l = n;\r\n    }\r\n    return (intersections & 1) == 0;\r\n}\r\n/**\r\n * Check whether given point on plane's bounding box is inside plane's polygon\r\n *\r\n * @param p 3D point to test. It is assumed that the point was checked against\r\n *     the plane's bounding box beforehand.\r\n * @param plane XRPlane that has `XRPlane.polygon`\r\n * @returns `true` if the point lies on the plane\r\n */\r\nexport function isPointWorldOnXRPlanePolygon(object, p, plane) {\r\n    if (plane.polygon.length < 3)\r\n        return false;\r\n    isPointLocalOnXRPlanePolygon(object.transformPointInverseWorld(tempVec3, p), plane);\r\n}\r\n/**\r\n * Create a plane mesh from a list of contour points\r\n *\r\n * @param engine Engine to create the mesh with\r\n * @param points Contour points\r\n * @param meshToUpdate Optional mesh to update instead of creating a new one.\r\n */\r\nfunction planeMeshFromContour(engine, points, meshToUpdate = null) {\r\n    const vertexCount = points.length;\r\n    const vertices = new Float32Array(vertexCount * 2);\r\n    for (let i = 0, d = 0; i < vertexCount; ++i, d += 2) {\r\n        vertices[d] = points[i].x;\r\n        vertices[d + 1] = points[i].z;\r\n    }\r\n    const triangles = earcut(vertices);\r\n    const mesh = meshToUpdate ||\r\n        new Mesh(engine, {\r\n            vertexCount,\r\n            /* Assumption here that we will never have more than 256 points\r\n             * in the detected plane meshes! */\r\n            indexType: MeshIndexType.UnsignedByte,\r\n            indexData: triangles,\r\n        });\r\n    if (mesh.vertexCount !== vertexCount) {\r\n        console.warn('vertexCount of meshToUpdate did not match required vertexCount');\r\n        return mesh;\r\n    }\r\n    const positions = mesh.attribute(MeshAttribute.Position);\r\n    const textureCoords = mesh.attribute(MeshAttribute.TextureCoordinate);\r\n    const normals = mesh.attribute(MeshAttribute.Normal);\r\n    tempVec3[1] = 0;\r\n    for (let i = 0, s = 0; i < vertexCount; ++i, s += 2) {\r\n        tempVec3[0] = vertices[s];\r\n        tempVec3[2] = vertices[s + 1];\r\n        positions.set(i, tempVec3);\r\n    }\r\n    textureCoords?.set(0, vertices);\r\n    if (normals) {\r\n        tempVec3[0] = 0;\r\n        tempVec3[1] = 1;\r\n        tempVec3[2] = 0;\r\n        for (let i = 0; i < vertexCount; ++i) {\r\n            normals.set(i, tempVec3);\r\n        }\r\n    }\r\n    if (meshToUpdate)\r\n        mesh.update();\r\n    return mesh;\r\n}\r\n/**\r\n * Generate meshes and collisions for XRPlanes using [WebXR Device API - Plane Detection](https://immersive-web.github.io/real-world-geometry/plane-detection.html).\r\n */\r\nclass PlaneDetection extends Component {\r\n    static TypeName = 'plane-detection';\r\n    /**\r\n     * Material to assign to created plane meshes or `null` if meshes should not be created.\r\n     */\r\n    planeMaterial = null;\r\n    /**\r\n     * Collision mask to assign to newly created collision components or a negative value if\r\n     * collision components should not be created.\r\n     */\r\n    collisionMask = -1;\r\n    /** Map of all planes and their last updated timestamps */\r\n    planes = new Map();\r\n    /** Objects generated for each XRPlane */\r\n    planeObjects = new Map();\r\n    /** Called when a plane starts tracking */\r\n    onPlaneFound = new Emitter();\r\n    /** Called when a plane stops tracking */\r\n    onPlaneLost = new Emitter();\r\n    update() {\r\n        if (!this.engine.xr?.frame)\r\n            return;\r\n        // @ts-ignore\r\n        if (this.engine.xr.frame.detectedPlanes === undefined) {\r\n            console.error('plane-detection: WebXR feature not available.');\r\n            this.active = false;\r\n            return;\r\n        }\r\n        // @ts-ignore\r\n        const detectedPlanes = this.engine.xr.frame.detectedPlanes;\r\n        for (const [plane, _] of this.planes) {\r\n            if (!detectedPlanes.has(plane)) {\r\n                this.#planeLost(plane);\r\n            }\r\n        }\r\n        detectedPlanes.forEach((plane) => {\r\n            if (this.planes.has(plane)) {\r\n                if (plane.lastChangedTime > this.planes.get(plane)) {\r\n                    this.#planeUpdate(plane);\r\n                }\r\n            }\r\n            else {\r\n                this.#planeFound(plane);\r\n            }\r\n            this.#planeUpdatePose(plane);\r\n        });\r\n    }\r\n    #planeLost(plane) {\r\n        this.planes.delete(plane);\r\n        const o = this.planeObjects.get(plane);\r\n        this.onPlaneLost.notify(plane, o);\r\n        /* User might destroy the object */\r\n        if (o.objectId > 0)\r\n            o.destroy();\r\n    }\r\n    #planeFound(plane) {\r\n        this.planes.set(plane, plane.lastChangedTime);\r\n        const o = this.engine.scene.addObject(this.object);\r\n        this.planeObjects.set(plane, o);\r\n        if (this.planeMaterial) {\r\n            o.addComponent(MeshComponent, {\r\n                mesh: planeMeshFromContour(this.engine, plane.polygon),\r\n                material: this.planeMaterial,\r\n            });\r\n        }\r\n        if (this.collisionMask >= 0) {\r\n            extentsFromContour(tempVec3, plane.polygon);\r\n            tempVec3[1] = 0.025;\r\n            o.addComponent(CollisionComponent, {\r\n                group: this.collisionMask,\r\n                collider: Collider.Box,\r\n                extents: tempVec3,\r\n            });\r\n        }\r\n        this.onPlaneFound.notify(plane, o);\r\n    }\r\n    #planeUpdate(plane) {\r\n        this.planes.set(plane, plane.lastChangedTime);\r\n        const planeMesh = this.planeObjects.get(plane).getComponent(MeshComponent);\r\n        if (!planeMesh)\r\n            return;\r\n        planeMeshFromContour(this.engine, plane.polygon, planeMesh.mesh);\r\n    }\r\n    #planeUpdatePose(plane) {\r\n        const o = this.planeObjects.get(plane);\r\n        const pose = this.engine.xr.frame.getPose(plane.planeSpace, this.engine.xr.currentReferenceSpace);\r\n        if (!pose) {\r\n            o.active = false;\r\n            return;\r\n        }\r\n        setXRRigidTransformLocal(o, pose.transform);\r\n    }\r\n}\r\n__decorate([\r\n    property.material()\r\n], PlaneDetection.prototype, \"planeMaterial\", void 0);\r\n__decorate([\r\n    property.int()\r\n], PlaneDetection.prototype, \"collisionMask\", void 0);\r\nexport { PlaneDetection };\r\n//# sourceMappingURL=plane-detection.js.map", "var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { Component } from '@wonderlandengine/api';\r\nimport { quat, quat2, vec3 } from 'gl-matrix';\r\nimport { property } from '@wonderlandengine/api/decorators.js';\r\nconst VRM_ROLL_AXES = {\r\n    X: [1.0, 0.0, 0.0],\r\n    Y: [0.0, 1.0, 0.0],\r\n    Z: [0.0, 0.0, 1.0],\r\n};\r\nconst VRM_AIM_AXES = {\r\n    PositiveX: [1.0, 0.0, 0.0],\r\n    NegativeX: [-1.0, 0.0, 0.0],\r\n    PositiveY: [0.0, 1.0, 0.0],\r\n    NegativeY: [0.0, -1.0, 0.0],\r\n    PositiveZ: [0.0, 0.0, 1.0],\r\n    NegativeZ: [0.0, 0.0, -1.0],\r\n};\r\nconst Rad2Deg = 180.0 / Math.PI;\r\nconst RightVector = vec3.fromValues(1, 0, 0);\r\nconst UpVector = vec3.fromValues(0, 1, 0);\r\nconst ForwardVector = vec3.fromValues(0, 0, 1);\r\n/**\r\n * Component for loading and handling VRM 1.0 models.\r\n *\r\n * Posing of the model should be done exclusively by rotating the bones. These can be\r\n * accessed using the `.bones` property and follow the VRM bone naming. Note that not\r\n * all VRM models will have all possible bones. The rest pose (T-pose) is captured in\r\n * the `.restPose` property. Resetting a bone to its rest pose can be done as follows:\r\n * ```js\r\n * vrmComponent.bones[vrmBoneName].rotationLocal = vrmComponent.restPose[vrmBoneName];\r\n * ```\r\n *\r\n * Moving the model through the world should be done by moving the object this component\r\n * is attached to. In other words, by moving the root of the VRM model. The bones and any\r\n * descendant objects should *not* be used to move the VRM model.\r\n *\r\n * The core extension `VRMC_vrm` as well as the`VRMC_springBone` and `VRMC_node_constraint`\r\n * extensions are supported.\r\n *\r\n * **Limitations:**\r\n * - No support for `VRMC_material_mtoon`\r\n * - Expressions aren't supported\r\n * - Expression based lookAt isn't supported\r\n * - Mesh annotation mode `auto` is not supported (first person mode)\r\n */\r\nclass Vrm extends Component {\r\n    static TypeName = 'vrm';\r\n    /** URL to a VRM file to load */\r\n    src;\r\n    /** Object the VRM is looking at */\r\n    lookAtTarget;\r\n    /** Meta information about the VRM model */\r\n    meta = null;\r\n    /** The humanoid bones of the VRM model */\r\n    bones = {\r\n        /* Torso */\r\n        hips: null,\r\n        spine: null,\r\n        chest: null,\r\n        upperChest: null,\r\n        neck: null,\r\n        /* Head */\r\n        head: null,\r\n        leftEye: null,\r\n        rightEye: null,\r\n        jaw: null,\r\n        /* Legs */\r\n        leftUpperLeg: null,\r\n        leftLowerLeg: null,\r\n        leftFoot: null,\r\n        leftToes: null,\r\n        rightUpperLeg: null,\r\n        rightLowerLeg: null,\r\n        rightFoot: null,\r\n        rightToes: null,\r\n        /* Arms */\r\n        leftShoulder: null,\r\n        leftUpperArm: null,\r\n        leftLowerArm: null,\r\n        leftHand: null,\r\n        rightShoulder: null,\r\n        rightUpperArm: null,\r\n        rightLowerArm: null,\r\n        rightHand: null,\r\n        /* Fingers */\r\n        leftThumbMetacarpal: null,\r\n        leftThumbProximal: null,\r\n        leftThumbDistal: null,\r\n        leftIndexProximal: null,\r\n        leftIndexIntermediate: null,\r\n        leftIndexDistal: null,\r\n        leftMiddleProximal: null,\r\n        leftMiddleIntermediate: null,\r\n        leftMiddleDistal: null,\r\n        leftRingProximal: null,\r\n        leftRingIntermediate: null,\r\n        leftRingDistal: null,\r\n        leftLittleProximal: null,\r\n        leftLittleIntermediate: null,\r\n        leftLittleDistal: null,\r\n        rightThumbMetacarpal: null,\r\n        rightThumbProximal: null,\r\n        rightThumbDistal: null,\r\n        rightIndexProximal: null,\r\n        rightIndexIntermediate: null,\r\n        rightIndexDistal: null,\r\n        rightMiddleProximal: null,\r\n        rightMiddleIntermediate: null,\r\n        rightMiddleDistal: null,\r\n        rightRingProximal: null,\r\n        rightRingIntermediate: null,\r\n        rightRingDistal: null,\r\n        rightLittleProximal: null,\r\n        rightLittleIntermediate: null,\r\n        rightLittleDistal: null,\r\n    };\r\n    /** Rotations of the bones in the rest pose (T-pose) */\r\n    restPose = {};\r\n    /* All node constraints, ordered to deal with dependencies */\r\n    _nodeConstraints = [];\r\n    /* VRMC_springBone chains */\r\n    _springChains = [];\r\n    /* Spherical colliders for spring bones */\r\n    _sphereColliders = [];\r\n    /* Capsule shaped colliders for spring bones */\r\n    _capsuleColliders = [];\r\n    /* Indicates which meshes are rendered in first/third person views */\r\n    _firstPersonAnnotations = [];\r\n    /* Contains details for (bone type) lookAt behaviour */\r\n    _lookAt = null;\r\n    /* Whether or not the VRM component has been initialized with `initializeVrm` */\r\n    _initialized = false;\r\n    _tempV3 = vec3.create();\r\n    _tempV3A = vec3.create();\r\n    _tempV3B = vec3.create();\r\n    _tempQuat = quat.create();\r\n    _tempQuatA = quat.create();\r\n    _tempQuatB = quat.create();\r\n    _tempQuat2 = quat2.create();\r\n    _tailToShape = vec3.create();\r\n    _headToTail = vec3.create();\r\n    _inertia = vec3.create();\r\n    _stiffness = vec3.create();\r\n    _external = vec3.create();\r\n    _identityQuat = quat.identity(quat.create());\r\n    async start() {\r\n        if (!this.src) {\r\n            console.error('vrm: src property not set');\r\n            return;\r\n        }\r\n        const prefab = await this.engine.loadGLTF({ url: this.src, extensions: true });\r\n        const { root, extensions } = this.engine.scene.instantiate(prefab);\r\n        root.children.forEach((child) => (child.parent = this.object));\r\n        this._initializeVrm(prefab.extensions, extensions?.idMapping);\r\n        root.destroy();\r\n    }\r\n    /**\r\n     * Parses the VRM glTF extensions and initializes the vrm component.\r\n     * @param extensions The glTF extensions for the VRM model\r\n     */\r\n    _initializeVrm(extensions, idMapping) {\r\n        if (this._initialized) {\r\n            throw new Error('VRM component has already been initialized');\r\n        }\r\n        const VRMC_vrm = extensions.root['VRMC_vrm'];\r\n        if (!VRMC_vrm) {\r\n            throw new Error('Missing VRM extensions');\r\n        }\r\n        if (VRMC_vrm.specVersion !== '1.0') {\r\n            throw new Error(`Unsupported VRM version, only 1.0 is supported, but encountered '${VRMC_vrm.specVersion}'`);\r\n        }\r\n        this.meta = VRMC_vrm.meta;\r\n        this._parseHumanoid(VRMC_vrm.humanoid, idMapping);\r\n        if (VRMC_vrm.firstPerson) {\r\n            this._parseFirstPerson(VRMC_vrm.firstPerson, extensions);\r\n        }\r\n        if (VRMC_vrm.lookAt) {\r\n            this._parseLookAt(VRMC_vrm.lookAt);\r\n        }\r\n        this._findAndParseNodeConstraints(extensions, idMapping);\r\n        const springBone = extensions.root['VRMC_springBone'];\r\n        if (springBone) {\r\n            this._parseAndInitializeSpringBones(springBone, idMapping);\r\n        }\r\n        this._initialized = true;\r\n    }\r\n    _parseHumanoid(humanoid, idMapping) {\r\n        for (const boneName in humanoid.humanBones) {\r\n            if (!(boneName in this.bones)) {\r\n                console.warn(`Unrecognized bone '${boneName}'`);\r\n                continue;\r\n            }\r\n            const node = humanoid.humanBones[boneName].node;\r\n            const objectId = idMapping[node];\r\n            this.bones[boneName] = this.engine.scene.wrap(objectId);\r\n            this.restPose[boneName] = this.bones[boneName].getRotationLocal(quat.create());\r\n        }\r\n    }\r\n    _parseFirstPerson(firstPerson, idMapping) {\r\n        for (const meshAnnotation of firstPerson.meshAnnotations) {\r\n            const annotation = {\r\n                node: this.engine.scene.wrap(idMapping[meshAnnotation.node]),\r\n                firstPerson: true,\r\n                thirdPerson: true,\r\n            };\r\n            switch (meshAnnotation.type) {\r\n                case 'firstPersonOnly':\r\n                    annotation.thirdPerson = false;\r\n                    break;\r\n                case 'thirdPersonOnly':\r\n                    annotation.firstPerson = false;\r\n                    break;\r\n                case 'both':\r\n                    break;\r\n                case 'auto':\r\n                    console.warn(\"First person mesh annotation type 'auto' is not supported, treating as 'both'!\");\r\n                    break;\r\n                default:\r\n                    console.error(`Invalid mesh annotation type '${meshAnnotation.type}'`);\r\n                    break;\r\n            }\r\n            this._firstPersonAnnotations.push(annotation);\r\n        }\r\n    }\r\n    _parseLookAt(lookAt) {\r\n        if (lookAt.type !== 'bone') {\r\n            console.warn(`Unsupported lookAt type '${lookAt.type}', only 'bone' is supported`);\r\n            return;\r\n        }\r\n        const parseRangeMap = (rangeMap) => {\r\n            return {\r\n                inputMaxValue: rangeMap.inputMaxValue,\r\n                outputScale: rangeMap.outputScale,\r\n            };\r\n        };\r\n        this._lookAt = {\r\n            offsetFromHeadBone: lookAt.offsetFromHeadBone || [0, 0, 0],\r\n            horizontalInner: parseRangeMap(lookAt.rangeMapHorizontalInner),\r\n            horizontalOuter: parseRangeMap(lookAt.rangeMapHorizontalOuter),\r\n            verticalDown: parseRangeMap(lookAt.rangeMapVerticalDown),\r\n            verticalUp: parseRangeMap(lookAt.rangeMapVerticalUp),\r\n        };\r\n    }\r\n    _findAndParseNodeConstraints(extensions, idMapping) {\r\n        const traverse = (object) => {\r\n            const nodeExtensions = extensions.node[object.objectId];\r\n            if (nodeExtensions && 'VRMC_node_constraint' in nodeExtensions) {\r\n                const nodeConstraintExtension = nodeExtensions['VRMC_node_constraint'];\r\n                const constraint = nodeConstraintExtension.constraint;\r\n                let type, axis;\r\n                if ('roll' in constraint) {\r\n                    type = 'roll';\r\n                    axis = VRM_ROLL_AXES[constraint.roll.rollAxis];\r\n                }\r\n                else if ('aim' in constraint) {\r\n                    type = 'aim';\r\n                    axis = VRM_AIM_AXES[constraint.aim.aimAxis];\r\n                }\r\n                else if ('rotation' in constraint) {\r\n                    type = 'rotation';\r\n                }\r\n                if (type) {\r\n                    const source = this.engine.scene.wrap(idMapping[constraint[type].source]);\r\n                    this._nodeConstraints.push({\r\n                        type,\r\n                        source,\r\n                        destination: object,\r\n                        axis: axis,\r\n                        weight: constraint[type].weight,\r\n                        /* Rest pose */\r\n                        destinationRestLocalRotation: object.getRotationLocal(quat.create()),\r\n                        sourceRestLocalRotation: source.getRotationLocal(quat.create()),\r\n                        sourceRestLocalRotationInv: quat.invert(quat.create(), source.getRotationLocal(this._tempQuat)),\r\n                    });\r\n                }\r\n                else {\r\n                    console.warn('Unrecognized or invalid VRMC_node_constraint, ignoring it');\r\n                }\r\n            }\r\n            for (const child of object.children) {\r\n                traverse(child);\r\n            }\r\n        };\r\n        traverse(this.object);\r\n    }\r\n    _parseAndInitializeSpringBones(springBone, idMapping) {\r\n        const colliders = (springBone.colliders || []).map((collider, i) => {\r\n            const shapeType = 'capsule' in collider.shape ? 'capsule' : 'sphere';\r\n            return {\r\n                id: i,\r\n                object: this.engine.scene.wrap(idMapping[collider.node]),\r\n                shape: {\r\n                    isCapsule: shapeType === 'capsule',\r\n                    radius: collider.shape[shapeType].radius,\r\n                    offset: collider.shape[shapeType].offset,\r\n                    tail: collider.shape[shapeType].tail,\r\n                },\r\n                cache: {\r\n                    head: vec3.create(),\r\n                    tail: vec3.create(),\r\n                },\r\n            };\r\n        });\r\n        this._sphereColliders = colliders.filter((c) => !c.shape.isCapsule);\r\n        this._capsuleColliders = colliders.filter((c) => c.shape.isCapsule);\r\n        const colliderGroups = (springBone.colliderGroups || []).map((group) => ({\r\n            name: group.name,\r\n            colliders: group.colliders.map((c) => colliders[c]),\r\n        }));\r\n        for (const spring of springBone.springs) {\r\n            const joints = [];\r\n            for (const joint of spring.joints) {\r\n                const springJoint = {\r\n                    hitRadius: 0.0,\r\n                    stiffness: 1.0,\r\n                    gravityPower: 0.0,\r\n                    gravityDir: [0.0, -1.0, 0.0],\r\n                    dragForce: 0.5,\r\n                    node: null,\r\n                    state: null,\r\n                };\r\n                Object.assign(springJoint, joint);\r\n                springJoint.node = this.engine.scene.wrap(idMapping[joint.node]);\r\n                joints.push(springJoint);\r\n            }\r\n            const springChainColliders = (spring.colliderGroups || []).flatMap((cg) => colliderGroups[cg].colliders);\r\n            this._springChains.push({\r\n                name: spring.name,\r\n                center: spring.center\r\n                    ? this.engine.scene.wrap(idMapping[spring.center])\r\n                    : null,\r\n                joints,\r\n                sphereColliders: springChainColliders.filter((c) => !c.shape.isCapsule),\r\n                capsuleColliders: springChainColliders.filter((c) => c.shape.isCapsule),\r\n            });\r\n        }\r\n        /* Initialize spring bone joint state */\r\n        for (const springChain of this._springChains) {\r\n            for (let i = 0; i < springChain.joints.length - 1; ++i) {\r\n                const springBoneJoint = springChain.joints[i];\r\n                const childSpringBoneJoint = springChain.joints[i + 1];\r\n                const springBonePosition = springBoneJoint.node.getPositionWorld(vec3.create());\r\n                const childSpringBonePosition = childSpringBoneJoint.node.getPositionWorld(vec3.create());\r\n                const boneDirection = vec3.subtract(this._tempV3A, springBonePosition, childSpringBonePosition);\r\n                const state = {\r\n                    prevTail: vec3.copy(vec3.create(), childSpringBonePosition),\r\n                    currentTail: vec3.copy(vec3.create(), childSpringBonePosition),\r\n                    initialLocalRotation: springBoneJoint.node.getRotationLocal(quat.create()),\r\n                    initialLocalTransformInvert: quat2.invert(quat2.create(), springBoneJoint.node.getTransformLocal(this._tempQuat2)),\r\n                    boneAxis: vec3.normalize(vec3.create(), childSpringBoneJoint.node.getPositionLocal(this._tempV3)),\r\n                    /* Ensure bone length is at least 1cm to avoid jittery behaviour from zero-length bones */\r\n                    boneLength: Math.max(0.01, vec3.length(boneDirection)),\r\n                    /* Tail positions in center space, if needed */\r\n                    prevTailCenter: null,\r\n                    currentTailCenter: null,\r\n                };\r\n                if (springChain.center) {\r\n                    state.prevTailCenter = springChain.center.transformPointInverseWorld(vec3.create(), childSpringBonePosition);\r\n                    state.currentTailCenter = vec3.copy(vec3.create(), childSpringBonePosition);\r\n                }\r\n                springBoneJoint.state = state;\r\n            }\r\n        }\r\n    }\r\n    update(dt) {\r\n        if (!this._initialized) {\r\n            return;\r\n        }\r\n        /* 1. Resolve humanoid bones (performed by user) */\r\n        /* 2. Resolve LookAt (bone type) as the position of the head is determined */\r\n        this._resolveLookAt();\r\n        /* 3. Expression update (TODO) */\r\n        /* 4. Apply Expression (TODO) */\r\n        /* 5. Resolve constraints */\r\n        this._resolveConstraints();\r\n        /* 6. Resolve Spring Bone */\r\n        this._updateSpringBones(dt);\r\n    }\r\n    _rangeMap(rangeMap, input) {\r\n        const maxValue = rangeMap.inputMaxValue;\r\n        const outputScale = rangeMap.outputScale;\r\n        return (Math.min(input, maxValue) / maxValue) * outputScale;\r\n    }\r\n    _resolveLookAt() {\r\n        if (!this._lookAt || !this.lookAtTarget) {\r\n            return;\r\n        }\r\n        const lookAtSource = this.bones.head.transformPointWorld(this._tempV3A, this._lookAt.offsetFromHeadBone);\r\n        const lookAtTarget = this.lookAtTarget.getPositionWorld(this._tempV3B);\r\n        const lookAtDirection = vec3.sub(this._tempV3A, lookAtTarget, lookAtSource);\r\n        vec3.normalize(lookAtDirection, lookAtDirection);\r\n        /* Convert the direction into LookAt space */\r\n        this.bones.head.parent.transformVectorInverseWorld(lookAtDirection);\r\n        const z = vec3.dot(lookAtDirection, ForwardVector);\r\n        const x = vec3.dot(lookAtDirection, RightVector);\r\n        const yaw = Math.atan2(x, z) * Rad2Deg;\r\n        const xz = Math.sqrt(x * x + z * z);\r\n        const y = vec3.dot(lookAtDirection, UpVector);\r\n        let pitch = Math.atan2(-y, xz) * Rad2Deg;\r\n        /* Limit pitch */\r\n        if (pitch > 0) {\r\n            pitch = this._rangeMap(this._lookAt.verticalDown, pitch);\r\n        }\r\n        else {\r\n            pitch = -this._rangeMap(this._lookAt.verticalUp, -pitch);\r\n        }\r\n        /* Left eye (limit yaw) */\r\n        if (this.bones.leftEye) {\r\n            let yawLeft = yaw;\r\n            if (yawLeft > 0) {\r\n                yawLeft = this._rangeMap(this._lookAt.horizontalInner, yawLeft);\r\n            }\r\n            else {\r\n                yawLeft = -this._rangeMap(this._lookAt.horizontalOuter, -yawLeft);\r\n            }\r\n            const eyeRotation = quat.fromEuler(this._tempQuatA, pitch, yawLeft, 0);\r\n            this.bones.leftEye.setRotationLocal(quat.multiply(eyeRotation, this.restPose.leftEye, eyeRotation));\r\n        }\r\n        /* Right eye (limit yaw) */\r\n        if (this.bones.rightEye) {\r\n            let yawRight = yaw;\r\n            if (yawRight > 0) {\r\n                yawRight = this._rangeMap(this._lookAt.horizontalOuter, yawRight);\r\n            }\r\n            else {\r\n                yawRight = -this._rangeMap(this._lookAt.horizontalInner, -yawRight);\r\n            }\r\n            const eyeRotation = quat.fromEuler(this._tempQuatA, pitch, yawRight, 0);\r\n            this.bones.rightEye.setRotationLocal(quat.multiply(eyeRotation, this.restPose.rightEye, eyeRotation));\r\n        }\r\n    }\r\n    _resolveConstraints() {\r\n        for (const nodeConstraint of this._nodeConstraints) {\r\n            this._resolveConstraint(nodeConstraint);\r\n        }\r\n    }\r\n    _resolveConstraint(nodeConstraint) {\r\n        const dstRestQuat = nodeConstraint.destinationRestLocalRotation;\r\n        const srcRestQuatInv = nodeConstraint.sourceRestLocalRotationInv;\r\n        const targetQuat = quat.identity(this._tempQuatA);\r\n        switch (nodeConstraint.type) {\r\n            case 'roll':\r\n                {\r\n                    const deltaSrcQuat = quat.multiply(this._tempQuatA, srcRestQuatInv, nodeConstraint.source.rotationLocal);\r\n                    /* source to parent */\r\n                    const deltaSrcQuatInParent = quat.multiply(this._tempQuatA, nodeConstraint.sourceRestLocalRotation, deltaSrcQuat);\r\n                    quat.mul(deltaSrcQuatInParent, deltaSrcQuatInParent, srcRestQuatInv);\r\n                    /* parent to destination */\r\n                    const dstRestQuatInv = quat.invert(this._tempQuatB, dstRestQuat);\r\n                    const deltaSrcQuatInDst = quat.multiply(this._tempQuatB, dstRestQuatInv, deltaSrcQuatInParent);\r\n                    quat.multiply(deltaSrcQuatInDst, deltaSrcQuatInDst, dstRestQuat);\r\n                    const toVec = vec3.transformQuat(this._tempV3A, nodeConstraint.axis, deltaSrcQuatInDst);\r\n                    const fromToQuat = quat.rotationTo(this._tempQuatA, nodeConstraint.axis, toVec);\r\n                    quat.mul(targetQuat, dstRestQuat, quat.invert(this._tempQuat, fromToQuat));\r\n                    quat.mul(targetQuat, targetQuat, deltaSrcQuatInDst);\r\n                }\r\n                break;\r\n            case 'aim':\r\n                {\r\n                    const dstParentWorldQuat = nodeConstraint.destination.parent.rotationWorld;\r\n                    /* fromVec = aimAxis.applyQuaternion( dstParentWorldQuat * dstRestQuat ) */\r\n                    const fromVec = vec3.transformQuat(this._tempV3A, nodeConstraint.axis, dstRestQuat);\r\n                    vec3.transformQuat(fromVec, fromVec, dstParentWorldQuat);\r\n                    /* toVec = ( srcWorldPos - dstWorldPos ).normalized */\r\n                    const toVec = nodeConstraint.source.getTranslationWorld(this._tempV3B);\r\n                    vec3.sub(toVec, toVec, nodeConstraint.destination.getTranslationWorld(this._tempV3));\r\n                    vec3.normalize(toVec, toVec);\r\n                    /* fromToQuat = Quaternion.fromToRotation( fromVec, toVec ) */\r\n                    const fromToQuat = quat.rotationTo(this._tempQuatA, fromVec, toVec);\r\n                    quat.mul(targetQuat, quat.invert(this._tempQuat, dstParentWorldQuat), fromToQuat);\r\n                    quat.mul(targetQuat, targetQuat, dstParentWorldQuat);\r\n                    quat.mul(targetQuat, targetQuat, dstRestQuat);\r\n                }\r\n                break;\r\n            case 'rotation':\r\n                {\r\n                    const srcDeltaQuat = quat.mul(targetQuat, srcRestQuatInv, nodeConstraint.source.rotationLocal);\r\n                    quat.mul(targetQuat, dstRestQuat, srcDeltaQuat);\r\n                }\r\n                break;\r\n        }\r\n        /* Apply constraint */\r\n        quat.slerp(targetQuat, dstRestQuat, targetQuat, nodeConstraint.weight);\r\n        nodeConstraint.destination.rotationLocal = targetQuat;\r\n    }\r\n    _updateSpringBones(dt) {\r\n        /* Pre-compute collider positions */\r\n        this._sphereColliders.forEach(({ object, shape, cache }) => {\r\n            const offset = vec3.copy(cache.head, shape.offset);\r\n            object.transformVectorWorld(offset);\r\n            vec3.add(cache.head, object.getPositionWorld(this._tempV3), offset);\r\n        });\r\n        this._capsuleColliders.forEach(({ object, shape, cache }) => {\r\n            const shapeCenter = object.getPositionWorld(this._tempV3A);\r\n            const headOffset = vec3.copy(cache.head, shape.offset);\r\n            object.transformVectorWorld(headOffset);\r\n            vec3.add(cache.head, shapeCenter, headOffset);\r\n            const tailOffset = vec3.copy(cache.tail, shape.tail);\r\n            object.transformVectorWorld(tailOffset);\r\n            vec3.add(cache.tail, shapeCenter, tailOffset);\r\n        });\r\n        /* Update spring chains */\r\n        this._springChains.forEach((springChain) => {\r\n            for (let i = 0; i < springChain.joints.length - 1; ++i) {\r\n                const joint = springChain.joints[i];\r\n                if (!joint.state)\r\n                    continue;\r\n                const parentWorldRotation = joint.node.parent\r\n                    ? joint.node.parent.getRotationWorld(this._tempQuat)\r\n                    : this._identityQuat;\r\n                /* 1. Forces */\r\n                /* inertia = (currentTail - prevTail) * (1.0f - dragForce); */\r\n                const inertia = this._inertia;\r\n                if (springChain.center) {\r\n                    vec3.sub(inertia, joint.state.currentTailCenter, joint.state.prevTailCenter);\r\n                    springChain.center.transformVectorWorld(inertia);\r\n                }\r\n                else {\r\n                    vec3.sub(inertia, joint.state.currentTail, joint.state.prevTail);\r\n                }\r\n                vec3.scale(inertia, inertia, 1.0 - joint.dragForce);\r\n                /* stiffness = deltaTime * parentWorldRotation * localRotation * boneAxis * stiffnessForce; */\r\n                const stiffness = vec3.copy(this._stiffness, joint.state.boneAxis);\r\n                vec3.transformQuat(stiffness, stiffness, joint.state.initialLocalRotation);\r\n                vec3.transformQuat(stiffness, stiffness, parentWorldRotation);\r\n                vec3.scale(stiffness, stiffness, dt * joint.stiffness);\r\n                /* external = deltaTime * gravityDir * gravityPower; */\r\n                const external = vec3.scale(this._external, joint.gravityDir, dt * joint.gravityPower);\r\n                /* nextTail = currentTail + inertia + stiffness + external; */\r\n                const nextTail = vec3.copy(this._tempV3A, joint.state.currentTail);\r\n                vec3.add(nextTail, nextTail, inertia);\r\n                vec3.add(nextTail, nextTail, stiffness);\r\n                vec3.add(nextTail, nextTail, external);\r\n                /* constrain the length */\r\n                /* nextTail = worldPosition + (nextTail - worldPosition).normalized * boneLength; */\r\n                const worldPosition = joint.node.getPositionWorld(this._tempV3B);\r\n                vec3.sub(nextTail, nextTail, worldPosition);\r\n                vec3.normalize(nextTail, nextTail);\r\n                vec3.scaleAndAdd(nextTail, worldPosition, nextTail, joint.state.boneLength);\r\n                /* 2. Collision with colliders */\r\n                /* Sphere colliders */\r\n                for (const { shape, cache } of springChain.sphereColliders) {\r\n                    let tailToShape = this._tailToShape;\r\n                    const sphereCenter = cache.head;\r\n                    tailToShape = vec3.sub(tailToShape, nextTail, sphereCenter);\r\n                    const radius = shape.radius + joint.hitRadius;\r\n                    const dist = vec3.length(tailToShape) - radius;\r\n                    if (dist < 0.0) {\r\n                        vec3.normalize(tailToShape, tailToShape);\r\n                        vec3.scaleAndAdd(nextTail, nextTail, tailToShape, -dist);\r\n                        /* constraint the length */\r\n                        vec3.sub(nextTail, nextTail, worldPosition);\r\n                        vec3.normalize(nextTail, nextTail);\r\n                        vec3.scaleAndAdd(nextTail, worldPosition, nextTail, joint.state.boneLength);\r\n                    }\r\n                }\r\n                /* Capsule colliders */\r\n                for (const { shape, cache } of springChain.capsuleColliders) {\r\n                    let tailToShape = this._tailToShape;\r\n                    const head = cache.head;\r\n                    const tail = cache.tail;\r\n                    /* Naively start with distance to the head */\r\n                    tailToShape = vec3.sub(tailToShape, nextTail, head);\r\n                    const headToTail = vec3.sub(this._headToTail, tail, head);\r\n                    const dot = vec3.dot(headToTail, tailToShape);\r\n                    if (vec3.squaredLength(headToTail) <= dot) {\r\n                        /* Closest to tail */\r\n                        vec3.sub(tailToShape, nextTail, tail);\r\n                    }\r\n                    else if (dot > 0.0) {\r\n                        /* Closest to middle */\r\n                        vec3.scale(headToTail, headToTail, dot / vec3.squaredLength(headToTail));\r\n                        vec3.sub(tailToShape, tailToShape, headToTail);\r\n                    }\r\n                    const radius = shape.radius + joint.hitRadius;\r\n                    const dist = vec3.length(tailToShape) - radius;\r\n                    if (dist < 0.0) {\r\n                        vec3.normalize(tailToShape, tailToShape);\r\n                        vec3.scaleAndAdd(nextTail, nextTail, tailToShape, -dist);\r\n                        /* constraint the length */\r\n                        vec3.sub(nextTail, nextTail, worldPosition);\r\n                        vec3.normalize(nextTail, nextTail);\r\n                        vec3.scaleAndAdd(nextTail, worldPosition, nextTail, joint.state.boneLength);\r\n                    }\r\n                }\r\n                /* 3. Applying rotation */\r\n                vec3.copy(joint.state.prevTail, joint.state.currentTail);\r\n                vec3.copy(joint.state.currentTail, nextTail);\r\n                if (springChain.center) {\r\n                    vec3.copy(joint.state.prevTailCenter, joint.state.currentTailCenter);\r\n                    vec3.copy(joint.state.currentTailCenter, nextTail);\r\n                    springChain.center.transformPointInverseWorld(joint.state.currentTailCenter);\r\n                }\r\n                /* to = (nextTail * (node.parent.worldMatrix * initialLocalMatrix).inverse).normalized */\r\n                joint.node.parent.transformPointInverseWorld(nextTail);\r\n                const nextTailDualQuat = quat2.fromTranslation(this._tempQuat2, nextTail);\r\n                quat2.multiply(nextTailDualQuat, joint.state.initialLocalTransformInvert, nextTailDualQuat);\r\n                quat2.getTranslation(nextTail, nextTailDualQuat);\r\n                vec3.normalize(nextTail, nextTail);\r\n                /* node.rotation = initialLocalRotation * Quaternion.fromToQuaternion(boneAxis, to); */\r\n                const jointRotation = quat.rotationTo(this._tempQuatA, joint.state.boneAxis, nextTail);\r\n                joint.node.setRotationLocal(quat.mul(this._tempQuatA, joint.state.initialLocalRotation, jointRotation));\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @param firstPerson Whether the model should render for first person or third person views\r\n     */\r\n    set firstPerson(firstPerson) {\r\n        this._firstPersonAnnotations.forEach((annotation) => {\r\n            const visible = firstPerson == annotation.firstPerson ||\r\n                firstPerson != annotation.thirdPerson;\r\n            annotation.node.getComponents('mesh').forEach((mesh) => {\r\n                mesh.active = visible;\r\n            });\r\n        });\r\n    }\r\n}\r\n__decorate([\r\n    property.string()\r\n], Vrm.prototype, \"src\", void 0);\r\n__decorate([\r\n    property.object()\r\n], Vrm.prototype, \"lookAtTarget\", void 0);\r\nexport { Vrm };\r\n//# sourceMappingURL=vrm.js.map", "var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { vec3 } from 'gl-matrix';\r\nimport { Component } from '@wonderlandengine/api';\r\nimport { property } from '@wonderlandengine/api/decorators.js';\r\nconst _direction = new Float32Array(3);\r\nconst _tempDualQuat = new Float32Array(8);\r\n/**\r\n * Basic movement with W/A/S/D keys.\r\n */\r\nclass WasdControlsComponent extends Component {\r\n    static TypeName = 'wasd-controls';\r\n    /** Movement speed in m/s. */\r\n    speed;\r\n    /** Flag for only moving the object on the global x & z planes */\r\n    lockY;\r\n    /** Object of which the orientation is used to determine forward direction */\r\n    headObject;\r\n    right = false;\r\n    down = false;\r\n    left = false;\r\n    up = false;\r\n    start() {\r\n        this.headObject = this.headObject || this.object;\r\n    }\r\n    onActivate() {\r\n        window.addEventListener('keydown', this.press);\r\n        window.addEventListener('keyup', this.release);\r\n    }\r\n    onDeactivate() {\r\n        window.removeEventListener('keydown', this.press);\r\n        window.removeEventListener('keyup', this.release);\r\n    }\r\n    update() {\r\n        vec3.zero(_direction);\r\n        if (this.up)\r\n            _direction[2] -= 1.0;\r\n        if (this.down)\r\n            _direction[2] += 1.0;\r\n        if (this.left)\r\n            _direction[0] -= 1.0;\r\n        if (this.right)\r\n            _direction[0] += 1.0;\r\n        vec3.normalize(_direction, _direction);\r\n        _direction[0] *= this.speed;\r\n        _direction[2] *= this.speed;\r\n        vec3.transformQuat(_direction, _direction, this.headObject.getTransformWorld(_tempDualQuat));\r\n        if (this.lockY) {\r\n            _direction[1] = 0;\r\n            vec3.normalize(_direction, _direction);\r\n            vec3.scale(_direction, _direction, this.speed);\r\n        }\r\n        this.object.translateLocal(_direction);\r\n    }\r\n    press = (e) => {\r\n        this.handleKey(e, true);\r\n    };\r\n    release = (e) => {\r\n        this.handleKey(e, false);\r\n    };\r\n    handleKey(e, b) {\r\n        if (e.code === 'ArrowUp' || e.code === 'KeyW' || e.code === 'KeyZ') {\r\n            this.up = b;\r\n        }\r\n        else if (e.code === 'ArrowRight' || e.code === 'KeyD') {\r\n            this.right = b;\r\n        }\r\n        else if (e.code === 'ArrowDown' || e.code === 'KeyS') {\r\n            this.down = b;\r\n        }\r\n        else if (e.code === 'ArrowLeft' || e.code === 'KeyA' || e.code === 'KeyQ') {\r\n            this.left = b;\r\n        }\r\n    }\r\n}\r\n__decorate([\r\n    property.float(0.1)\r\n], WasdControlsComponent.prototype, \"speed\", void 0);\r\n__decorate([\r\n    property.bool(false)\r\n], WasdControlsComponent.prototype, \"lockY\", void 0);\r\n__decorate([\r\n    property.object()\r\n], WasdControlsComponent.prototype, \"headObject\", void 0);\r\nexport { WasdControlsComponent };\r\n//# sourceMappingURL=wasd-controls.js.map", "var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { Component, Emitter } from '@wonderlandengine/api';\r\nimport { HandTracking } from './hand-tracking.js';\r\nimport { vec3, quat } from 'gl-matrix';\r\nimport { property } from '@wonderlandengine/api/decorators.js';\r\nimport { VrModeActiveSwitch } from './vr-mode-active-switch.js';\r\nconst _tempVec = vec3.create();\r\nconst _tempQuat = quat.create();\r\nconst _tempRotation1 = new Float32Array(4);\r\nconst _tempRotation2 = new Float32Array(4);\r\nconst minTemp = new Float32Array(3);\r\nconst maxTemp = new Float32Array(3);\r\nconst hands = ['left', 'right'];\r\n/**\r\n * Dynamically load and map input profiles for XR controllers.\r\n */\r\nclass InputProfile extends Component {\r\n    static TypeName = 'input-profile';\r\n    /**\r\n     * A cache to store loaded profiles for reuse.\r\n     */\r\n    static Cache = new Map();\r\n    _gamepadObjects = {};\r\n    _controllerModel = null;\r\n    _defaultControllerComponents;\r\n    _handedness;\r\n    _profileJSON = null;\r\n    _buttons = [];\r\n    _axes = [];\r\n    /**\r\n     * The XR gamepad associated with the current input source.\r\n     */\r\n    gamepad;\r\n    /**\r\n     * A reference to the emitter which triggered on model lodaed event.\r\n     */\r\n    onModelLoaded = new Emitter();\r\n    /**\r\n     * Returns url of input profile json file\r\n     */\r\n    url;\r\n    /**\r\n     * A set of components to filter during component retrieval.\r\n     */\r\n    toFilter = new Set(['vr-mode-active-mode-switch']);\r\n    /**\r\n     * The index representing the handedness of the controller (0 for left, 1 for right).\r\n     */\r\n    handedness = 0;\r\n    /**\r\n     * The base path where XR input profiles are stored.\r\n     */\r\n    defaultBasePath;\r\n    /**\r\n     * An optional folder path for loading custom XR input profiles.\r\n     */\r\n    customBasePath;\r\n    /**\r\n     * The default 3D controller model used when a custom model fails to load.\r\n     */\r\n    defaultController;\r\n    /**\r\n     * The object which has HandTracking component added to it.\r\n     */\r\n    trackedHand;\r\n    /**\r\n     * If true, the input profile will be mapped to the default controller, and no dynamic 3D model of controller will be loaded.\r\n     */\r\n    mapToDefaultController;\r\n    /**\r\n     * If true, adds a VR mode switch component to the loaded controller model.\r\n     */\r\n    addVrModeSwitch;\r\n    onActivate() {\r\n        this._handedness = hands[this.handedness];\r\n        const defaultHandName = 'Hand' + this._handedness.charAt(0).toUpperCase() + this._handedness.slice(1);\r\n        this.trackedHand =\r\n            this.trackedHand ?? this.object.parent?.findByNameRecursive(defaultHandName)[0];\r\n        this.defaultController = this.defaultController || this.object.children[0];\r\n        this._defaultControllerComponents = this._getComponents(this.defaultController);\r\n        this.engine.onXRSessionStart.add(() => {\r\n            this.engine.xr?.session.addEventListener('inputsourceschange', this._onInputSourcesChange.bind(this));\r\n        });\r\n    }\r\n    onDeactivate() {\r\n        this.engine.xr?.session?.removeEventListener('inputsourceschange', this._onInputSourcesChange.bind(this));\r\n    }\r\n    /**\r\n     * Sets newly loaded controllers for the HandTracking component to proper switching.\r\n     * @param controllerObject The controller object.\r\n     * @hidden\r\n     */\r\n    _setHandTrackingControllers(controllerObject) {\r\n        const handtrackingComponent = this.trackedHand.getComponent(HandTracking);\r\n        if (!handtrackingComponent)\r\n            return;\r\n        handtrackingComponent.controllerToDeactivate = controllerObject;\r\n    }\r\n    /**\r\n     * Retrieves all components from the specified object and its children.\r\n     * @param obj The object to retrieve components from.\r\n     * @return An array of components.\r\n     * @hidden\r\n     */\r\n    _getComponents(obj) {\r\n        const components = [];\r\n        if (obj == null)\r\n            return components;\r\n        const stack = [obj];\r\n        while (stack.length > 0) {\r\n            const currentObj = stack.pop();\r\n            const comps = currentObj\r\n                .getComponents()\r\n                .filter((c) => !this.toFilter.has(c.type));\r\n            components.push(...comps);\r\n            const children = currentObj.children;\r\n            // Push children onto the stack in reverse order to maintain the correct order\r\n            for (let i = children.length - 1; i >= 0; --i) {\r\n                stack.push(children[i]);\r\n            }\r\n        }\r\n        return components;\r\n    }\r\n    /**\r\n     * Activates or deactivates components based on the specified boolean value.\r\n     * @param active If true, components are set to active; otherwise, they are set to inactive.\r\n     * @hidden\r\n     */\r\n    _setComponentsActive(active) {\r\n        const comps = this._defaultControllerComponents;\r\n        if (comps == undefined)\r\n            return;\r\n        for (let i = 0; i < comps.length; ++i) {\r\n            comps[i].active = active;\r\n        }\r\n    }\r\n    /**\r\n     * Event handler triggered when XR input sources change.\r\n     * Detects new XR input sources and initiates the loading of input profiles.\r\n     * @param event The XR input source change event.\r\n     * @hidden\r\n     */\r\n    _onInputSourcesChange(event) {\r\n        if (this._isModelLoaded() && !this.mapToDefaultController) {\r\n            this._setComponentsActive(false);\r\n        }\r\n        event.added.forEach((xrInputSource) => {\r\n            if (xrInputSource.hand != null)\r\n                return;\r\n            if (this._handedness != xrInputSource.handedness)\r\n                return;\r\n            this.gamepad = xrInputSource.gamepad;\r\n            const profile = this.customBasePath !== ''\r\n                ? this.customBasePath\r\n                : this.defaultBasePath + xrInputSource.profiles[0];\r\n            this.url = profile + '/profile.json';\r\n            this._profileJSON = InputProfile.Cache.get(this.url) ?? null;\r\n            if (this._profileJSON != null)\r\n                return;\r\n            fetch(this.url)\r\n                .then((res) => res.json())\r\n                .then((out) => {\r\n                this._profileJSON = out;\r\n                InputProfile.Cache.set(this.url, this._profileJSON);\r\n                if (!this._isModelLoaded())\r\n                    this._loadAndMapGamepad(profile);\r\n            })\r\n                .catch((e) => {\r\n                console.error(`Failed to load profile from ${this.url}. Reason:`, e);\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * Checks if the 3D controller model is loaded.\r\n     * @return True if the model is loaded; otherwise, false.\r\n     * @hidden\r\n     */\r\n    _isModelLoaded() {\r\n        return this._controllerModel !== null;\r\n    }\r\n    /**\r\n     * Loads the 3D controller model and caches the mapping to the gamepad.\r\n     * @param profile The path to the input profile.\r\n     * @hidden\r\n     */\r\n    async _loadAndMapGamepad(profile) {\r\n        const assetPath = profile + '/' + this._handedness + '.glb';\r\n        this._controllerModel = this.defaultController;\r\n        if (!this.mapToDefaultController) {\r\n            /** load 3d model in the runtime with profile url */\r\n            try {\r\n                this._controllerModel = (await this.engine.scene.append(assetPath));\r\n            }\r\n            catch (e) {\r\n                console.error(`Failed to load i-p controller model. Reason:`, e, `Continuing with ${this._handedness} default controller.`);\r\n                this._setComponentsActive(true);\r\n            }\r\n            this._controllerModel.parent = this.object;\r\n            this._controllerModel.setPositionLocal([0, 0, 0]);\r\n            this._setComponentsActive(false);\r\n            if (this.addVrModeSwitch)\r\n                this._controllerModel.addComponent(VrModeActiveSwitch);\r\n            this.onModelLoaded.notify();\r\n        }\r\n        this._cacheGamepadObjectsFromProfile(this._profileJSON, this._controllerModel);\r\n        this._setHandTrackingControllers(this._controllerModel);\r\n        this.update = () => this._mapGamepadInput();\r\n    }\r\n    /**\r\n     * Caches gamepad objects (buttons, axes) from the loaded input profile.\r\n     * @hidden\r\n     */\r\n    _cacheGamepadObjectsFromProfile(profile, obj) {\r\n        const components = profile.layouts[this._handedness].components;\r\n        if (!components)\r\n            return;\r\n        this._buttons = [];\r\n        this._axes = [];\r\n        for (const i in components) {\r\n            const visualResponses = components[i].visualResponses;\r\n            if (components[i].rootNodeName === 'menu')\r\n                continue;\r\n            for (const j in visualResponses) {\r\n                // update buttons with new interface of current visual response\r\n                const visualResponse = visualResponses[j];\r\n                const valueNode = visualResponse.valueNodeName;\r\n                const minNode = visualResponse.minNodeName;\r\n                const maxNode = visualResponse.maxNodeName;\r\n                this._gamepadObjects[valueNode] = obj.findByNameRecursive(valueNode)[0];\r\n                this._gamepadObjects[minNode] = obj.findByNameRecursive(minNode)[0];\r\n                this._gamepadObjects[maxNode] = obj.findByNameRecursive(maxNode)[0];\r\n                const prop = visualResponses[j].componentProperty;\r\n                const response = {\r\n                    target: this._gamepadObjects[valueNode],\r\n                    min: this._gamepadObjects[minNode],\r\n                    max: this._gamepadObjects[maxNode],\r\n                    id: components[i].gamepadIndices[prop], // Assign a unique ID\r\n                };\r\n                switch (prop) {\r\n                    case 'button':\r\n                        this._buttons.push(response);\r\n                        break;\r\n                    case 'xAxis':\r\n                    case 'yAxis':\r\n                        this._axes.push(response);\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Assigns a transformed position and rotation to the target based on minimum and maximum values and a normalized input value.\r\n     * @param target The target object to be transformed.\r\n     * @param min The minimum object providing transformation limits.\r\n     * @param max The maximum object providing transformation limits.\r\n     * @param value The normalized input value.\r\n     * @hidden\r\n     */\r\n    _assignTransform(target, min, max, value) {\r\n        vec3.lerp(_tempVec, min.getPositionWorld(minTemp), max.getPositionWorld(maxTemp), value);\r\n        target.setPositionWorld(_tempVec);\r\n        quat.lerp(_tempQuat, min.getRotationWorld(_tempRotation1), max.getRotationWorld(_tempRotation2), value);\r\n        quat.normalize(_tempQuat, _tempQuat);\r\n        target.setRotationWorld(_tempQuat);\r\n    }\r\n    /**\r\n     * Maps input values (buttons, axes) to the 3D controller model.\r\n     * @hidden\r\n     */\r\n    _mapGamepadInput() {\r\n        for (const button of this._buttons) {\r\n            const buttonValue = this.gamepad.buttons[button.id].value;\r\n            this._assignTransform(button.target, button.min, button.max, buttonValue);\r\n        }\r\n        for (const axis of this._axes) {\r\n            const axisValue = this.gamepad.axes[axis.id];\r\n            const normalizedAxisValue = (axisValue + 1) / 2;\r\n            this._assignTransform(axis.target, axis.min, axis.max, normalizedAxisValue);\r\n        }\r\n    }\r\n}\r\n__decorate([\r\n    property.enum(hands, 0)\r\n], InputProfile.prototype, \"handedness\", void 0);\r\n__decorate([\r\n    property.string('https://cdn.jsdelivr.net/npm/@webxr-input-profiles/assets@latest/dist/profiles/')\r\n], InputProfile.prototype, \"defaultBasePath\", void 0);\r\n__decorate([\r\n    property.string()\r\n], InputProfile.prototype, \"customBasePath\", void 0);\r\n__decorate([\r\n    property.object()\r\n], InputProfile.prototype, \"defaultController\", void 0);\r\n__decorate([\r\n    property.object()\r\n], InputProfile.prototype, \"trackedHand\", void 0);\r\n__decorate([\r\n    property.bool(false)\r\n], InputProfile.prototype, \"mapToDefaultController\", void 0);\r\n__decorate([\r\n    property.bool(true)\r\n], InputProfile.prototype, \"addVrModeSwitch\", void 0);\r\nexport { InputProfile };\r\n//# sourceMappingURL=input-profile.js.map", "var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { Component } from '@wonderlandengine/api';\r\nimport { property } from '@wonderlandengine/api/decorators.js';\r\nimport { deg2rad, rad2deg } from './utils/utils.js';\r\nimport { quat, vec3 } from 'gl-matrix';\r\nconst preventDefault = (e) => {\r\n    e.preventDefault();\r\n};\r\nconst tempVec = [0, 0, 0];\r\nconst tempquat = quat.create();\r\nconst tempquat2 = quat.create();\r\nconst tempVec3 = vec3.create();\r\n/**\r\n * OrbitalCamera component allows the user to orbit around a target point, which\r\n * is the position of the object itself. It rotates at the specified distance.\r\n *\r\n * @remarks\r\n * The component works using mouse or touch. Therefor it does not work in VR.\r\n */\r\nclass OrbitalCamera extends Component {\r\n    static TypeName = 'orbital-camera';\r\n    mouseButtonIndex = 0;\r\n    radial = 5;\r\n    minElevation = 0.0;\r\n    maxElevation = 89.99;\r\n    minZoom = 0.01;\r\n    maxZoom = 10.0;\r\n    xSensitivity = 0.5;\r\n    ySensitivity = 0.5;\r\n    zoomSensitivity = 0.02;\r\n    damping = 0.9;\r\n    _mouseDown = false;\r\n    _origin = [0, 0, 0];\r\n    _azimuth = 0;\r\n    _polar = 45;\r\n    _initialPinchDistance = 0;\r\n    _touchStartX = 0;\r\n    _touchStartY = 0;\r\n    _azimuthSpeed = 0;\r\n    _polarSpeed = 0;\r\n    init() {\r\n        this.object.getPositionWorld(this._origin);\r\n    }\r\n    start() {\r\n        this._polar = Math.min(this.maxElevation, Math.max(this.minElevation, this._polar));\r\n        this._updateCamera();\r\n    }\r\n    onActivate() {\r\n        const canvas = this.engine.canvas;\r\n        if (this.mouseButtonIndex === 2) {\r\n            canvas.addEventListener('contextmenu', preventDefault, { passive: false });\r\n        }\r\n        canvas.addEventListener('mousedown', this._onMouseDown);\r\n        canvas.addEventListener('wheel', this._onMouseScroll, { passive: false });\r\n        canvas.addEventListener('touchstart', this._onTouchStart, { passive: false });\r\n        canvas.addEventListener('touchmove', this._onTouchMove, { passive: false });\r\n        canvas.addEventListener('touchend', this._onTouchEnd);\r\n    }\r\n    onDeactivate() {\r\n        const canvas = this.engine.canvas;\r\n        if (this.mouseButtonIndex === 2) {\r\n            canvas.removeEventListener('contextmenu', preventDefault);\r\n        }\r\n        canvas.removeEventListener('mousemove', this._onMouseMove);\r\n        canvas.removeEventListener('mousedown', this._onMouseDown);\r\n        canvas.removeEventListener('wheel', this._onMouseScroll);\r\n        canvas.removeEventListener('touchstart', this._onTouchStart);\r\n        canvas.removeEventListener('touchmove', this._onTouchMove);\r\n        canvas.removeEventListener('touchend', this._onTouchEnd);\r\n        /* Reset state to make sure nothing gets stuck */\r\n        this._mouseDown = false;\r\n        this._initialPinchDistance = 0;\r\n        this._touchStartX = 0;\r\n        this._touchStartY = 0;\r\n        this._azimuthSpeed = 0;\r\n        this._polarSpeed = 0;\r\n    }\r\n    update() {\r\n        /* Always apply damping, because there's no event for stop moving */\r\n        this._azimuthSpeed *= this.damping;\r\n        this._polarSpeed *= this.damping;\r\n        /* Stop completely if the speed is very low to avoid endless tiny movements */\r\n        if (Math.abs(this._azimuthSpeed) < 0.01)\r\n            this._azimuthSpeed = 0;\r\n        if (Math.abs(this._polarSpeed) < 0.01)\r\n            this._polarSpeed = 0;\r\n        /* Apply the speed to the camera angles */\r\n        this._azimuth += this._azimuthSpeed;\r\n        this._polar += this._polarSpeed;\r\n        /* Clamp the polar angle */\r\n        this._polar = Math.min(this.maxElevation, Math.max(this.minElevation, this._polar));\r\n        /* Update the camera if there's any speed */\r\n        if (this._azimuthSpeed !== 0 || this._polarSpeed !== 0) {\r\n            this._updateCamera();\r\n        }\r\n    }\r\n    /**\r\n     * Get the closest position to the given position on the orbit sphere of the camera.\r\n     * This can be used to get a position and rotation to transition to.\r\n     *\r\n     * You pass this a position object. The method calculates the closest positition and updates the position parameter.\r\n     * It also sets the rotation parameter to reflect the rotate the camera will have when it is on the orbit sphere,\r\n     * pointing towards the center.\r\n     * @param position the position to get the closest position to\r\n     * @param rotation the rotation to get the closest position to\r\n     */\r\n    getClosestPosition(position, rotation) {\r\n        /* It's a bit hacky, but the easiest way to get the rotation of the camera is just briefly\r\n         change the rotation to look at the center and then get the rotation. */\r\n        this.object.getRotationWorld(tempquat);\r\n        this.object.lookAt(this._origin);\r\n        this.object.getRotationWorld(tempquat2);\r\n        if (quat.dot(tempquat, tempquat2) < 0) {\r\n            quat.scale(tempquat2, tempquat2, -1); /* Negate to ensure shortest path */\r\n        }\r\n        this.object.setRotationWorld(tempquat);\r\n        /* Calculate the direction from the center of orbit to the current camera position */\r\n        const directionToCamera = vec3.create();\r\n        vec3.subtract(directionToCamera, position, this._origin);\r\n        vec3.normalize(directionToCamera, directionToCamera);\r\n        /* Scale this direction by the radius of your orbital sphere to get the nearest point on the sphere */\r\n        const nearestPointOnSphere = vec3.create();\r\n        vec3.scale(nearestPointOnSphere, directionToCamera, this.radial);\r\n        vec3.add(nearestPointOnSphere, nearestPointOnSphere, this._origin);\r\n        vec3.copy(position, nearestPointOnSphere);\r\n        quat.copy(rotation, tempquat2);\r\n    }\r\n    /**\r\n     * Set the camera position based on the given position and calculate the rotation.\r\n     * @param cameraPosition the position to set the camera to\r\n     */\r\n    setPosition(cameraPosition) {\r\n        const centerOfOrbit = this._origin;\r\n        /* Compute the direction vector */\r\n        vec3.subtract(tempVec3, cameraPosition, centerOfOrbit);\r\n        vec3.normalize(tempVec3, tempVec3);\r\n        /* Compute the azimuth angle (in radians) */\r\n        const azimuth = Math.atan2(tempVec3[0], tempVec3[2]);\r\n        /* Compute the polar angle (in radians) */\r\n        const polar = Math.acos(tempVec3[1]);\r\n        const azimuthDeg = rad2deg(azimuth);\r\n        /* Polar is inverted to match the orbital camera */\r\n        const polarDeg = 90 - rad2deg(polar);\r\n        this._azimuth = azimuthDeg;\r\n        this._polar = polarDeg;\r\n    }\r\n    /**\r\n     * Update the camera position based on the current azimuth,\r\n     * polar and radial values\r\n     */\r\n    _updateCamera() {\r\n        const azimuthInRadians = deg2rad(this._azimuth);\r\n        const polarInRadians = deg2rad(this._polar);\r\n        tempVec[0] = this.radial * Math.sin(azimuthInRadians) * Math.cos(polarInRadians);\r\n        tempVec[1] = this.radial * Math.sin(polarInRadians);\r\n        tempVec[2] = this.radial * Math.cos(azimuthInRadians) * Math.cos(polarInRadians);\r\n        this.object.setPositionWorld(tempVec);\r\n        this.object.translateWorld(this._origin);\r\n        this.object.lookAt(this._origin);\r\n    }\r\n    /* Mouse Event Handlers */\r\n    _onMouseDown = (e) => {\r\n        window.addEventListener('mouseup', this._onMouseUp);\r\n        window.addEventListener('mousemove', this._onMouseMove);\r\n        if (e.button === this.mouseButtonIndex) {\r\n            this._mouseDown = true;\r\n            document.body.style.cursor = 'grabbing';\r\n            if (e.button === 1) {\r\n                e.preventDefault(); /* to prevent scrolling */\r\n                return false;\r\n            }\r\n        }\r\n    };\r\n    _onMouseUp = (e) => {\r\n        window.removeEventListener('mouseup', this._onMouseUp);\r\n        window.removeEventListener('mousemove', this._onMouseMove);\r\n        if (e.button === this.mouseButtonIndex) {\r\n            this._mouseDown = false;\r\n            document.body.style.cursor = 'initial';\r\n        }\r\n    };\r\n    _onMouseMove = (e) => {\r\n        if (this.active && this._mouseDown) {\r\n            if (this.active && this._mouseDown) {\r\n                this._azimuthSpeed = -(e.movementX * this.xSensitivity);\r\n                this._polarSpeed = e.movementY * this.ySensitivity;\r\n            }\r\n        }\r\n    };\r\n    _onMouseScroll = (e) => {\r\n        e.preventDefault(); /* to prevent scrolling */\r\n        this.radial *= 1 - e.deltaY * this.zoomSensitivity * -0.001;\r\n        this.radial = Math.min(this.maxZoom, Math.max(this.minZoom, this.radial));\r\n        this._updateCamera();\r\n    };\r\n    /* Touch event handlers */\r\n    _onTouchStart = (e) => {\r\n        if (e.touches.length === 1) {\r\n            /* to prevent scrolling and allow us to track touch movement */\r\n            e.preventDefault();\r\n            this._touchStartX = e.touches[0].clientX;\r\n            this._touchStartY = e.touches[0].clientY;\r\n            this._mouseDown = true; /* Treat touch like mouse down */\r\n        }\r\n        else if (e.touches.length === 2) {\r\n            /* Calculate initial pinch distance */\r\n            this._initialPinchDistance = this._getDistanceBetweenTouches(e.touches);\r\n            e.preventDefault(); /* Prevent default pinch actions */\r\n        }\r\n    };\r\n    _onTouchMove = (e) => {\r\n        if (!this.active || !this._mouseDown) {\r\n            return;\r\n        }\r\n        e.preventDefault(); /* to prevent moving the page */\r\n        if (e.touches.length === 1) {\r\n            const deltaX = e.touches[0].clientX - this._touchStartX;\r\n            const deltaY = e.touches[0].clientY - this._touchStartY;\r\n            this._azimuthSpeed = -(deltaX * this.xSensitivity);\r\n            this._polarSpeed = deltaY * this.ySensitivity;\r\n            this._touchStartX = e.touches[0].clientX;\r\n            this._touchStartY = e.touches[0].clientY;\r\n        }\r\n        else if (e.touches.length === 2) {\r\n            /* Handle pinch zoom */\r\n            const currentPinchDistance = this._getDistanceBetweenTouches(e.touches);\r\n            const pinchScale = this._initialPinchDistance / currentPinchDistance;\r\n            this.radial *= pinchScale;\r\n            this.radial = Math.min(this.maxZoom, Math.max(this.minZoom, this.radial));\r\n            this._updateCamera();\r\n            /* Update initial pinch distance for next move */\r\n            this._initialPinchDistance = currentPinchDistance;\r\n        }\r\n    };\r\n    _onTouchEnd = (e) => {\r\n        if (e.touches.length < 2) {\r\n            this._mouseDown = false; /* Treat touch end like mouse up */\r\n        }\r\n        if (e.touches.length === 1) {\r\n            /* Prepare for possible single touch movement */\r\n            this._touchStartX = e.touches[0].clientX;\r\n            this._touchStartY = e.touches[0].clientY;\r\n        }\r\n    };\r\n    /**\r\n     * Helper function to calculate the distance between two touch points\r\n     * @param touches list of touch points\r\n     * @returns distance between the two touch points\r\n     */\r\n    _getDistanceBetweenTouches(touches) {\r\n        const dx = touches[0].clientX - touches[1].clientX;\r\n        const dy = touches[0].clientY - touches[1].clientY;\r\n        return Math.sqrt(dx * dx + dy * dy);\r\n    }\r\n}\r\n__decorate([\r\n    property.int()\r\n], OrbitalCamera.prototype, \"mouseButtonIndex\", void 0);\r\n__decorate([\r\n    property.float(5)\r\n], OrbitalCamera.prototype, \"radial\", void 0);\r\n__decorate([\r\n    property.float()\r\n], OrbitalCamera.prototype, \"minElevation\", void 0);\r\n__decorate([\r\n    property.float(89.99)\r\n], OrbitalCamera.prototype, \"maxElevation\", void 0);\r\n__decorate([\r\n    property.float()\r\n], OrbitalCamera.prototype, \"minZoom\", void 0);\r\n__decorate([\r\n    property.float(10.0)\r\n], OrbitalCamera.prototype, \"maxZoom\", void 0);\r\n__decorate([\r\n    property.float(0.5)\r\n], OrbitalCamera.prototype, \"xSensitivity\", void 0);\r\n__decorate([\r\n    property.float(0.5)\r\n], OrbitalCamera.prototype, \"ySensitivity\", void 0);\r\n__decorate([\r\n    property.float(0.02)\r\n], OrbitalCamera.prototype, \"zoomSensitivity\", void 0);\r\n__decorate([\r\n    property.float(0.9)\r\n], OrbitalCamera.prototype, \"damping\", void 0);\r\nexport { OrbitalCamera };\r\n//# sourceMappingURL=orbital-camera.js.map", "import { Component, Property } from '@wonderlandengine/api';\r\n\r\n/**\r\n * Fruit Spawner Component\r\n * Spawns fruit objects at regular intervals when activated by controller button press\r\n */\r\nexport class FruitSpawner extends Component {\r\n    static TypeName = 'fruit-spawner';\r\n    \r\n    static Properties = {\r\n        /** Array of fruit prefabs to spawn randomly */\r\n        fruitPrefabs: Property.string(''),  // Comma-separated object names\r\n        /** Spawn interval in seconds */\r\n        spawnInterval: Property.float(3.0),\r\n        /** Spawn position offset from this object */\r\n        spawnOffset: Property.vector3(),\r\n        /** Random spawn area size (X, Y, Z range) */\r\n        randomSpawnArea: Property.vector3(),\r\n        /** Button to activate spawning (e.g., 'squeeze', 'trigger') */\r\n        activationButton: Property.string('trigger'),\r\n        /** Hand to use ('left' or 'right') */\r\n        handedness: Property.enum(['left', 'right'], 'right'),\r\n    };\r\n\r\n    start() {\r\n        this.isSpawning = false;\r\n        this.timeSinceLastSpawn = 0;\r\n        this.buttonPressed = false;\r\n        this.spacePressed = false;\r\n        this.lastSpawnTime = 0;\r\n        this.minSpawnInterval = 1.0; // Minimum 1 second between spawns\r\n        \r\n        // TEMPORARY: Keyboard support for browser testing\r\n        window.addEventListener('keydown', (e) => {\r\n            if (e.code === 'Space' && !this.spacePressed) {\r\n                this.spacePressed = true;\r\n                this.isSpawning = !this.isSpawning;\r\n                console.log('Spawning toggled (spacebar):', this.isSpawning);\r\n                if (this.isSpawning) {\r\n                    this.spawnFruit();\r\n                    this.timeSinceLastSpawn = 0;\r\n                }\r\n            }\r\n        });\r\n        window.addEventListener('keyup', (e) => {\r\n            if (e.code === 'Space') {\r\n                this.spacePressed = false;\r\n            }\r\n        });\r\n        \r\n        // Parse fruit prefab names\r\n        this.fruitObjects = [];\r\n        if (this.fruitPrefabs) {\r\n            console.log('Raw fruitPrefabs string:', this.fruitPrefabs);\r\n            const names = this.fruitPrefabs.split(',').map(s => s.trim());\r\n            console.log('Parsed prefab names:', names);\r\n            \r\n            // Get all objects in the scene\r\n            const allObjects = [];\r\n            const processObject = (obj) => {\r\n                allObjects.push(obj);\r\n                for (let i = 0; i < obj.children.length; i++) {\r\n                    processObject(obj.children[i]);\r\n                }\r\n            };\r\n            processObject(this.engine.scene);\r\n            \r\n            console.log('All objects in scene:', allObjects.map(o => ({\r\n                name: o.name,\r\n                type: o.type,\r\n                id: o.objectId\r\n            })));\r\n            \r\n            // Try to find objects by name\r\n            for (let name of names) {\r\n                // Try exact match first\r\n                let found = allObjects.find(obj => obj.name === name);\r\n                \r\n                // If not found, try partial match\r\n                if (!found) {\r\n                    found = allObjects.find(obj => \r\n                        obj.name && \r\n                        (obj.name.includes(name) || name.includes(obj.name.split('_')[0]))\r\n                    );\r\n                }\r\n                \r\n                if (found) {\r\n                    this.fruitObjects.push(found);\r\n                    console.log('\u2713 Found fruit prefab:', name, 'as object:', found);\r\n                } else {\r\n                    console.warn('\u2717 Fruit prefab not found in scene:', name);\r\n                }\r\n            }\r\n        }\r\n        \r\n        if (this.fruitObjects.length === 0) {\r\n            console.error('No fruit prefabs found! Add comma-separated object names to fruitPrefabs property.');\r\n        }\r\n        \r\n        // Get XR session when available\r\n        this.engine.onXRSessionStart.add(this.onXRSessionStart.bind(this));\r\n        this.engine.onXRSessionEnd.add(this.onXRSessionEnd.bind(this));\r\n        \r\n        console.log('FruitSpawner initialized with', this.fruitObjects.length, 'fruit types');\r\n    }\r\n\r\n    onXRSessionStart(session, mode) {\r\n        console.log('XR Session started, mode:', mode);\r\n        this.xrSession = session;\r\n    }\r\n\r\n    onXRSessionEnd() {\r\n        console.log('XR Session ended');\r\n        this.xrSession = null;\r\n        this.isSpawning = false;\r\n    }\r\n\r\n    update(dt) {\r\n        // Check for button press from XR controller\r\n        if (this.xrSession) {\r\n            this.checkButtonPress();\r\n        }\r\n\r\n        // Handle spawning if active\r\n        if (this.isSpawning) {\r\n            this.timeSinceLastSpawn += dt;\r\n            \r\n            // Only spawn if enough time has passed since last spawn\r\n            const currentTime = performance.now() / 1000; // Convert to seconds\r\n            if (currentTime - this.lastSpawnTime >= this.spawnInterval) {\r\n                this.spawnFruit();\r\n                this.lastSpawnTime = currentTime;\r\n                this.timeSinceLastSpawn = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    checkButtonPress() {\r\n        if (!this.xrSession) return;\r\n\r\n        const inputSources = this.xrSession.inputSources;\r\n        \r\n        for (let i = 0; i < inputSources.length; i++) {\r\n            const inputSource = inputSources[i];\r\n            \r\n            // Check if this is the correct hand\r\n            if (inputSource.handedness !== this.handedness) continue;\r\n            \r\n            const gamepad = inputSource.gamepad;\r\n            if (!gamepad) continue;\r\n\r\n            // Check for button press\r\n            let buttonPressed = false;\r\n            \r\n            // For Meta Quest 2: trigger = index 0, squeeze = index 1\r\n            if (this.activationButton === 'trigger' && gamepad.buttons[0]) {\r\n                buttonPressed = gamepad.buttons[0].pressed;\r\n            } else if (this.activationButton === 'squeeze' && gamepad.buttons[1]) {\r\n                buttonPressed = gamepad.buttons[1].pressed;\r\n            }\r\n\r\n            // Toggle spawning on button press (not hold)\r\n            if (buttonPressed && !this.buttonPressed) {\r\n                this.isSpawning = !this.isSpawning;\r\n                console.log('Spawning toggled:', this.isSpawning);\r\n                \r\n                if (this.isSpawning) {\r\n                    // Spawn first fruit immediately\r\n                    this.spawnFruit();\r\n                    this.timeSinceLastSpawn = 0;\r\n                }\r\n            }\r\n            \r\n            this.buttonPressed = buttonPressed;\r\n        }\r\n    }\r\n\r\n    spawnFruit() {\r\n        if (!this.fruitObjects || this.fruitObjects.length === 0) {\r\n            console.warn('No fruit prefabs available to spawn');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            // Pick a random fruit from the array\r\n            const randomIndex = Math.floor(Math.random() * this.fruitObjects.length);\r\n            const fruitPrefab = this.fruitObjects[randomIndex];\r\n\r\n            // Clone the fruit prefab\r\n            const fruit = this.engine.scene.addObject(this.object.parent);\r\n            \r\n            // Get the spawner's position FIRST (which is already in the sky)\r\n            const spawnPos = new Float32Array(3);\r\n            this.object.getPositionWorld(spawnPos);\r\n            \r\n            // Add some randomness for variety (horizontal spread)\r\n            const spread = 2.0; // Spread in meters\r\n            spawnPos[0] += (Math.random() - 0.5) * spread;\r\n            spawnPos[2] += (Math.random() - 0.5) * spread;\r\n            // Keep the Y position from the spawner (already at correct height)\r\n            \r\n            // Set the position BEFORE copying components\r\n            fruit.setPositionWorld(spawnPos);\r\n            \r\n            // Random rotation for variety\r\n            const rotation = new Float32Array(4);\r\n            const randomAngle = Math.random() * Math.PI * 2;\r\n            rotation[0] = 0;\r\n            rotation[1] = Math.sin(randomAngle / 2);\r\n            rotation[2] = 0;\r\n            rotation[3] = Math.cos(randomAngle / 2);\r\n            fruit.setRotationWorld(rotation);\r\n            \r\n            // Copy components and children from prefab (this should preserve our position)\r\n            this.cloneObject(fruitPrefab, fruit);\r\n            \r\n            // Re-apply position after cloning to ensure it sticks\r\n            fruit.setPositionWorld(spawnPos);\r\n            console.log('Spawning at position:', spawnPos);\r\n            \r\n            // Activate physics LAST\r\n            const physxComp = fruit.getComponent('physx');\r\n            if (physxComp) {\r\n                try {\r\n                    physxComp.active = true;\r\n                } catch (e) {\r\n                    console.warn('Error activating physics:', e);\r\n                }\r\n            }\r\n            \r\n            // Log only in development\r\n            if (process.env.NODE_ENV === 'development') {\r\n                console.log('Fruit spawned at:', spawnPos);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error spawning fruit:', error);\r\n        }\r\n    }\r\n\r\n    cloneObject(source, target) {\r\n        // Copy mesh component\r\n        const meshComp = source.getComponent('mesh');\r\n        if (meshComp) {\r\n            const newMesh = target.addComponent('mesh');\r\n            newMesh.mesh = meshComp.mesh;\r\n            newMesh.material = meshComp.material;\r\n        }\r\n        \r\n        // Copy physics component (but keep it inactive initially)\r\n        const physxComp = source.getComponent('physx');\r\n        if (physxComp) {\r\n            const newPhysx = target.addComponent('physx');\r\n            newPhysx.shape = physxComp.shape;\r\n            newPhysx.mass = physxComp.mass;\r\n            newPhysx.kinematic = physxComp.kinematic;\r\n            newPhysx.active = false; // Start inactive\r\n        }\r\n        \r\n        // Copy collision component if present\r\n        const collisionComp = source.getComponent('collision');\r\n        if (collisionComp) {\r\n            const newCollision = target.addComponent('collision');\r\n            newCollision.collider = collisionComp.collider;\r\n            newCollision.group = collisionComp.group;\r\n        }\r\n        \r\n        // Recursively clone children\r\n        for (let child of source.children) {\r\n            const newChild = this.engine.scene.addObject(target);\r\n            this.cloneObject(child, newChild);\r\n        }\r\n    }\r\n\r\n    onDestroy() {\r\n        this.isSpawning = false;\r\n    }\r\n}", "/**\r\n * /!\\ This file is auto-generated.\r\n *\r\n * This is the entry point of your standalone application.\r\n *\r\n * There are multiple tags used by the editor to inject code automatically:\r\n *     - `wle:auto-imports:start` and `wle:auto-imports:end`: The list of import statements\r\n *     - `wle:auto-register:start` and `wle:auto-register:end`: The list of component to register\r\n */\r\n\r\n/* wle:auto-imports:start */\nimport {MouseLookComponent} from '@wonderlandengine/components';\nimport {WasdControlsComponent} from '@wonderlandengine/components';\nimport {FruitSpawner} from './fruit-spawner.js';\n/* wle:auto-imports:end */\r\n\r\nexport default function(engine) {\r\n/* wle:auto-register:start */\nengine.registerComponent(MouseLookComponent);\nengine.registerComponent(WasdControlsComponent);\nengine.registerComponent(FruitSpawner);\n/* wle:auto-register:end */\r\n}\r\n"],
  "mappings": "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K,KAAK,KAAK,KAAK,KAAK;AAClC,UAAI,CAAC,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK;AAClC,UAAI,CAAC,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK;AAClC,UAAI,CAAC,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK;AAClC;AAAA,IACF,KAAK;AACH,UAAI,CAAC,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK;AAClC,UAAI,CAAC,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK;AAClC,UAAI,CAAC,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK;AAClC,UAAI,CAAC,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK;AAClC;AAAA,IACF,KAAK;AACH,UAAI,CAAC,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK;AAClC,UAAI,CAAC,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK;AAClC,UAAI,CAAC,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK;AAClC,UAAI,CAAC,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK;AAClC;AAAA,IACF,KAAK;AACH,UAAI,CAAC,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK;AAClC,UAAI,CAAC,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK;AAClC,UAAI,CAAC,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK;AAClC,UAAI,CAAC,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK;AAClC;AAAA,IACF,KAAK;AACH,UAAI,CAAC,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK;AAClC,UAAI,CAAC,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK;AAClC,UAAI,CAAC,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK;AAClC,UAAI,CAAC,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK;AAClC;AAAA,IACF,KAAK;AACH,UAAI,CAAC,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK;AAClC,UAAI,CAAC,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK;AAClC,UAAI,CAAC,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK;AAClC,UAAI,CAAC,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK;AAClC;AAAA,IACF;AACE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",
  "names": ["earcut", "equals", "len", "Component", "property", "__decorate", "tempQuat", "Component", "property", "Component", "Emitter", "Component", "Emitter", "Component", "Emitter", "property", "create", "create", "len", "scale", "add", "clone", "copy", "create", "dot", "equals", "exactEquals", "fromValues", "identity", "invert", "len", "length", "lerp", "mul", "multiply", "normalize", "random", "rotateX", "rotateY", "rotateZ", "scale", "set", "slerp", "sqrLen", "squaredLength", "str", "add", "clone", "copy", "create", "equals", "exactEquals", "fromValues", "mul", "multiply", "rotateX", "rotateY", "rotateZ", "round", "scale", "set", "str", "sub", "subtract", "create", "clone", "fromValues", "copy", "set", "add", "subtract", "multiply", "round", "scale", "len", "angle", "rotateX", "rotateY", "rotateZ", "str", "exactEquals", "equals", "sub", "mul", "offset", "create", "clone", "fromValues", "copy", "set", "add", "scale", "length", "squaredLength", "normalize", "len", "dot", "lerp", "exactEquals", "forEach", "create", "offset", "create", "identity", "dot", "multiply", "rotateX", "rotateY", "rotateZ", "scale", "slerp", "random", "invert", "str", "clone", "fromValues", "copy", "set", "add", "mul", "lerp", "length", "len", "squaredLength", "sqrLen", "normalize", "exactEquals", "equals", "add", "clone", "conjugate", "copy", "create", "dot", "equals", "exactEquals", "fromRotation", "fromRotationTranslation", "fromTranslation", "fromValues", "getTranslation", "identity", "invert", "len", "length", "lerp", "mul", "multiply", "normalize", "rotateX", "rotateY", "rotateZ", "scale", "set", "sqrLen", "squaredLength", "str", "translate", "create", "clone", "fromValues", "fromRotationTranslation", "fromTranslation", "fromRotation", "copy", "identity", "set", "getTranslation", "translate", "rotateX", "rotateY", "rotateZ", "add", "multiply", "mul", "scale", "dot", "lerp", "invert", "squaredLength", "conjugate", "length", "len", "sqrLen", "normalize", "str", "exactEquals", "equals", "Component", "Emitter", "property", "__decorate", "Component", "Emitter", "property", "__decorate", "tempVec", "Emitter", "Component", "canvas", "dist", "property", "Component", "property", "__decorate", "Component", "property", "Component", "Component", "Component", "property", "__decorate", "Component", "property", "Component", "property", "__decorate", "Component", "property", "Component", "Component", "Emitter", "property", "Component", "tempVec", "tempVec2", "Component", "tempVec", "tempVec2", "Emitter", "AudioChannel", "PlayState", "Emitter", "__decorate", "PanningType", "Component", "Emitter", "property", "Component", "Type", "Component", "property", "__decorate", "Component", "property", "Component", "property", "__decorate", "Component", "canvas", "property", "Component", "property", "__decorate", "Component", "property", "Component", "property", "__decorate", "Component", "a", "property", "Component", "Type", "Component", "direction", "Type", "Component", "property", "__decorate", "Component", "property", "Component", "tempQuat", "Component", "Component", "property", "__decorate", "Component", "property", "Component", "Type", "Component", "Type", "CollisionComponent", "Component", "Emitter", "Mesh", "MeshAttribute", "MeshComponent", "MeshIndexType", "property", "__decorate", "tempVec3", "earcut", "Mesh", "MeshIndexType", "MeshAttribute", "tempVec3", "Component", "Emitter", "MeshComponent", "CollisionComponent", "__decorate", "property", "Component", "property", "__decorate", "Component", "lookAt", "offset", "dist", "dot", "property", "Component", "property", "__decorate", "Component", "property", "Component", "Emitter", "property", "__decorate", "Component", "Emitter", "min", "max", "property", "Component", "property", "__decorate", "preventDefault", "tempVec", "tempVec3", "Component", "canvas", "property", "Component", "Property", "Component", "Property"]
}
